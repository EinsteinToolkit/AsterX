# Schedule definitions for thorn Z4c

STORAGE: chi
STORAGE: gamma_tilde
STORAGE: K_hat
STORAGE: A_tilde
STORAGE: Gam_tilde
STORAGE: Theta
STORAGE: alphaG
STORAGE: betaG

STORAGE: ZtC
STORAGE: HC
STORAGE: MtC

STORAGE: chi_rhs
STORAGE: gamma_tilde_rhs
STORAGE: K_hat_rhs
STORAGE: A_tilde_rhs
STORAGE: Gam_tilde_rhs
STORAGE: Theta_rhs
STORAGE: alphaG_rhs
STORAGE: betaG_rhs



SCHEDULE Z4c_Initial1 AT initial AFTER ADMBase_PostInitial
{
  LANG: C
  READS: ADMBase::metric(everywhere)
  READS: ADMBase::curv(everywhere)
  READS: ADMBase::lapse(everywhere)
  READS: ADMBase::shift(everywhere)
  WRITES: chi(everywhere)
  WRITES: gamma_tilde(everywhere)
  WRITES: K_hat(everywhere)
  WRITES: A_tilde(everywhere)
  WRITES: Theta(everywhere)
  WRITES: alphaG(everywhere)
  WRITES: betaG(everywhere)
  SYNC: chi
  SYNC: gamma_tilde
  SYNC: K_hat
  SYNC: A_tilde
  SYNC: Theta
  SYNC: alphaG
  SYNC: betaG
} "Convert ADM to Z4c variables, part 1"

SCHEDULE Z4c_Initial2 AT initial AFTER Z4c_Initial1
{
  LANG: C
  READS: gamma_tilde(everywhere)
  WRITES: Gam_tilde(interior)
  SYNC: Gam_tilde
} "Convert ADM to Z4c variables, part 2"

SCHEDULE Z4c_Boundaries AT initial AFTER Z4c_Initial2
{
  LANG: C
  WRITES: chi(boundary)
  WRITES: gamma_tilde(boundary)
  WRITES: K_hat(boundary)
  WRITES: A_tilde(boundary)
  WRITES: Gam_tilde(boundary)
  WRITES: Theta(boundary)
  WRITES: alphaG(boundary)
  WRITES: betaG(boundary)
} "Apply boundary conditions to Z4c variables"

SCHEDULE Z4c_Enforce AT initial AFTER Z4c_Boundaries
{
  LANG: C
  READS: gamma_tilde(everywhere)
  READS: A_tilde(everywhere)
  WRITES: gamma_tilde(everywhere)
  WRITES: A_tilde(everywhere)
} "Enforce algebraic Z4c constraints"



SCHEDULE Z4c_Constraints AT poststep
{
  LANG: C
  READS: chi(everywhere)
  READS: gamma_tilde(everywhere)
  READS: K_hat(everywhere)
  READS: A_tilde(everywhere)
  READS: Gam_tilde(everywhere)
  READS: Theta(everywhere)
  WRITES: ZtC(interior)
  WRITES: HC(interior)
  WRITES: MtC(interior)
} "Calculate Z4c constraints"

SCHEDULE Z4c_ADM AT poststep
{
  LANG: C
  READS: chi(everywhere)
  READS: gamma_tilde(everywhere)
  READS: K_hat(everywhere)
  READS: A_tilde(everywhere)
  READS: Theta(everywhere)
  READS: alphaG(everywhere)
  READS: betaG(everywhere)
  WRITES: ADMBase::metric(everywhere)
  WRITES: ADMBase::curv(everywhere)
  WRITES: ADMBase::lapse(everywhere)
  WRITES: ADMBase::shift(everywhere)
  WRITES: ADMBase::dtshift(everywhere)
} "Convert Z4c to ADM variables"

SCHEDULE Z4c_RHS AT poststep
{
  LANG: C
  READS: chi(everywhere)
  READS: gamma_tilde(everywhere)
  READS: K_hat(everywhere)
  READS: A_tilde(everywhere)
  READS: Gam_tilde(everywhere)
  READS: Theta(everywhere)
  READS: alphaG(everywhere)
  READS: betaG(everywhere)
  WRITES: chi_rhs(interior)
  WRITES: gamma_tilde_rhs(interior)
  WRITES: K_hat_rhs(interior)
  WRITES: A_tilde_rhs(interior)
  WRITES: Gam_tilde_rhs(interior)
  WRITES: Theta_rhs(interior)
  WRITES: alphaG_rhs(interior)
  WRITES: betaG_rhs(interior)
  SYNC: chi_rhs
  SYNC: gamma_tilde_rhs
  SYNC: K_hat_rhs
  SYNC: A_tilde_rhs
  SYNC: Gam_tilde_rhs
  SYNC: Theta_rhs
  SYNC: alphaG_rhs
  SYNC: betaG_rhs
} "Calculate Z4c RHS"
