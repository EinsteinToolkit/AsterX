# Choose an agent virtual image
pool:
  vmImage: ubuntu-16.04

steps:
- script: |
    set -euxo pipefail
    sudo apt install gfortran libopenmpi-dev
    gcc --version
    g++ --version
    gfortran --version
    mpirun --version
  displayName: Install system packages
- script: |
    set -euxo pipefail
    wget https://github.com/Kitware/CMake/releases/download/v3.14.5/cmake-3.14.5-Linux-x86_64.tar.gz
    tar xzf cmake-3.14.5-Linux-x86_64.tar.gz
    sudo ln -fs cmake-3.14.5-Linux-x86_64/bin/cmake /usr/local/bin/cmake
    whereis cmake || true
    which cmake || true
    ls -l /usr/bin/cmake || true
    ls -l /usr/local/bin/cmake || true
    cmake --version
  displayName: Install cmake
- script: |
    set -euxo pipefail
    wget https://github.com/AMReX-Codes/amrex/archive/19.07.tar.gz
    tar xzf 19.07.tar.gz
    cd amrex-19.07
    mkdir build
    cd build
    cmake -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ -DCMAKE_Fortran_COMPILER=gfortran -DENABLE_OMP=ON -DCMAKE_INSTALL_PREFIX=$HOME/amrex ..
    make -j2
    make -j2 install
    export AMREX_DIR=$HOME/amrex
  displayName: Install AMReX
- script: |
    set -euxo pipefail
    wget https://raw.githubusercontent.com/gridaphobe/CRL/ET_2019_03/GetComponents
    chmod a+x GetComponents
    ./GetComponents --parallel cactusamrex/amrex.th
    cd Cactus
    echo 'ubuntu' >$HOME/.hostname
    cp cactusamrex/defs.local.ini simfactory/etc/defs.local.ini
    cp cactusamrex/ubuntu.ini simfactory/mdb/machines/ubuntu.ini
    cp cactusamrex/ubuntu.cfg simfactory/mdb/optionlists/ubuntu.cfg
    cp cactusamrex/ubuntu.sub simfactory/mdb/submitscripts/ubuntu.sub
    cp cactusamrex/ubuntu.run simfactory/mdb/runscripts/ubuntu.run
    ./simfactory/bin/sim build -j2 --thornlist=$HOME/cactusamrex/amrex.th
  displayName: Build Cactus
# - script: |
#     export PATH=$HOME/.local/bin:$PATH
#     stack --no-terminal --install-ghc test --only-dependencies
#   displayName: Build Dependencies
# - script: |
#     export PATH=$HOME/.local/bin:$PATH
#     # Build the package, its tests, and its docs and run the tests
#     stack test
#     stack run
#     stack bench
#     stack haddock --no-haddock-deps
#     stack install
#   displayName: Test Package
