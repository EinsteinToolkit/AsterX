/* Declaration of variables and function prototypes for thorn SetBetaEquilibrium

   N.B.: prototypes for scheduled functions and functions provided or used by
         this thorn are automatically generated by Cactus and MUST NOT be placed
         here in order to avoid conflicts.                                      */

#ifndef SETBETAEQUILIBRIUM_HH
#define SETBETAEQUILIBRIUM_HH

#include <cctk.h>
#include <vector>

using std::vector;


/* Conversion factors from the initial data units to geometrized ("Cactus")
   units. The initial data units are mostly CGS, with a few exceptions (e.g.,
   temperature is in MeV). Please refer to the documentation
   (https://compose.obspm.fr/manual) for further details.

   N.B.: you have to ***MULTIPLY*** the quantities read from the EOS table by
         the following conversion factors in order to convert those quantities
         into geometrized ("Cactus") units.                                     */
namespace SetBetaEquilibrium_TableToGeom {
    // Basic quantities in SI units
    const CCTK_REAL G     = 6.67408e-11;     // m^3/(kgÂ·s^2)  // Value used in Compose
    const CCTK_REAL c     = 2.99792458e+08;  // m/s
    const CCTK_REAL MSun  = 1.98847e+30;     // kg
    const CCTK_REAL MeV_J = 1.602176634e-13;  // One MeV in Joules

    // Helper quantity
    const CCTK_REAL c2 = c*c;

    /* Logarithmic conversion factors. The leftmost hard-coded numerical factors
       are needed for the intermediate conversion from CGS to SI, while the
       rightmost ones are needed in order to take the logarithm of something of
       order ~1, which is more precise than taking the logarithm of a very small
       number.                                                                  */
    const CCTK_REAL rho_SItoGeom = G*G*G*MSun*MSun/(c2*c2*c2);  // ~= 1.62e-21
}



// Prototype for Lagrange_interp()
CCTK_REAL Lagrange_interp(const vector<CCTK_REAL> &xvec,
                          const vector<CCTK_REAL> &yvec,
                          const CCTK_REAL         &x,
                          const CCTK_INT          &n);

#endif  // SETBETAEQUILIBRIUM_HH
