# Schedule definitions for thorn TestSymmetries

SCHEDULE TestSymmetries_Init AT initial
{
  LANG: C
  WRITES: var_vvv_ppp(interior)
  WRITES: var_vvc_ppp(interior)
  WRITES: var_vcv_ppp(interior)
  WRITES: var_vcc_ppp(interior)
  WRITES: var_cvv_ppp(interior)
  WRITES: var_cvc_ppp(interior)
  WRITES: var_ccv_ppp(interior)
  WRITES: var_ccc_ppp(interior)
  WRITES: var_vvv_mmm(interior)
  WRITES: var_vvc_mmm(interior)
  WRITES: var_vcv_mmm(interior)
  WRITES: var_vcc_mmm(interior)
  WRITES: var_cvv_mmm(interior)
  WRITES: var_cvc_mmm(interior)
  WRITES: var_ccv_mmm(interior)
  WRITES: var_ccc_mmm(interior)
} "Initialize variables"

SCHEDULE TestSymmetries_Boundaries AT initial AFTER TestSymmetries_Init
{
  LANG: C
  WRITES: var_vvv_ppp(boundary)
  WRITES: var_vvc_ppp(boundary)
  WRITES: var_vcv_ppp(boundary)
  WRITES: var_vcc_ppp(boundary)
  WRITES: var_cvv_ppp(boundary)
  WRITES: var_cvc_ppp(boundary)
  WRITES: var_ccv_ppp(boundary)
  WRITES: var_ccc_ppp(boundary)
  WRITES: var_vvv_mmm(boundary)
  WRITES: var_vvc_mmm(boundary)
  WRITES: var_vcv_mmm(boundary)
  WRITES: var_vcc_mmm(boundary)
  WRITES: var_cvv_mmm(boundary)
  WRITES: var_cvc_mmm(boundary)
  WRITES: var_ccv_mmm(boundary)
  WRITES: var_ccc_mmm(boundary)
} "Apply boundary conditions"

SCHEDULE TestSymmetries_Sync AT initial AFTER TestSymmetries_Boundaries
{
  LANG: C
  OPTIONS: global
  SYNC: var_vvv_ppp
  SYNC: var_vvc_ppp
  SYNC: var_vcv_ppp
  SYNC: var_vcc_ppp
  SYNC: var_cvv_ppp
  SYNC: var_cvc_ppp
  SYNC: var_ccv_ppp
  SYNC: var_ccc_ppp
  SYNC: var_vvv_mmm
  SYNC: var_vvc_mmm
  SYNC: var_vcv_mmm
  SYNC: var_vcc_mmm
  SYNC: var_cvv_mmm
  SYNC: var_cvc_mmm
  SYNC: var_ccv_mmm
  SYNC: var_ccc_mmm
} "Synchronize"

SCHEDULE TestSymmetries_CheckInit AT initial AFTER TestSymmetries_Sync
{
  LANG: C
  OPTIONS: global
  # WRITES: check
} "Check variables (init)"

SCHEDULE TestSymmetries_Check AT initial AFTER TestSymmetries_CheckInit
{
  LANG: C
  READS: var_vvv_ppp(everywhere)
  READS: var_vvc_ppp(everywhere)
  READS: var_vcv_ppp(everywhere)
  READS: var_vcc_ppp(everywhere)
  READS: var_cvv_ppp(everywhere)
  READS: var_cvc_ppp(everywhere)
  READS: var_ccv_ppp(everywhere)
  READS: var_ccc_ppp(everywhere)
  READS: var_vvv_mmm(everywhere)
  READS: var_vvc_mmm(everywhere)
  READS: var_vcv_mmm(everywhere)
  READS: var_vcc_mmm(everywhere)
  READS: var_cvv_mmm(everywhere)
  READS: var_cvc_mmm(everywhere)
  READS: var_ccv_mmm(everywhere)
  READS: var_ccc_mmm(everywhere)
  # READS: check
  # WRITES: check
} "Check variables"

SCHEDULE TestSymmetries_CheckFinalize AT initial AFTER TestSymmetries_Check
{
  LANG: C
  OPTIONS: global
  # READS: check
} "Check variables (finalize)"
