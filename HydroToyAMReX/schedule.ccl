# Schedule definitions for thorn HydroToyAMReX

STORAGE: conserved[2]
STORAGE: primitive
STORAGE: flux_x flux_y flux_z



# Initial conditions

SCHEDULE HydroToyAMReX_Initialize AT initial
{
  LANG: C
  WRITES: conserved(interior)
  SYNC: conserved
} "Set up hydro initial conditions"

SCHEDULE HydroToyAMReX_EstimateError AT postinitial
{
  LANG: C
  READS: conserved(everywhere)
  WRITES: AMReX::regrid_error(interior)
} "Estimate local error for regridding initial conditions"



# Regridding

SCHEDULE HydroToyAMReX_Boundaries AT postregrid
{
  LANG: C
  SYNC: conserved
} "Apply boundary conditions after regridding"



# Dependent quantities

SCHEDULE GROUP HydroToyAMReX_OutputGroup AT poststep
{
} "Output HydroToy quantities"

  SCHEDULE HydroToyAMReX_Pressure IN HydroToyAMReX_OutputGroup
  {
    LANG: C
    READS: conserved(everywhere)
    WRITES: primitive(everywhere)
  } "Calculate pressure"

  SCHEDULE HydroToyAMReX_Fluxes IN HydroToyAMReX_OutputGroup AFTER HydroToyAMReX_Pressure
  {
    LANG: C
    READS: conserved(everywhere)
    READS: primitive(everywhere)
    WRITES: flux_x(interior) flux_y(interior) flux_z(interior)
  } "Calculate the hydro fluxes"

  SCHEDULE HydroToyAMReX_Output IN HydroToyAMReX_OutputGroup AFTER HydroToyAMReX_Fluxes
  {
    LANG: C
    READS: conserved(interior)
    READS: flux_x(interior) flux_y(interior) flux_z(interior)
    READS: AMReX::regrid_error(interior)
  } "Output grid data"

SCHEDULE HydroToyAMReX_EstimateError AT poststep
{
  LANG: C
  READS: conserved(everywhere)
  WRITES: AMReX::regrid_error(interior)
} "Estimate local error for regridding during evolution"



# Time stepping

SCHEDULE HydroToyAMReX_CopyConserved AT evol
{
  LANG: C
  READS: conserved_p(everywhere)
  WRITES: conserved(everywhere)
} "Copy conserved variables to current time level"

SCHEDULE HydroToyAMReX_Pressure AT evol AFTER HydroToyAMReX_CopyConserved
{
  LANG: C
  READS: conserved(everywhere)
  WRITES: primitive(everywhere)
} "Calculate pressure"

SCHEDULE HydroToyAMReX_Fluxes AT evol AFTER HydroToyAMReX_Pressure
{
  LANG: C
  READS: conserved(everywhere)
  READS: primitive(everywhere)
  WRITES: flux_x(interior) flux_y(interior) flux_z(interior)
} "Calculate the hydro fluxes"

SCHEDULE HydroToyAMReX_Evolve AT evol AFTER HydroToyAMReX_Fluxes
{
  LANG: C
  READS: conserved_p(interior)
  READS: flux_x(interior) flux_y(interior) flux_z(interior)
  WRITES: conserved(interior)
  SYNC: conserved
} "Evolve the hydro equations"



# Restriction

SCHEDULE HydroToyAMReX_Boundaries AT postrestrict
{
  LANG: C
  SYNC: conserved
} "Apply boundary conditions after restricting"
