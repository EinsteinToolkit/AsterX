# Schedule definitions for thorn HydroToyAMReX

# STORAGE: conserved[2]
# STORAGE: primitive
# STORAGE: flux_x flux_y flux_z



# Initial conditions

SCHEDULE HydroToyAMReX_Initialize AT initial
{
  LANG: C
  WRITES: conserved(interior)
  SYNC: conserved
} "Set up hydro initial conditions"

SCHEDULE HydroToyAMReX_Pressure AT initial AFTER HydroToyAMReX_Boundaries
{
  LANG: C
  READS: conserved(everywhere)
  WRITES: primitive(everywhere)
} "Calculate pressure"

SCHEDULE HydroToyAMReX_Fluxes AT initial AFTER HydroToyAMReX_Pressure
{
  LANG: C
  READS: conserved(everywhere)
  READS: primitive(everywhere)
  WRITES: flux_x(interior) flux_y(interior) flux_z(interior)
  SYNC: flux_x flux_y flux_z
} "Calculate the hydro fluxes"

SCHEDULE HydroToyAMReX_EstimateError AT postinitial AFTER HydroToyAMReX_Boundaries
{
  LANG: C
  READS: conserved(everywhere)
  WRITES: AMReX::regrid_error(interior)
} "Estimate local error for regridding initial conditions"



# Regridding

SCHEDULE HydroToyAMReX_Boundaries AT postregrid
{
  LANG: C
  SYNC: conserved
} "Apply boundary conditions after regridding"

SCHEDULE HydroToyAMReX_Pressure AT postregrid AFTER HydroToyAMReX_Boundaries
{
  LANG: C
  READS: conserved(everywhere)
  WRITES: primitive(everywhere)
} "Calculate pressure"

SCHEDULE HydroToyAMReX_Fluxes AT postregrid AFTER HydroToyAMReX_Pressure
{
  LANG: C
  READS: conserved(everywhere)
  READS: primitive(everywhere)
  WRITES: flux_x(interior) flux_y(interior) flux_z(interior)
  SYNC: flux_x flux_y flux_z
} "Calculate the hydro fluxes"



# Dependent quantities

SCHEDULE HydroToyAMReX_Pressure AT poststep
{
  LANG: C
  READS: conserved(everywhere)
  WRITES: primitive(everywhere)
} "Calculate pressure"

SCHEDULE HydroToyAMReX_Fluxes AT poststep AFTER HydroToyAMReX_Pressure
{
  LANG: C
  READS: conserved(everywhere)
  READS: primitive(everywhere)
  WRITES: flux_x(interior) flux_y(interior) flux_z(interior)
  SYNC: flux_x flux_y flux_z
} "Calculate the hydro fluxes"

# SCHEDULE HydroToyAMReX_Output AT poststep
# {
#   LANG: C
#   READS: conserved(everywhere)
# } "Output grid data"

SCHEDULE HydroToyAMReX_EstimateError AT poststep
{
  LANG: C
  READS: conserved(everywhere)
  WRITES: AMReX::regrid_error(interior)
} "Estimate local error for regridding during evolution"



# Time stepping

SCHEDULE HydroToyAMReX_Evolve AT evol
{
  LANG: C
  READS: conserved_p(everywhere)
  READS: flux_x(everywhere) flux_y(everywhere) flux_z(everywhere)
  WRITES: conserved(everywhere)
} "Evolve the hydro equations"



# Restriction

SCHEDULE HydroToyAMReX_Boundaries AT postrestrict
{
  LANG: C
  SYNC: conserved
} "Apply boundary conditions after restricting"
