Loop::loop_int<0,0,0>(cctkGH, [&](const Loop::PointDesc &p){
    const int i0 = p.i;
    const int i1 = p.j;
    const int i2 = p.k;
{
   /* 
    * NRPy+ Finite Difference Code Generation, Step 1 of 2: Read from main memory and compute finite difference stencils:
    */
   const double hDD00_i0_i1m1_i2m1 = hDD00GF_.ptr[hDD00GF_.offset(i0,i1-1,i2-1)];
   const double hDD00_i0m1_i1_i2m1 = hDD00GF_.ptr[hDD00GF_.offset(i0-1,i1,i2-1)];
   const double hDD00_i0_i1_i2m1 = hDD00GF_.ptr[hDD00GF_.offset(i0,i1,i2-1)];
   const double hDD00_i0p1_i1_i2m1 = hDD00GF_.ptr[hDD00GF_.offset(i0+1,i1,i2-1)];
   const double hDD00_i0_i1p1_i2m1 = hDD00GF_.ptr[hDD00GF_.offset(i0,i1+1,i2-1)];
   const double hDD00_i0m1_i1m1_i2 = hDD00GF_.ptr[hDD00GF_.offset(i0-1,i1-1,i2)];
   const double hDD00_i0_i1m1_i2 = hDD00GF_.ptr[hDD00GF_.offset(i0,i1-1,i2)];
   const double hDD00_i0p1_i1m1_i2 = hDD00GF_.ptr[hDD00GF_.offset(i0+1,i1-1,i2)];
   const double hDD00_i0m1_i1_i2 = hDD00GF_.ptr[hDD00GF_.offset(i0-1,i1,i2)];
   const double hDD00 = hDD00GF_.ptr[hDD00GF_.offset(i0,i1,i2)];
   const double hDD00_i0p1_i1_i2 = hDD00GF_.ptr[hDD00GF_.offset(i0+1,i1,i2)];
   const double hDD00_i0m1_i1p1_i2 = hDD00GF_.ptr[hDD00GF_.offset(i0-1,i1+1,i2)];
   const double hDD00_i0_i1p1_i2 = hDD00GF_.ptr[hDD00GF_.offset(i0,i1+1,i2)];
   const double hDD00_i0p1_i1p1_i2 = hDD00GF_.ptr[hDD00GF_.offset(i0+1,i1+1,i2)];
   const double hDD00_i0_i1m1_i2p1 = hDD00GF_.ptr[hDD00GF_.offset(i0,i1-1,i2+1)];
   const double hDD00_i0m1_i1_i2p1 = hDD00GF_.ptr[hDD00GF_.offset(i0-1,i1,i2+1)];
   const double hDD00_i0_i1_i2p1 = hDD00GF_.ptr[hDD00GF_.offset(i0,i1,i2+1)];
   const double hDD00_i0p1_i1_i2p1 = hDD00GF_.ptr[hDD00GF_.offset(i0+1,i1,i2+1)];
   const double hDD00_i0_i1p1_i2p1 = hDD00GF_.ptr[hDD00GF_.offset(i0,i1+1,i2+1)];
   const double hDD01_i0_i1m1_i2m1 = hDD01GF_.ptr[hDD01GF_.offset(i0,i1-1,i2-1)];
   const double hDD01_i0m1_i1_i2m1 = hDD01GF_.ptr[hDD01GF_.offset(i0-1,i1,i2-1)];
   const double hDD01_i0_i1_i2m1 = hDD01GF_.ptr[hDD01GF_.offset(i0,i1,i2-1)];
   const double hDD01_i0p1_i1_i2m1 = hDD01GF_.ptr[hDD01GF_.offset(i0+1,i1,i2-1)];
   const double hDD01_i0_i1p1_i2m1 = hDD01GF_.ptr[hDD01GF_.offset(i0,i1+1,i2-1)];
   const double hDD01_i0m1_i1m1_i2 = hDD01GF_.ptr[hDD01GF_.offset(i0-1,i1-1,i2)];
   const double hDD01_i0_i1m1_i2 = hDD01GF_.ptr[hDD01GF_.offset(i0,i1-1,i2)];
   const double hDD01_i0p1_i1m1_i2 = hDD01GF_.ptr[hDD01GF_.offset(i0+1,i1-1,i2)];
   const double hDD01_i0m1_i1_i2 = hDD01GF_.ptr[hDD01GF_.offset(i0-1,i1,i2)];
   const double hDD01 = hDD01GF_.ptr[hDD01GF_.offset(i0,i1,i2)];
   const double hDD01_i0p1_i1_i2 = hDD01GF_.ptr[hDD01GF_.offset(i0+1,i1,i2)];
   const double hDD01_i0m1_i1p1_i2 = hDD01GF_.ptr[hDD01GF_.offset(i0-1,i1+1,i2)];
   const double hDD01_i0_i1p1_i2 = hDD01GF_.ptr[hDD01GF_.offset(i0,i1+1,i2)];
   const double hDD01_i0p1_i1p1_i2 = hDD01GF_.ptr[hDD01GF_.offset(i0+1,i1+1,i2)];
   const double hDD01_i0_i1m1_i2p1 = hDD01GF_.ptr[hDD01GF_.offset(i0,i1-1,i2+1)];
   const double hDD01_i0m1_i1_i2p1 = hDD01GF_.ptr[hDD01GF_.offset(i0-1,i1,i2+1)];
   const double hDD01_i0_i1_i2p1 = hDD01GF_.ptr[hDD01GF_.offset(i0,i1,i2+1)];
   const double hDD01_i0p1_i1_i2p1 = hDD01GF_.ptr[hDD01GF_.offset(i0+1,i1,i2+1)];
   const double hDD01_i0_i1p1_i2p1 = hDD01GF_.ptr[hDD01GF_.offset(i0,i1+1,i2+1)];
   const double hDD02_i0_i1m1_i2m1 = hDD02GF_.ptr[hDD02GF_.offset(i0,i1-1,i2-1)];
   const double hDD02_i0m1_i1_i2m1 = hDD02GF_.ptr[hDD02GF_.offset(i0-1,i1,i2-1)];
   const double hDD02_i0_i1_i2m1 = hDD02GF_.ptr[hDD02GF_.offset(i0,i1,i2-1)];
   const double hDD02_i0p1_i1_i2m1 = hDD02GF_.ptr[hDD02GF_.offset(i0+1,i1,i2-1)];
   const double hDD02_i0_i1p1_i2m1 = hDD02GF_.ptr[hDD02GF_.offset(i0,i1+1,i2-1)];
   const double hDD02_i0m1_i1m1_i2 = hDD02GF_.ptr[hDD02GF_.offset(i0-1,i1-1,i2)];
   const double hDD02_i0_i1m1_i2 = hDD02GF_.ptr[hDD02GF_.offset(i0,i1-1,i2)];
   const double hDD02_i0p1_i1m1_i2 = hDD02GF_.ptr[hDD02GF_.offset(i0+1,i1-1,i2)];
   const double hDD02_i0m1_i1_i2 = hDD02GF_.ptr[hDD02GF_.offset(i0-1,i1,i2)];
   const double hDD02 = hDD02GF_.ptr[hDD02GF_.offset(i0,i1,i2)];
   const double hDD02_i0p1_i1_i2 = hDD02GF_.ptr[hDD02GF_.offset(i0+1,i1,i2)];
   const double hDD02_i0m1_i1p1_i2 = hDD02GF_.ptr[hDD02GF_.offset(i0-1,i1+1,i2)];
   const double hDD02_i0_i1p1_i2 = hDD02GF_.ptr[hDD02GF_.offset(i0,i1+1,i2)];
   const double hDD02_i0p1_i1p1_i2 = hDD02GF_.ptr[hDD02GF_.offset(i0+1,i1+1,i2)];
   const double hDD02_i0_i1m1_i2p1 = hDD02GF_.ptr[hDD02GF_.offset(i0,i1-1,i2+1)];
   const double hDD02_i0m1_i1_i2p1 = hDD02GF_.ptr[hDD02GF_.offset(i0-1,i1,i2+1)];
   const double hDD02_i0_i1_i2p1 = hDD02GF_.ptr[hDD02GF_.offset(i0,i1,i2+1)];
   const double hDD02_i0p1_i1_i2p1 = hDD02GF_.ptr[hDD02GF_.offset(i0+1,i1,i2+1)];
   const double hDD02_i0_i1p1_i2p1 = hDD02GF_.ptr[hDD02GF_.offset(i0,i1+1,i2+1)];
   const double hDD11_i0_i1m1_i2m1 = hDD11GF_.ptr[hDD11GF_.offset(i0,i1-1,i2-1)];
   const double hDD11_i0m1_i1_i2m1 = hDD11GF_.ptr[hDD11GF_.offset(i0-1,i1,i2-1)];
   const double hDD11_i0_i1_i2m1 = hDD11GF_.ptr[hDD11GF_.offset(i0,i1,i2-1)];
   const double hDD11_i0p1_i1_i2m1 = hDD11GF_.ptr[hDD11GF_.offset(i0+1,i1,i2-1)];
   const double hDD11_i0_i1p1_i2m1 = hDD11GF_.ptr[hDD11GF_.offset(i0,i1+1,i2-1)];
   const double hDD11_i0m1_i1m1_i2 = hDD11GF_.ptr[hDD11GF_.offset(i0-1,i1-1,i2)];
   const double hDD11_i0_i1m1_i2 = hDD11GF_.ptr[hDD11GF_.offset(i0,i1-1,i2)];
   const double hDD11_i0p1_i1m1_i2 = hDD11GF_.ptr[hDD11GF_.offset(i0+1,i1-1,i2)];
   const double hDD11_i0m1_i1_i2 = hDD11GF_.ptr[hDD11GF_.offset(i0-1,i1,i2)];
   const double hDD11 = hDD11GF_.ptr[hDD11GF_.offset(i0,i1,i2)];
   const double hDD11_i0p1_i1_i2 = hDD11GF_.ptr[hDD11GF_.offset(i0+1,i1,i2)];
   const double hDD11_i0m1_i1p1_i2 = hDD11GF_.ptr[hDD11GF_.offset(i0-1,i1+1,i2)];
   const double hDD11_i0_i1p1_i2 = hDD11GF_.ptr[hDD11GF_.offset(i0,i1+1,i2)];
   const double hDD11_i0p1_i1p1_i2 = hDD11GF_.ptr[hDD11GF_.offset(i0+1,i1+1,i2)];
   const double hDD11_i0_i1m1_i2p1 = hDD11GF_.ptr[hDD11GF_.offset(i0,i1-1,i2+1)];
   const double hDD11_i0m1_i1_i2p1 = hDD11GF_.ptr[hDD11GF_.offset(i0-1,i1,i2+1)];
   const double hDD11_i0_i1_i2p1 = hDD11GF_.ptr[hDD11GF_.offset(i0,i1,i2+1)];
   const double hDD11_i0p1_i1_i2p1 = hDD11GF_.ptr[hDD11GF_.offset(i0+1,i1,i2+1)];
   const double hDD11_i0_i1p1_i2p1 = hDD11GF_.ptr[hDD11GF_.offset(i0,i1+1,i2+1)];
   const double hDD12_i0_i1m1_i2m1 = hDD12GF_.ptr[hDD12GF_.offset(i0,i1-1,i2-1)];
   const double hDD12_i0m1_i1_i2m1 = hDD12GF_.ptr[hDD12GF_.offset(i0-1,i1,i2-1)];
   const double hDD12_i0_i1_i2m1 = hDD12GF_.ptr[hDD12GF_.offset(i0,i1,i2-1)];
   const double hDD12_i0p1_i1_i2m1 = hDD12GF_.ptr[hDD12GF_.offset(i0+1,i1,i2-1)];
   const double hDD12_i0_i1p1_i2m1 = hDD12GF_.ptr[hDD12GF_.offset(i0,i1+1,i2-1)];
   const double hDD12_i0m1_i1m1_i2 = hDD12GF_.ptr[hDD12GF_.offset(i0-1,i1-1,i2)];
   const double hDD12_i0_i1m1_i2 = hDD12GF_.ptr[hDD12GF_.offset(i0,i1-1,i2)];
   const double hDD12_i0p1_i1m1_i2 = hDD12GF_.ptr[hDD12GF_.offset(i0+1,i1-1,i2)];
   const double hDD12_i0m1_i1_i2 = hDD12GF_.ptr[hDD12GF_.offset(i0-1,i1,i2)];
   const double hDD12 = hDD12GF_.ptr[hDD12GF_.offset(i0,i1,i2)];
   const double hDD12_i0p1_i1_i2 = hDD12GF_.ptr[hDD12GF_.offset(i0+1,i1,i2)];
   const double hDD12_i0m1_i1p1_i2 = hDD12GF_.ptr[hDD12GF_.offset(i0-1,i1+1,i2)];
   const double hDD12_i0_i1p1_i2 = hDD12GF_.ptr[hDD12GF_.offset(i0,i1+1,i2)];
   const double hDD12_i0p1_i1p1_i2 = hDD12GF_.ptr[hDD12GF_.offset(i0+1,i1+1,i2)];
   const double hDD12_i0_i1m1_i2p1 = hDD12GF_.ptr[hDD12GF_.offset(i0,i1-1,i2+1)];
   const double hDD12_i0m1_i1_i2p1 = hDD12GF_.ptr[hDD12GF_.offset(i0-1,i1,i2+1)];
   const double hDD12_i0_i1_i2p1 = hDD12GF_.ptr[hDD12GF_.offset(i0,i1,i2+1)];
   const double hDD12_i0p1_i1_i2p1 = hDD12GF_.ptr[hDD12GF_.offset(i0+1,i1,i2+1)];
   const double hDD12_i0_i1p1_i2p1 = hDD12GF_.ptr[hDD12GF_.offset(i0,i1+1,i2+1)];
   const double hDD22_i0_i1m1_i2m1 = hDD22GF_.ptr[hDD22GF_.offset(i0,i1-1,i2-1)];
   const double hDD22_i0m1_i1_i2m1 = hDD22GF_.ptr[hDD22GF_.offset(i0-1,i1,i2-1)];
   const double hDD22_i0_i1_i2m1 = hDD22GF_.ptr[hDD22GF_.offset(i0,i1,i2-1)];
   const double hDD22_i0p1_i1_i2m1 = hDD22GF_.ptr[hDD22GF_.offset(i0+1,i1,i2-1)];
   const double hDD22_i0_i1p1_i2m1 = hDD22GF_.ptr[hDD22GF_.offset(i0,i1+1,i2-1)];
   const double hDD22_i0m1_i1m1_i2 = hDD22GF_.ptr[hDD22GF_.offset(i0-1,i1-1,i2)];
   const double hDD22_i0_i1m1_i2 = hDD22GF_.ptr[hDD22GF_.offset(i0,i1-1,i2)];
   const double hDD22_i0p1_i1m1_i2 = hDD22GF_.ptr[hDD22GF_.offset(i0+1,i1-1,i2)];
   const double hDD22_i0m1_i1_i2 = hDD22GF_.ptr[hDD22GF_.offset(i0-1,i1,i2)];
   const double hDD22 = hDD22GF_.ptr[hDD22GF_.offset(i0,i1,i2)];
   const double hDD22_i0p1_i1_i2 = hDD22GF_.ptr[hDD22GF_.offset(i0+1,i1,i2)];
   const double hDD22_i0m1_i1p1_i2 = hDD22GF_.ptr[hDD22GF_.offset(i0-1,i1+1,i2)];
   const double hDD22_i0_i1p1_i2 = hDD22GF_.ptr[hDD22GF_.offset(i0,i1+1,i2)];
   const double hDD22_i0p1_i1p1_i2 = hDD22GF_.ptr[hDD22GF_.offset(i0+1,i1+1,i2)];
   const double hDD22_i0_i1m1_i2p1 = hDD22GF_.ptr[hDD22GF_.offset(i0,i1-1,i2+1)];
   const double hDD22_i0m1_i1_i2p1 = hDD22GF_.ptr[hDD22GF_.offset(i0-1,i1,i2+1)];
   const double hDD22_i0_i1_i2p1 = hDD22GF_.ptr[hDD22GF_.offset(i0,i1,i2+1)];
   const double hDD22_i0p1_i1_i2p1 = hDD22GF_.ptr[hDD22GF_.offset(i0+1,i1,i2+1)];
   const double hDD22_i0_i1p1_i2p1 = hDD22GF_.ptr[hDD22GF_.offset(i0,i1+1,i2+1)];
   const double lambdaU0_i0_i1_i2m1 = lambdaU0GF_.ptr[lambdaU0GF_.offset(i0,i1,i2-1)];
   const double lambdaU0_i0_i1m1_i2 = lambdaU0GF_.ptr[lambdaU0GF_.offset(i0,i1-1,i2)];
   const double lambdaU0_i0m1_i1_i2 = lambdaU0GF_.ptr[lambdaU0GF_.offset(i0-1,i1,i2)];
   const double lambdaU0_i0p1_i1_i2 = lambdaU0GF_.ptr[lambdaU0GF_.offset(i0+1,i1,i2)];
   const double lambdaU0_i0_i1p1_i2 = lambdaU0GF_.ptr[lambdaU0GF_.offset(i0,i1+1,i2)];
   const double lambdaU0_i0_i1_i2p1 = lambdaU0GF_.ptr[lambdaU0GF_.offset(i0,i1,i2+1)];
   const double lambdaU1_i0_i1_i2m1 = lambdaU1GF_.ptr[lambdaU1GF_.offset(i0,i1,i2-1)];
   const double lambdaU1_i0_i1m1_i2 = lambdaU1GF_.ptr[lambdaU1GF_.offset(i0,i1-1,i2)];
   const double lambdaU1_i0m1_i1_i2 = lambdaU1GF_.ptr[lambdaU1GF_.offset(i0-1,i1,i2)];
   const double lambdaU1_i0p1_i1_i2 = lambdaU1GF_.ptr[lambdaU1GF_.offset(i0+1,i1,i2)];
   const double lambdaU1_i0_i1p1_i2 = lambdaU1GF_.ptr[lambdaU1GF_.offset(i0,i1+1,i2)];
   const double lambdaU1_i0_i1_i2p1 = lambdaU1GF_.ptr[lambdaU1GF_.offset(i0,i1,i2+1)];
   const double lambdaU2_i0_i1_i2m1 = lambdaU2GF_.ptr[lambdaU2GF_.offset(i0,i1,i2-1)];
   const double lambdaU2_i0_i1m1_i2 = lambdaU2GF_.ptr[lambdaU2GF_.offset(i0,i1-1,i2)];
   const double lambdaU2_i0m1_i1_i2 = lambdaU2GF_.ptr[lambdaU2GF_.offset(i0-1,i1,i2)];
   const double lambdaU2_i0p1_i1_i2 = lambdaU2GF_.ptr[lambdaU2GF_.offset(i0+1,i1,i2)];
   const double lambdaU2_i0_i1p1_i2 = lambdaU2GF_.ptr[lambdaU2GF_.offset(i0,i1+1,i2)];
   const double lambdaU2_i0_i1_i2p1 = lambdaU2GF_.ptr[lambdaU2GF_.offset(i0,i1,i2+1)];
   const double tmpFD0 = ((invdx0)*(invdx0));
   const double tmpFD1 = -2*hDD00;
   const double tmpFD2 = invdx0*invdx1;
   const double tmpFD3 = invdx0*invdx2;
   const double tmpFD4 = ((invdx1)*(invdx1));
   const double tmpFD5 = invdx1*invdx2;
   const double tmpFD6 = ((invdx2)*(invdx2));
   const double tmpFD7 = -2*hDD01;
   const double tmpFD8 = -2*hDD02;
   const double tmpFD9 = -2*hDD11;
   const double tmpFD10 = -2*hDD12;
   const double tmpFD11 = -2*hDD22;
   const double hDD_dD000 = invdx0*(-1.0/2.0*hDD00_i0m1_i1_i2 + (1.0/2.0)*hDD00_i0p1_i1_i2);
   const double hDD_dD001 = invdx1*(-1.0/2.0*hDD00_i0_i1m1_i2 + (1.0/2.0)*hDD00_i0_i1p1_i2);
   const double hDD_dD002 = invdx2*(-1.0/2.0*hDD00_i0_i1_i2m1 + (1.0/2.0)*hDD00_i0_i1_i2p1);
   const double hDD_dD010 = invdx0*(-1.0/2.0*hDD01_i0m1_i1_i2 + (1.0/2.0)*hDD01_i0p1_i1_i2);
   const double hDD_dD011 = invdx1*(-1.0/2.0*hDD01_i0_i1m1_i2 + (1.0/2.0)*hDD01_i0_i1p1_i2);
   const double hDD_dD012 = invdx2*(-1.0/2.0*hDD01_i0_i1_i2m1 + (1.0/2.0)*hDD01_i0_i1_i2p1);
   const double hDD_dD020 = invdx0*(-1.0/2.0*hDD02_i0m1_i1_i2 + (1.0/2.0)*hDD02_i0p1_i1_i2);
   const double hDD_dD021 = invdx1*(-1.0/2.0*hDD02_i0_i1m1_i2 + (1.0/2.0)*hDD02_i0_i1p1_i2);
   const double hDD_dD022 = invdx2*(-1.0/2.0*hDD02_i0_i1_i2m1 + (1.0/2.0)*hDD02_i0_i1_i2p1);
   const double hDD_dD110 = invdx0*(-1.0/2.0*hDD11_i0m1_i1_i2 + (1.0/2.0)*hDD11_i0p1_i1_i2);
   const double hDD_dD111 = invdx1*(-1.0/2.0*hDD11_i0_i1m1_i2 + (1.0/2.0)*hDD11_i0_i1p1_i2);
   const double hDD_dD112 = invdx2*(-1.0/2.0*hDD11_i0_i1_i2m1 + (1.0/2.0)*hDD11_i0_i1_i2p1);
   const double hDD_dD120 = invdx0*(-1.0/2.0*hDD12_i0m1_i1_i2 + (1.0/2.0)*hDD12_i0p1_i1_i2);
   const double hDD_dD121 = invdx1*(-1.0/2.0*hDD12_i0_i1m1_i2 + (1.0/2.0)*hDD12_i0_i1p1_i2);
   const double hDD_dD122 = invdx2*(-1.0/2.0*hDD12_i0_i1_i2m1 + (1.0/2.0)*hDD12_i0_i1_i2p1);
   const double hDD_dD220 = invdx0*(-1.0/2.0*hDD22_i0m1_i1_i2 + (1.0/2.0)*hDD22_i0p1_i1_i2);
   const double hDD_dD221 = invdx1*(-1.0/2.0*hDD22_i0_i1m1_i2 + (1.0/2.0)*hDD22_i0_i1p1_i2);
   const double hDD_dD222 = invdx2*(-1.0/2.0*hDD22_i0_i1_i2m1 + (1.0/2.0)*hDD22_i0_i1_i2p1);
   const double hDD_dDD0000 = tmpFD0*(hDD00_i0m1_i1_i2 + hDD00_i0p1_i1_i2 + tmpFD1);
   const double hDD_dDD0001 = tmpFD2*((1.0/4.0)*hDD00_i0m1_i1m1_i2 - 1.0/4.0*hDD00_i0m1_i1p1_i2 - 1.0/4.0*hDD00_i0p1_i1m1_i2 + (1.0/4.0)*hDD00_i0p1_i1p1_i2);
   const double hDD_dDD0002 = tmpFD3*((1.0/4.0)*hDD00_i0m1_i1_i2m1 - 1.0/4.0*hDD00_i0m1_i1_i2p1 - 1.0/4.0*hDD00_i0p1_i1_i2m1 + (1.0/4.0)*hDD00_i0p1_i1_i2p1);
   const double hDD_dDD0011 = tmpFD4*(hDD00_i0_i1m1_i2 + hDD00_i0_i1p1_i2 + tmpFD1);
   const double hDD_dDD0012 = tmpFD5*((1.0/4.0)*hDD00_i0_i1m1_i2m1 - 1.0/4.0*hDD00_i0_i1m1_i2p1 - 1.0/4.0*hDD00_i0_i1p1_i2m1 + (1.0/4.0)*hDD00_i0_i1p1_i2p1);
   const double hDD_dDD0022 = tmpFD6*(hDD00_i0_i1_i2m1 + hDD00_i0_i1_i2p1 + tmpFD1);
   const double hDD_dDD0100 = tmpFD0*(hDD01_i0m1_i1_i2 + hDD01_i0p1_i1_i2 + tmpFD7);
   const double hDD_dDD0101 = tmpFD2*((1.0/4.0)*hDD01_i0m1_i1m1_i2 - 1.0/4.0*hDD01_i0m1_i1p1_i2 - 1.0/4.0*hDD01_i0p1_i1m1_i2 + (1.0/4.0)*hDD01_i0p1_i1p1_i2);
   const double hDD_dDD0102 = tmpFD3*((1.0/4.0)*hDD01_i0m1_i1_i2m1 - 1.0/4.0*hDD01_i0m1_i1_i2p1 - 1.0/4.0*hDD01_i0p1_i1_i2m1 + (1.0/4.0)*hDD01_i0p1_i1_i2p1);
   const double hDD_dDD0111 = tmpFD4*(hDD01_i0_i1m1_i2 + hDD01_i0_i1p1_i2 + tmpFD7);
   const double hDD_dDD0112 = tmpFD5*((1.0/4.0)*hDD01_i0_i1m1_i2m1 - 1.0/4.0*hDD01_i0_i1m1_i2p1 - 1.0/4.0*hDD01_i0_i1p1_i2m1 + (1.0/4.0)*hDD01_i0_i1p1_i2p1);
   const double hDD_dDD0122 = tmpFD6*(hDD01_i0_i1_i2m1 + hDD01_i0_i1_i2p1 + tmpFD7);
   const double hDD_dDD0200 = tmpFD0*(hDD02_i0m1_i1_i2 + hDD02_i0p1_i1_i2 + tmpFD8);
   const double hDD_dDD0201 = tmpFD2*((1.0/4.0)*hDD02_i0m1_i1m1_i2 - 1.0/4.0*hDD02_i0m1_i1p1_i2 - 1.0/4.0*hDD02_i0p1_i1m1_i2 + (1.0/4.0)*hDD02_i0p1_i1p1_i2);
   const double hDD_dDD0202 = tmpFD3*((1.0/4.0)*hDD02_i0m1_i1_i2m1 - 1.0/4.0*hDD02_i0m1_i1_i2p1 - 1.0/4.0*hDD02_i0p1_i1_i2m1 + (1.0/4.0)*hDD02_i0p1_i1_i2p1);
   const double hDD_dDD0211 = tmpFD4*(hDD02_i0_i1m1_i2 + hDD02_i0_i1p1_i2 + tmpFD8);
   const double hDD_dDD0212 = tmpFD5*((1.0/4.0)*hDD02_i0_i1m1_i2m1 - 1.0/4.0*hDD02_i0_i1m1_i2p1 - 1.0/4.0*hDD02_i0_i1p1_i2m1 + (1.0/4.0)*hDD02_i0_i1p1_i2p1);
   const double hDD_dDD0222 = tmpFD6*(hDD02_i0_i1_i2m1 + hDD02_i0_i1_i2p1 + tmpFD8);
   const double hDD_dDD1100 = tmpFD0*(hDD11_i0m1_i1_i2 + hDD11_i0p1_i1_i2 + tmpFD9);
   const double hDD_dDD1101 = tmpFD2*((1.0/4.0)*hDD11_i0m1_i1m1_i2 - 1.0/4.0*hDD11_i0m1_i1p1_i2 - 1.0/4.0*hDD11_i0p1_i1m1_i2 + (1.0/4.0)*hDD11_i0p1_i1p1_i2);
   const double hDD_dDD1102 = tmpFD3*((1.0/4.0)*hDD11_i0m1_i1_i2m1 - 1.0/4.0*hDD11_i0m1_i1_i2p1 - 1.0/4.0*hDD11_i0p1_i1_i2m1 + (1.0/4.0)*hDD11_i0p1_i1_i2p1);
   const double hDD_dDD1111 = tmpFD4*(hDD11_i0_i1m1_i2 + hDD11_i0_i1p1_i2 + tmpFD9);
   const double hDD_dDD1112 = tmpFD5*((1.0/4.0)*hDD11_i0_i1m1_i2m1 - 1.0/4.0*hDD11_i0_i1m1_i2p1 - 1.0/4.0*hDD11_i0_i1p1_i2m1 + (1.0/4.0)*hDD11_i0_i1p1_i2p1);
   const double hDD_dDD1122 = tmpFD6*(hDD11_i0_i1_i2m1 + hDD11_i0_i1_i2p1 + tmpFD9);
   const double hDD_dDD1200 = tmpFD0*(hDD12_i0m1_i1_i2 + hDD12_i0p1_i1_i2 + tmpFD10);
   const double hDD_dDD1201 = tmpFD2*((1.0/4.0)*hDD12_i0m1_i1m1_i2 - 1.0/4.0*hDD12_i0m1_i1p1_i2 - 1.0/4.0*hDD12_i0p1_i1m1_i2 + (1.0/4.0)*hDD12_i0p1_i1p1_i2);
   const double hDD_dDD1202 = tmpFD3*((1.0/4.0)*hDD12_i0m1_i1_i2m1 - 1.0/4.0*hDD12_i0m1_i1_i2p1 - 1.0/4.0*hDD12_i0p1_i1_i2m1 + (1.0/4.0)*hDD12_i0p1_i1_i2p1);
   const double hDD_dDD1211 = tmpFD4*(hDD12_i0_i1m1_i2 + hDD12_i0_i1p1_i2 + tmpFD10);
   const double hDD_dDD1212 = tmpFD5*((1.0/4.0)*hDD12_i0_i1m1_i2m1 - 1.0/4.0*hDD12_i0_i1m1_i2p1 - 1.0/4.0*hDD12_i0_i1p1_i2m1 + (1.0/4.0)*hDD12_i0_i1p1_i2p1);
   const double hDD_dDD1222 = tmpFD6*(hDD12_i0_i1_i2m1 + hDD12_i0_i1_i2p1 + tmpFD10);
   const double hDD_dDD2200 = tmpFD0*(hDD22_i0m1_i1_i2 + hDD22_i0p1_i1_i2 + tmpFD11);
   const double hDD_dDD2201 = tmpFD2*((1.0/4.0)*hDD22_i0m1_i1m1_i2 - 1.0/4.0*hDD22_i0m1_i1p1_i2 - 1.0/4.0*hDD22_i0p1_i1m1_i2 + (1.0/4.0)*hDD22_i0p1_i1p1_i2);
   const double hDD_dDD2202 = tmpFD3*((1.0/4.0)*hDD22_i0m1_i1_i2m1 - 1.0/4.0*hDD22_i0m1_i1_i2p1 - 1.0/4.0*hDD22_i0p1_i1_i2m1 + (1.0/4.0)*hDD22_i0p1_i1_i2p1);
   const double hDD_dDD2211 = tmpFD4*(hDD22_i0_i1m1_i2 + hDD22_i0_i1p1_i2 + tmpFD11);
   const double hDD_dDD2212 = tmpFD5*((1.0/4.0)*hDD22_i0_i1m1_i2m1 - 1.0/4.0*hDD22_i0_i1m1_i2p1 - 1.0/4.0*hDD22_i0_i1p1_i2m1 + (1.0/4.0)*hDD22_i0_i1p1_i2p1);
   const double hDD_dDD2222 = tmpFD6*(hDD22_i0_i1_i2m1 + hDD22_i0_i1_i2p1 + tmpFD11);
   const double lambdaU_dD00 = invdx0*(-1.0/2.0*lambdaU0_i0m1_i1_i2 + (1.0/2.0)*lambdaU0_i0p1_i1_i2);
   const double lambdaU_dD01 = invdx1*(-1.0/2.0*lambdaU0_i0_i1m1_i2 + (1.0/2.0)*lambdaU0_i0_i1p1_i2);
   const double lambdaU_dD02 = invdx2*(-1.0/2.0*lambdaU0_i0_i1_i2m1 + (1.0/2.0)*lambdaU0_i0_i1_i2p1);
   const double lambdaU_dD10 = invdx0*(-1.0/2.0*lambdaU1_i0m1_i1_i2 + (1.0/2.0)*lambdaU1_i0p1_i1_i2);
   const double lambdaU_dD11 = invdx1*(-1.0/2.0*lambdaU1_i0_i1m1_i2 + (1.0/2.0)*lambdaU1_i0_i1p1_i2);
   const double lambdaU_dD12 = invdx2*(-1.0/2.0*lambdaU1_i0_i1_i2m1 + (1.0/2.0)*lambdaU1_i0_i1_i2p1);
   const double lambdaU_dD20 = invdx0*(-1.0/2.0*lambdaU2_i0m1_i1_i2 + (1.0/2.0)*lambdaU2_i0p1_i1_i2);
   const double lambdaU_dD21 = invdx1*(-1.0/2.0*lambdaU2_i0_i1m1_i2 + (1.0/2.0)*lambdaU2_i0_i1p1_i2);
   const double lambdaU_dD22 = invdx2*(-1.0/2.0*lambdaU2_i0_i1_i2m1 + (1.0/2.0)*lambdaU2_i0_i1_i2p1);
   /* 
    * NRPy+ Finite Difference Code Generation, Step 2 of 2: Evaluate SymPy expressions and write to main memory:
    */
   const double tmp0 = hDD00 + 1;
   const double tmp1 = hDD02*hDD12;
   const double tmp2 = ((hDD01)*(hDD01));
   const double tmp3 = hDD22 + 1;
   const double tmp4 = ((hDD02)*(hDD02));
   const double tmp5 = hDD11 + 1;
   const double tmp6 = ((hDD12)*(hDD12));
   const double tmp7 = tmp0*tmp3;
   const double tmp8 = (1.0/(2*hDD01*tmp1 - tmp0*tmp6 - tmp2*tmp3 - tmp4*tmp5 + tmp5*tmp7));
   const double tmp9 = tmp8*(-hDD01*tmp3 + tmp1);
   const double tmp10 = tmp8*(hDD01*hDD12 - hDD02*tmp5);
   const double tmp11 = tmp8*(hDD01*hDD02 - hDD12*tmp0);
   const double tmp12 = tmp8*(tmp3*tmp5 - tmp6);
   const double tmp13 = (1.0/2.0)*tmp12;
   const double tmp14 = tmp8*(-tmp4 + tmp7);
   const double tmp15 = (1.0/2.0)*tmp14;
   const double tmp16 = tmp8*(tmp0*tmp5 - tmp2);
   const double tmp17 = (1.0/2.0)*tmp16;
   const double tmp18 = (1.0/2.0)*tmp10;
   const double tmp19 = hDD_dD012 - hDD_dD021 + hDD_dD120;
   const double tmp20 = (1.0/2.0)*tmp9;
   const double tmp21 = hDD_dD002*tmp13 + hDD_dD220*tmp18 + tmp19*tmp20;
   const double tmp22 = -hDD_dD012 + hDD_dD021 + hDD_dD120;
   const double tmp23 = (1.0/2.0)*tmp11;
   const double tmp24 = hDD_dD001*tmp20 + hDD_dD110*tmp15 + tmp22*tmp23;
   const double tmp25 = hDD01*tmp24;
   const double tmp26 = hDD_dD001*tmp18 + hDD_dD110*tmp23 + tmp17*tmp22;
   const double tmp27 = hDD02*tmp26;
   const double tmp28 = hDD_dD001*tmp13 + hDD_dD110*tmp20 + tmp18*tmp22;
   const double tmp29 = tmp0*tmp28;
   const double tmp30 = tmp25 + tmp27 + tmp29;
   const double tmp31 = tmp21*tmp30;
   const double tmp32 = 3*tmp11;
   const double tmp33 = hDD_dD002*tmp20 + hDD_dD220*tmp23 + tmp15*tmp19;
   const double tmp34 = hDD01*tmp33;
   const double tmp35 = hDD_dD002*tmp18 + hDD_dD220*tmp17 + tmp19*tmp23;
   const double tmp36 = hDD02*tmp35;
   const double tmp37 = tmp0*tmp21;
   const double tmp38 = tmp34 + tmp36 + tmp37;
   const double tmp39 = tmp28*tmp38;
   const double tmp40 = tmp21*tmp38;
   const double tmp41 = 3*tmp16;
   const double tmp42 = tmp28*tmp30;
   const double tmp43 = 3*tmp14;
   const double tmp44 = (1.0/2.0)*hDD_dD000;
   const double tmp45 = -1.0/2.0*hDD_dD001 + hDD_dD010;
   const double tmp46 = -1.0/2.0*hDD_dD002 + hDD_dD020;
   const double tmp47 = tmp10*tmp46 + tmp12*tmp44 + tmp45*tmp9;
   const double tmp48 = tmp38*tmp47;
   const double tmp49 = 3*tmp10;
   const double tmp50 = tmp30*tmp47;
   const double tmp51 = 3*tmp9;
   const double tmp52 = tmp11*tmp46 + tmp14*tmp45 + tmp44*tmp9;
   const double tmp53 = hDD01*tmp52;
   const double tmp54 = tmp10*tmp44 + tmp11*tmp45 + tmp16*tmp46;
   const double tmp55 = hDD02*tmp54;
   const double tmp56 = tmp0*tmp47;
   const double tmp57 = tmp53 + tmp55 + tmp56;
   const double tmp58 = tmp21*tmp57;
   const double tmp59 = tmp28*tmp57;
   const double tmp60 = 3*tmp12;
   const double tmp61 = hDD01*tmp21 + hDD12*tmp35 + tmp33*tmp5;
   const double tmp62 = tmp24*tmp61;
   const double tmp63 = hDD_dD012 + hDD_dD021 - hDD_dD120;
   const double tmp64 = hDD_dD112*tmp15 + hDD_dD221*tmp23 + tmp20*tmp63;
   const double tmp65 = hDD_dD112*tmp23 + hDD_dD221*tmp17 + tmp18*tmp63;
   const double tmp66 = hDD_dD112*tmp20 + hDD_dD221*tmp18 + tmp13*tmp63;
   const double tmp67 = hDD01*tmp64 + hDD02*tmp65 + tmp0*tmp66;
   const double tmp68 = tmp24*tmp67;
   const double tmp69 = hDD02*tmp28 + hDD12*tmp24 + tmp26*tmp3;
   const double tmp70 = tmp35*tmp69;
   const double tmp71 = tmp35*tmp67;
   const double tmp72 = tmp33*tmp61;
   const double tmp73 = tmp33*tmp67;
   const double tmp74 = tmp26*tmp69;
   const double tmp75 = tmp26*tmp67;
   const double tmp76 = tmp52*tmp61;
   const double tmp77 = 2*tmp52;
   const double tmp78 = tmp54*tmp69;
   const double tmp79 = 2*tmp54;
   const double tmp80 = hDD01*tmp28;
   const double tmp81 = hDD12*tmp26;
   const double tmp82 = tmp24*tmp5;
   const double tmp83 = tmp80 + tmp81 + tmp82;
   const double tmp84 = tmp33*tmp83;
   const double tmp85 = 2*hDD_dD011 - hDD_dD110;
   const double tmp86 = -hDD_dD112 + 2*hDD_dD121;
   const double tmp87 = hDD_dD111*tmp15 + tmp20*tmp85 + tmp23*tmp86;
   const double tmp88 = hDD_dD111*tmp23 + tmp17*tmp86 + tmp18*tmp85;
   const double tmp89 = hDD_dD111*tmp20 + tmp13*tmp85 + tmp18*tmp86;
   const double tmp90 = hDD01*tmp87 + hDD02*tmp88 + tmp0*tmp89;
   const double tmp91 = tmp33*tmp90;
   const double tmp92 = hDD02*tmp21;
   const double tmp93 = hDD12*tmp33;
   const double tmp94 = tmp3*tmp35;
   const double tmp95 = tmp92 + tmp93 + tmp94;
   const double tmp96 = tmp26*tmp95;
   const double tmp97 = 2*hDD_dD022 - hDD_dD220;
   const double tmp98 = 2*hDD_dD122 - hDD_dD221;
   const double tmp99 = hDD_dD222*tmp23 + tmp15*tmp98 + tmp20*tmp97;
   const double tmp100 = hDD_dD222*tmp17 + tmp18*tmp97 + tmp23*tmp98;
   const double tmp101 = hDD_dD222*tmp18 + tmp13*tmp97 + tmp20*tmp98;
   const double tmp102 = hDD01*tmp99 + hDD02*tmp100 + tmp0*tmp101;
   const double tmp103 = tmp102*tmp26;
   const double tmp104 = tmp30*tmp33;
   const double tmp105 = hDD01*tmp47 + hDD12*tmp54 + tmp5*tmp52;
   const double tmp106 = tmp35*tmp38;
   const double tmp107 = hDD02*tmp47 + hDD12*tmp52 + tmp3*tmp54;
   const double tmp108 = tmp24*tmp30;
   const double tmp109 = tmp26*tmp38;
   const double tmp110 = tmp35*tmp95;
   const double tmp111 = tmp102*tmp35;
   const double tmp112 = tmp24*tmp83;
   const double tmp113 = tmp24*tmp90;
   const double tmp114 = tmp54*tmp95;
   const double tmp115 = tmp52*tmp83;
   const double tmp116 = tmp24*tmp9;
   const double tmp117 = tmp10*tmp33 + tmp11*tmp64 + tmp116 + tmp13*tmp52 + tmp15*tmp87 + tmp17*tmp99;
   const double tmp118 = tmp11*tmp65;
   const double tmp119 = tmp10*tmp35;
   const double tmp120 = tmp100*tmp17 + tmp118 + tmp119 + tmp13*tmp54 + tmp15*tmp88 + tmp26*tmp9;
   const double tmp121 = tmp10*tmp21 + tmp101*tmp17 + tmp11*tmp66 + tmp13*tmp47 + tmp15*tmp89 + tmp28*tmp9;
   const double tmp122 = (1.0/2.0)*hDD01;
   const double tmp123 = (1.0/2.0)*hDD02;
   const double tmp124 = (1.0/2.0)*hDD12;
   const double tmp125 = (1.0/2.0)*tmp0;
   const double tmp126 = (1.0/2.0)*tmp5;
   const double tmp127 = tmp30*tmp64;
   const double tmp128 = tmp64*tmp67;
   const double tmp129 = hDD01*tmp66;
   const double tmp130 = hDD12*tmp65;
   const double tmp131 = tmp5*tmp64;
   const double tmp132 = tmp129 + tmp130 + tmp131;
   const double tmp133 = tmp132*tmp33;
   const double tmp134 = tmp132*tmp24;
   const double tmp135 = tmp132*tmp52;
   const double tmp136 = tmp64*tmp90;
   const double tmp137 = hDD01*tmp89;
   const double tmp138 = hDD12*tmp88;
   const double tmp139 = tmp5*tmp87;
   const double tmp140 = tmp137 + tmp138 + tmp139;
   const double tmp141 = tmp140*tmp33;
   const double tmp142 = tmp35*tmp61;
   const double tmp143 = tmp38*tmp65;
   const double tmp144 = tmp21*tmp61;
   const double tmp145 = tmp38*tmp66;
   const double tmp146 = tmp21*tmp67;
   const double tmp147 = tmp28*tmp61;
   const double tmp148 = tmp28*tmp67;
   const double tmp149 = tmp38*tmp89;
   const double tmp150 = tmp26*tmp61;
   const double tmp151 = tmp47*tmp67;
   const double tmp152 = tmp21*tmp83;
   const double tmp153 = tmp30*tmp66;
   const double tmp154 = tmp65*tmp67;
   const double tmp155 = tmp132*tmp35;
   const double tmp156 = hDD02*tmp89 + hDD12*tmp87 + tmp3*tmp88;
   const double tmp157 = tmp28*tmp83;
   const double tmp158 = tmp30*tmp89;
   const double tmp159 = tmp28*tmp90;
   const double tmp160 = tmp132*tmp26;
   const double tmp161 = tmp156*tmp26;
   const double tmp162 = tmp105*tmp21;
   const double tmp163 = tmp57*tmp66;
   const double tmp164 = hDD02*tmp66;
   const double tmp165 = hDD12*tmp64;
   const double tmp166 = tmp3*tmp65;
   const double tmp167 = tmp164 + tmp165 + tmp166;
   const double tmp168 = tmp167*tmp35;
   const double tmp169 = tmp102*tmp65;
   const double tmp170 = hDD01*tmp101 + hDD12*tmp100 + tmp5*tmp99;
   const double tmp171 = tmp170*tmp35;
   const double tmp172 = tmp167*tmp26;
   const double tmp173 = tmp170*tmp26;
   const double tmp174 = tmp105*tmp28;
   const double tmp175 = tmp167*tmp54;
   const double tmp176 = (1.0/2.0)*tmp3;
   const double tmp177 = 2*tmp96;
   const double tmp178 = 2*tmp172;
   const double tmp179 = hDD02*tmp101;
   const double tmp180 = hDD12*tmp99;
   const double tmp181 = tmp100*tmp3;
   const double tmp182 = tmp179 + tmp180 + tmp181;
   const double tmp183 = 2*tmp182;
   const double tmp184 = tmp183*tmp26;
   const double tmp185 = tmp24*tmp69 + tmp62;
   const double tmp186 = tmp148 + tmp28*tmp69;
   const double tmp187 = tmp21*tmp69;
   const double tmp188 = tmp33*tmp69;
   const double tmp189 = tmp102*tmp28 + tmp28*tmp95;
   const double tmp190 = tmp167*tmp24 + tmp170*tmp24;
   const double tmp191 = tmp21*tmp95;
   const double tmp192 = tmp101*tmp38;
   const double tmp193 = tmp102*tmp21;
   const double tmp194 = tmp167*tmp33;
   const double tmp195 = tmp170*tmp33;
   const double tmp196 = tmp107*tmp28 + tmp39;
   const double tmp197 = tmp134 + tmp156*tmp24;
   const double tmp198 = tmp156*tmp33;
   const double tmp199 = tmp107*tmp21;
   const double tmp200 = tmp64*tmp83;
   const double tmp201 = tmp132*tmp64;
   const double tmp202 = tmp132*tmp87;
   const double tmp203 = tmp140*tmp64;
   const double tmp204 = tmp61*tmp65;
   const double tmp205 = tmp66*tmp67;
   const double tmp206 = tmp61*tmp66;
   const double tmp207 = tmp67*tmp89;
   const double tmp208 = 2*tmp89;
   const double tmp209 = 2*tmp88;
   const double tmp210 = tmp66*tmp83;
   const double tmp211 = tmp132*tmp65;
   const double tmp212 = tmp105*tmp66;
   const double tmp213 = tmp167*tmp65;
   const double tmp214 = tmp170*tmp65;
   const double tmp215 = tmp167*tmp88;
   const double tmp216 = 2*tmp95;
   const double tmp217 = tmp66*tmp69;
   const double tmp218 = tmp61*tmp64;
   const double tmp219 = tmp64*tmp69;
   const double tmp220 = tmp66*tmp95;
   const double tmp221 = tmp102*tmp66;
   const double tmp222 = tmp167*tmp64;
   const double tmp223 = tmp132*tmp99;
   const double tmp224 = tmp170*tmp64;
   const double tmp225 = tmp156*tmp64;
   const double tmp226 = tmp107*tmp66;
   const double tmp227 = 3*tmp182;
   const double tmp228 = 2*tmp101;
   const double tmp229 = 2*tmp99;
   RbarDD00GF_.ptr[RbarDD00GF_.offset(i0, i1, i2)] = hDD01*lambdaU_dD10 + hDD02*lambdaU_dD20 - hDD_dDD0000*tmp13 - hDD_dDD0001*tmp9 - hDD_dDD0002*tmp10 - hDD_dDD0011*tmp15 - hDD_dDD0012*tmp11 - hDD_dDD0022*tmp17 + lambdaU_dD00*tmp0 + tmp10*(2*tmp104 + tmp105*tmp33) + tmp10*(2*tmp106 + tmp107*tmp35) + tmp10*(tmp102*tmp79 + tmp114) + tmp10*(tmp67*tmp77 + tmp76) + tmp11*(2*tmp103 + tmp96) + tmp11*(tmp62 + 2*tmp68) + tmp11*(tmp70 + 2*tmp71) + tmp11*(tmp84 + 2*tmp91) + tmp117*(2*tmp25 + 2*tmp27 + 2*tmp29) + tmp12*(tmp105*tmp52 + tmp30*tmp77) + tmp12*(tmp107*tmp54 + tmp38*tmp79) + tmp120*(2*tmp34 + 2*tmp36 + 2*tmp37) + tmp121*(2*tmp53 + 2*tmp55 + 2*tmp56) + tmp14*(tmp112 + 2*tmp113) + tmp14*(tmp74 + 2*tmp75) + tmp16*(tmp110 + 2*tmp111) + tmp16*(tmp72 + 2*tmp73) + tmp31*tmp32 + tmp32*tmp39 + tmp40*tmp41 + tmp42*tmp43 + tmp47*tmp57*tmp60 + tmp48*tmp49 + tmp49*tmp58 + tmp50*tmp51 + tmp51*tmp59 + tmp9*(tmp115 + tmp77*tmp90) + tmp9*(tmp105*tmp24 + 2*tmp108) + tmp9*(tmp107*tmp26 + 2*tmp109) + tmp9*(tmp67*tmp79 + tmp78);
   RbarDD01GF_.ptr[RbarDD01GF_.offset(i0, i1, i2)] = -hDD_dDD0100*tmp13 - hDD_dDD0101*tmp9 - hDD_dDD0102*tmp10 - hDD_dDD0111*tmp15 - hDD_dDD0112*tmp11 - hDD_dDD0122*tmp17 + lambdaU_dD00*tmp122 + lambdaU_dD01*tmp125 + lambdaU_dD10*tmp126 + lambdaU_dD11*tmp122 + lambdaU_dD20*tmp124 + lambdaU_dD21*tmp123 + tmp10*(tmp127 + 2*tmp84) + tmp10*(2*tmp135 + tmp68) + tmp10*(tmp103 + tmp170*tmp54 + tmp175) + tmp10*(tmp142 + tmp143 + tmp70) + tmp10*(tmp151 + tmp39 + tmp47*tmp61) + tmp10*(tmp162 + tmp163 + tmp31) + tmp11*(2*tmp134 + tmp67*tmp87) + tmp11*(tmp136 + 2*tmp141) + tmp11*(tmp147 + tmp148 + tmp149) + tmp11*(tmp152 + tmp153 + tmp21*tmp90) + tmp11*(tmp154 + tmp155 + tmp156*tmp35) + tmp11*(tmp102*tmp88 + tmp172 + tmp173) + tmp117*(tmp83 + tmp90) + tmp12*(tmp108 + 2*tmp115) + tmp12*(tmp109 + tmp54*tmp61 + tmp78) + tmp12*(tmp105*tmp47 + tmp50 + tmp59) + tmp120*(tmp61 + tmp67) + tmp121*(tmp105 + tmp30) + tmp14*(2*tmp140*tmp24 + tmp87*tmp90) + tmp14*(tmp157 + tmp158 + tmp159) + tmp14*(tmp160 + tmp161 + tmp67*tmp88) + tmp16*(tmp128 + 2*tmp133) + tmp16*(tmp144 + tmp145 + tmp146) + tmp16*(tmp168 + tmp169 + tmp171) + tmp9*(2*tmp112 + tmp30*tmp87) + tmp9*(tmp113 + tmp140*tmp77) + tmp9*(tmp150 + tmp38*tmp88 + tmp74) + tmp9*(tmp174 + tmp42 + tmp57*tmp89) + tmp9*(tmp42 + tmp47*tmp83 + tmp47*tmp90) + tmp9*(tmp132*tmp54 + tmp156*tmp54 + tmp75);
   RbarDD02GF_.ptr[RbarDD02GF_.offset(i0, i1, i2)] = -hDD_dDD0200*tmp13 - hDD_dDD0201*tmp9 - hDD_dDD0202*tmp10 - hDD_dDD0211*tmp15 - hDD_dDD0212*tmp11 - hDD_dDD0222*tmp17 + lambdaU_dD00*tmp123 + lambdaU_dD02*tmp125 + lambdaU_dD10*tmp124 + lambdaU_dD12*tmp122 + lambdaU_dD20*tmp176 + lambdaU_dD22*tmp123 + tmp10*(tmp111 + tmp182*tmp79) + tmp10*(tmp100*tmp38 + 2*tmp110) + tmp10*(tmp188 + tmp30*tmp99 + tmp72) + tmp10*(tmp101*tmp57 + tmp199 + tmp40) + tmp10*(tmp102*tmp47 + tmp40 + tmp47*tmp95) + tmp10*(tmp167*tmp52 + tmp170*tmp52 + tmp73) + tmp11*(tmp128 + tmp190) + tmp11*(tmp145 + tmp189) + tmp11*(tmp169 + tmp184) + tmp11*(tmp100*tmp67 + 2*tmp168) + tmp11*(tmp133 + tmp198 + tmp90*tmp99) + tmp11*(tmp101*tmp30 + tmp146 + tmp187) + tmp117*(tmp67 + tmp69) + tmp12*(tmp106 + 2*tmp114) + tmp12*(tmp104 + tmp52*tmp69 + tmp76) + tmp12*(tmp107*tmp47 + tmp48 + tmp58) + tmp120*(tmp102 + tmp95) + tmp121*(tmp107 + tmp38) + tmp14*(tmp136 + tmp197) + tmp14*(tmp153 + tmp186) + tmp14*(tmp154 + tmp178) + tmp16*(tmp100*tmp102 + tmp183*tmp35) + tmp16*(tmp191 + tmp192 + tmp193) + tmp16*(tmp194 + tmp195 + tmp67*tmp99) + tmp9*(tmp127 + tmp185) + tmp9*(tmp143 + tmp177) + tmp9*(tmp163 + tmp196) + tmp9*(2*tmp175 + tmp71) + tmp9*(tmp135 + tmp156*tmp52 + tmp91) + tmp9*(tmp151 + tmp31 + tmp47*tmp69);
   RbarDD11GF_.ptr[RbarDD11GF_.offset(i0, i1, i2)] = hDD01*lambdaU_dD01 + hDD12*lambdaU_dD21 - hDD_dDD1100*tmp13 - hDD_dDD1101*tmp9 - hDD_dDD1102*tmp10 - hDD_dDD1111*tmp15 - hDD_dDD1112*tmp11 - hDD_dDD1122*tmp17 + lambdaU_dD11*tmp5 + tmp10*(2*tmp147 + tmp148) + tmp10*(tmp153 + 2*tmp212) + tmp10*(tmp172 + 2*tmp173) + tmp10*(2*tmp204 + tmp65*tmp69) + tmp11*(tmp207 + tmp208*tmp61) + tmp11*(2*tmp210 + tmp66*tmp90) + tmp11*(tmp156*tmp65 + 2*tmp211) + tmp11*(tmp170*tmp209 + tmp215) + tmp112*tmp60 + 3*tmp116*tmp140 + tmp117*(2*tmp137 + 2*tmp138 + 2*tmp139) + tmp12*(2*tmp150 + tmp74) + tmp12*(2*tmp174 + tmp42) + tmp120*(2*tmp129 + 2*tmp130 + 2*tmp131) + tmp121*(2*tmp80 + 2*tmp81 + 2*tmp82) + tmp134*tmp49 + tmp14*(tmp132*tmp209 + tmp156*tmp88) + tmp14*(tmp208*tmp83 + tmp89*tmp90) + tmp140*tmp43*tmp87 + tmp16*(tmp205 + 2*tmp206) + tmp16*(tmp213 + 2*tmp214) + tmp200*tmp49 + tmp201*tmp41 + tmp202*tmp32 + tmp203*tmp32 + tmp51*tmp83*tmp87 + tmp9*(2*tmp157 + tmp159) + tmp9*(2*tmp160 + tmp161) + tmp9*(tmp105*tmp208 + tmp158) + tmp9*(tmp209*tmp61 + tmp69*tmp88);
   RbarDD12GF_.ptr[RbarDD12GF_.offset(i0, i1, i2)] = -hDD_dDD1200*tmp13 - hDD_dDD1201*tmp9 - hDD_dDD1202*tmp10 - hDD_dDD1211*tmp15 - hDD_dDD1212*tmp11 - hDD_dDD1222*tmp17 + lambdaU_dD01*tmp123 + lambdaU_dD02*tmp122 + lambdaU_dD11*tmp124 + lambdaU_dD12*tmp126 + lambdaU_dD21*tmp176 + lambdaU_dD22*tmp124 + tmp10*(tmp133 + tmp190) + tmp10*(tmp144 + tmp189) + tmp10*(tmp171 + tmp184) + tmp10*(tmp100*tmp61 + tmp216*tmp65) + tmp10*(tmp218 + tmp219 + tmp83*tmp99) + tmp10*(tmp101*tmp105 + tmp145 + tmp226) + tmp11*(tmp100*tmp132 + 2*tmp213) + tmp11*(tmp183*tmp88 + tmp214) + tmp11*(tmp101*tmp83 + tmp205 + tmp217) + tmp11*(tmp102*tmp89 + tmp206 + tmp89*tmp95) + tmp11*(tmp140*tmp99 + tmp201 + tmp225) + tmp11*(tmp167*tmp87 + tmp170*tmp87 + tmp201) + tmp117*(tmp132 + tmp156) + tmp12*(tmp142 + tmp177) + tmp12*(tmp162 + tmp196) + tmp12*(tmp185 + tmp84) + tmp120*(tmp167 + tmp170) + tmp121*(tmp61 + tmp69) + tmp14*(tmp211 + 2*tmp215) + tmp14*(tmp207 + tmp210 + tmp69*tmp89) + tmp14*(tmp156*tmp87 + tmp202 + tmp203) + tmp16*(tmp100*tmp170 + tmp183*tmp65) + tmp16*(tmp222 + tmp223 + tmp224) + tmp16*(tmp101*tmp61 + tmp220 + tmp221) + tmp9*(tmp141 + tmp197) + tmp9*(tmp152 + tmp186) + tmp9*(tmp155 + tmp178) + tmp9*(tmp204 + tmp209*tmp95) + tmp9*(tmp200 + tmp61*tmp87 + tmp69*tmp87) + tmp9*(tmp107*tmp89 + tmp149 + tmp212);
   RbarDD22GF_.ptr[RbarDD22GF_.offset(i0, i1, i2)] = hDD02*lambdaU_dD02 + hDD12*lambdaU_dD12 - hDD_dDD2200*tmp13 - hDD_dDD2201*tmp9 - hDD_dDD2202*tmp10 - hDD_dDD2211*tmp15 - hDD_dDD2212*tmp11 - hDD_dDD2222*tmp17 + lambdaU_dD22*tmp3 + tmp10*(2*tmp191 + tmp193) + tmp10*(2*tmp194 + tmp195) + tmp10*(tmp107*tmp228 + tmp192) + tmp10*(tmp229*tmp69 + tmp61*tmp99) + tmp100*tmp167*tmp32 + tmp100*tmp182*tmp41 + tmp100*tmp49*tmp95 + tmp11*(2*tmp220 + tmp221) + tmp11*(2*tmp222 + tmp224) + tmp11*(tmp101*tmp67 + tmp228*tmp69) + tmp11*(tmp156*tmp229 + tmp223) + tmp110*tmp60 + tmp117*(2*tmp164 + 2*tmp165 + 2*tmp166) + tmp118*tmp227 + tmp119*tmp227 + tmp12*(2*tmp188 + tmp72) + tmp12*(2*tmp199 + tmp40) + tmp120*(2*tmp179 + 2*tmp180 + 2*tmp181) + tmp121*(2*tmp92 + 2*tmp93 + 2*tmp94) + tmp14*(tmp201 + 2*tmp225) + tmp14*(tmp205 + 2*tmp217) + tmp16*(tmp101*tmp102 + tmp101*tmp216) + tmp16*(tmp167*tmp229 + tmp170*tmp99) + tmp168*tmp51 + tmp213*tmp43 + tmp51*tmp65*tmp95 + tmp9*(tmp133 + 2*tmp198) + tmp9*(tmp145 + 2*tmp226) + tmp9*(tmp146 + 2*tmp187) + tmp9*(tmp218 + 2*tmp219);
}


});
