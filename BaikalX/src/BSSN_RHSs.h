Loop::loop_int<0,0,0>(cctkGH, [&](const Loop::PointDesc &p){
    const int i0 = p.i;
    const int i1 = p.j;
    const int i2 = p.k;
{
   /* 
    * NRPy+ Finite Difference Code Generation, Step 1 of 3: Read from main memory and compute finite difference stencils:
    */
   const double hDD00_i0_i1_i2m3 = hDD00GF_.ptr[hDD00GF_.offset(i0,i1,i2-3)];
   const double hDD00_i0_i1_i2m2 = hDD00GF_.ptr[hDD00GF_.offset(i0,i1,i2-2)];
   const double hDD00_i0_i1_i2m1 = hDD00GF_.ptr[hDD00GF_.offset(i0,i1,i2-1)];
   const double hDD00_i0_i1m3_i2 = hDD00GF_.ptr[hDD00GF_.offset(i0,i1-3,i2)];
   const double hDD00_i0_i1m2_i2 = hDD00GF_.ptr[hDD00GF_.offset(i0,i1-2,i2)];
   const double hDD00_i0_i1m1_i2 = hDD00GF_.ptr[hDD00GF_.offset(i0,i1-1,i2)];
   const double hDD00_i0m3_i1_i2 = hDD00GF_.ptr[hDD00GF_.offset(i0-3,i1,i2)];
   const double hDD00_i0m2_i1_i2 = hDD00GF_.ptr[hDD00GF_.offset(i0-2,i1,i2)];
   const double hDD00_i0m1_i1_i2 = hDD00GF_.ptr[hDD00GF_.offset(i0-1,i1,i2)];
   const double hDD00 = hDD00GF_.ptr[hDD00GF_.offset(i0,i1,i2)];
   const double hDD00_i0p1_i1_i2 = hDD00GF_.ptr[hDD00GF_.offset(i0+1,i1,i2)];
   const double hDD00_i0p2_i1_i2 = hDD00GF_.ptr[hDD00GF_.offset(i0+2,i1,i2)];
   const double hDD00_i0p3_i1_i2 = hDD00GF_.ptr[hDD00GF_.offset(i0+3,i1,i2)];
   const double hDD00_i0_i1p1_i2 = hDD00GF_.ptr[hDD00GF_.offset(i0,i1+1,i2)];
   const double hDD00_i0_i1p2_i2 = hDD00GF_.ptr[hDD00GF_.offset(i0,i1+2,i2)];
   const double hDD00_i0_i1p3_i2 = hDD00GF_.ptr[hDD00GF_.offset(i0,i1+3,i2)];
   const double hDD00_i0_i1_i2p1 = hDD00GF_.ptr[hDD00GF_.offset(i0,i1,i2+1)];
   const double hDD00_i0_i1_i2p2 = hDD00GF_.ptr[hDD00GF_.offset(i0,i1,i2+2)];
   const double hDD00_i0_i1_i2p3 = hDD00GF_.ptr[hDD00GF_.offset(i0,i1,i2+3)];
   const double hDD01_i0_i1_i2m3 = hDD01GF_.ptr[hDD01GF_.offset(i0,i1,i2-3)];
   const double hDD01_i0_i1_i2m2 = hDD01GF_.ptr[hDD01GF_.offset(i0,i1,i2-2)];
   const double hDD01_i0_i1_i2m1 = hDD01GF_.ptr[hDD01GF_.offset(i0,i1,i2-1)];
   const double hDD01_i0_i1m3_i2 = hDD01GF_.ptr[hDD01GF_.offset(i0,i1-3,i2)];
   const double hDD01_i0_i1m2_i2 = hDD01GF_.ptr[hDD01GF_.offset(i0,i1-2,i2)];
   const double hDD01_i0_i1m1_i2 = hDD01GF_.ptr[hDD01GF_.offset(i0,i1-1,i2)];
   const double hDD01_i0m3_i1_i2 = hDD01GF_.ptr[hDD01GF_.offset(i0-3,i1,i2)];
   const double hDD01_i0m2_i1_i2 = hDD01GF_.ptr[hDD01GF_.offset(i0-2,i1,i2)];
   const double hDD01_i0m1_i1_i2 = hDD01GF_.ptr[hDD01GF_.offset(i0-1,i1,i2)];
   const double hDD01 = hDD01GF_.ptr[hDD01GF_.offset(i0,i1,i2)];
   const double hDD01_i0p1_i1_i2 = hDD01GF_.ptr[hDD01GF_.offset(i0+1,i1,i2)];
   const double hDD01_i0p2_i1_i2 = hDD01GF_.ptr[hDD01GF_.offset(i0+2,i1,i2)];
   const double hDD01_i0p3_i1_i2 = hDD01GF_.ptr[hDD01GF_.offset(i0+3,i1,i2)];
   const double hDD01_i0_i1p1_i2 = hDD01GF_.ptr[hDD01GF_.offset(i0,i1+1,i2)];
   const double hDD01_i0_i1p2_i2 = hDD01GF_.ptr[hDD01GF_.offset(i0,i1+2,i2)];
   const double hDD01_i0_i1p3_i2 = hDD01GF_.ptr[hDD01GF_.offset(i0,i1+3,i2)];
   const double hDD01_i0_i1_i2p1 = hDD01GF_.ptr[hDD01GF_.offset(i0,i1,i2+1)];
   const double hDD01_i0_i1_i2p2 = hDD01GF_.ptr[hDD01GF_.offset(i0,i1,i2+2)];
   const double hDD01_i0_i1_i2p3 = hDD01GF_.ptr[hDD01GF_.offset(i0,i1,i2+3)];
   const double hDD02_i0_i1_i2m3 = hDD02GF_.ptr[hDD02GF_.offset(i0,i1,i2-3)];
   const double hDD02_i0_i1_i2m2 = hDD02GF_.ptr[hDD02GF_.offset(i0,i1,i2-2)];
   const double hDD02_i0_i1_i2m1 = hDD02GF_.ptr[hDD02GF_.offset(i0,i1,i2-1)];
   const double hDD02_i0_i1m3_i2 = hDD02GF_.ptr[hDD02GF_.offset(i0,i1-3,i2)];
   const double hDD02_i0_i1m2_i2 = hDD02GF_.ptr[hDD02GF_.offset(i0,i1-2,i2)];
   const double hDD02_i0_i1m1_i2 = hDD02GF_.ptr[hDD02GF_.offset(i0,i1-1,i2)];
   const double hDD02_i0m3_i1_i2 = hDD02GF_.ptr[hDD02GF_.offset(i0-3,i1,i2)];
   const double hDD02_i0m2_i1_i2 = hDD02GF_.ptr[hDD02GF_.offset(i0-2,i1,i2)];
   const double hDD02_i0m1_i1_i2 = hDD02GF_.ptr[hDD02GF_.offset(i0-1,i1,i2)];
   const double hDD02 = hDD02GF_.ptr[hDD02GF_.offset(i0,i1,i2)];
   const double hDD02_i0p1_i1_i2 = hDD02GF_.ptr[hDD02GF_.offset(i0+1,i1,i2)];
   const double hDD02_i0p2_i1_i2 = hDD02GF_.ptr[hDD02GF_.offset(i0+2,i1,i2)];
   const double hDD02_i0p3_i1_i2 = hDD02GF_.ptr[hDD02GF_.offset(i0+3,i1,i2)];
   const double hDD02_i0_i1p1_i2 = hDD02GF_.ptr[hDD02GF_.offset(i0,i1+1,i2)];
   const double hDD02_i0_i1p2_i2 = hDD02GF_.ptr[hDD02GF_.offset(i0,i1+2,i2)];
   const double hDD02_i0_i1p3_i2 = hDD02GF_.ptr[hDD02GF_.offset(i0,i1+3,i2)];
   const double hDD02_i0_i1_i2p1 = hDD02GF_.ptr[hDD02GF_.offset(i0,i1,i2+1)];
   const double hDD02_i0_i1_i2p2 = hDD02GF_.ptr[hDD02GF_.offset(i0,i1,i2+2)];
   const double hDD02_i0_i1_i2p3 = hDD02GF_.ptr[hDD02GF_.offset(i0,i1,i2+3)];
   const double hDD11_i0_i1_i2m3 = hDD11GF_.ptr[hDD11GF_.offset(i0,i1,i2-3)];
   const double hDD11_i0_i1_i2m2 = hDD11GF_.ptr[hDD11GF_.offset(i0,i1,i2-2)];
   const double hDD11_i0_i1_i2m1 = hDD11GF_.ptr[hDD11GF_.offset(i0,i1,i2-1)];
   const double hDD11_i0_i1m3_i2 = hDD11GF_.ptr[hDD11GF_.offset(i0,i1-3,i2)];
   const double hDD11_i0_i1m2_i2 = hDD11GF_.ptr[hDD11GF_.offset(i0,i1-2,i2)];
   const double hDD11_i0_i1m1_i2 = hDD11GF_.ptr[hDD11GF_.offset(i0,i1-1,i2)];
   const double hDD11_i0m3_i1_i2 = hDD11GF_.ptr[hDD11GF_.offset(i0-3,i1,i2)];
   const double hDD11_i0m2_i1_i2 = hDD11GF_.ptr[hDD11GF_.offset(i0-2,i1,i2)];
   const double hDD11_i0m1_i1_i2 = hDD11GF_.ptr[hDD11GF_.offset(i0-1,i1,i2)];
   const double hDD11 = hDD11GF_.ptr[hDD11GF_.offset(i0,i1,i2)];
   const double hDD11_i0p1_i1_i2 = hDD11GF_.ptr[hDD11GF_.offset(i0+1,i1,i2)];
   const double hDD11_i0p2_i1_i2 = hDD11GF_.ptr[hDD11GF_.offset(i0+2,i1,i2)];
   const double hDD11_i0p3_i1_i2 = hDD11GF_.ptr[hDD11GF_.offset(i0+3,i1,i2)];
   const double hDD11_i0_i1p1_i2 = hDD11GF_.ptr[hDD11GF_.offset(i0,i1+1,i2)];
   const double hDD11_i0_i1p2_i2 = hDD11GF_.ptr[hDD11GF_.offset(i0,i1+2,i2)];
   const double hDD11_i0_i1p3_i2 = hDD11GF_.ptr[hDD11GF_.offset(i0,i1+3,i2)];
   const double hDD11_i0_i1_i2p1 = hDD11GF_.ptr[hDD11GF_.offset(i0,i1,i2+1)];
   const double hDD11_i0_i1_i2p2 = hDD11GF_.ptr[hDD11GF_.offset(i0,i1,i2+2)];
   const double hDD11_i0_i1_i2p3 = hDD11GF_.ptr[hDD11GF_.offset(i0,i1,i2+3)];
   const double hDD12_i0_i1_i2m3 = hDD12GF_.ptr[hDD12GF_.offset(i0,i1,i2-3)];
   const double hDD12_i0_i1_i2m2 = hDD12GF_.ptr[hDD12GF_.offset(i0,i1,i2-2)];
   const double hDD12_i0_i1_i2m1 = hDD12GF_.ptr[hDD12GF_.offset(i0,i1,i2-1)];
   const double hDD12_i0_i1m3_i2 = hDD12GF_.ptr[hDD12GF_.offset(i0,i1-3,i2)];
   const double hDD12_i0_i1m2_i2 = hDD12GF_.ptr[hDD12GF_.offset(i0,i1-2,i2)];
   const double hDD12_i0_i1m1_i2 = hDD12GF_.ptr[hDD12GF_.offset(i0,i1-1,i2)];
   const double hDD12_i0m3_i1_i2 = hDD12GF_.ptr[hDD12GF_.offset(i0-3,i1,i2)];
   const double hDD12_i0m2_i1_i2 = hDD12GF_.ptr[hDD12GF_.offset(i0-2,i1,i2)];
   const double hDD12_i0m1_i1_i2 = hDD12GF_.ptr[hDD12GF_.offset(i0-1,i1,i2)];
   const double hDD12 = hDD12GF_.ptr[hDD12GF_.offset(i0,i1,i2)];
   const double hDD12_i0p1_i1_i2 = hDD12GF_.ptr[hDD12GF_.offset(i0+1,i1,i2)];
   const double hDD12_i0p2_i1_i2 = hDD12GF_.ptr[hDD12GF_.offset(i0+2,i1,i2)];
   const double hDD12_i0p3_i1_i2 = hDD12GF_.ptr[hDD12GF_.offset(i0+3,i1,i2)];
   const double hDD12_i0_i1p1_i2 = hDD12GF_.ptr[hDD12GF_.offset(i0,i1+1,i2)];
   const double hDD12_i0_i1p2_i2 = hDD12GF_.ptr[hDD12GF_.offset(i0,i1+2,i2)];
   const double hDD12_i0_i1p3_i2 = hDD12GF_.ptr[hDD12GF_.offset(i0,i1+3,i2)];
   const double hDD12_i0_i1_i2p1 = hDD12GF_.ptr[hDD12GF_.offset(i0,i1,i2+1)];
   const double hDD12_i0_i1_i2p2 = hDD12GF_.ptr[hDD12GF_.offset(i0,i1,i2+2)];
   const double hDD12_i0_i1_i2p3 = hDD12GF_.ptr[hDD12GF_.offset(i0,i1,i2+3)];
   const double hDD22_i0_i1_i2m3 = hDD22GF_.ptr[hDD22GF_.offset(i0,i1,i2-3)];
   const double hDD22_i0_i1_i2m2 = hDD22GF_.ptr[hDD22GF_.offset(i0,i1,i2-2)];
   const double hDD22_i0_i1_i2m1 = hDD22GF_.ptr[hDD22GF_.offset(i0,i1,i2-1)];
   const double hDD22_i0_i1m3_i2 = hDD22GF_.ptr[hDD22GF_.offset(i0,i1-3,i2)];
   const double hDD22_i0_i1m2_i2 = hDD22GF_.ptr[hDD22GF_.offset(i0,i1-2,i2)];
   const double hDD22_i0_i1m1_i2 = hDD22GF_.ptr[hDD22GF_.offset(i0,i1-1,i2)];
   const double hDD22_i0m3_i1_i2 = hDD22GF_.ptr[hDD22GF_.offset(i0-3,i1,i2)];
   const double hDD22_i0m2_i1_i2 = hDD22GF_.ptr[hDD22GF_.offset(i0-2,i1,i2)];
   const double hDD22_i0m1_i1_i2 = hDD22GF_.ptr[hDD22GF_.offset(i0-1,i1,i2)];
   const double hDD22 = hDD22GF_.ptr[hDD22GF_.offset(i0,i1,i2)];
   const double hDD22_i0p1_i1_i2 = hDD22GF_.ptr[hDD22GF_.offset(i0+1,i1,i2)];
   const double hDD22_i0p2_i1_i2 = hDD22GF_.ptr[hDD22GF_.offset(i0+2,i1,i2)];
   const double hDD22_i0p3_i1_i2 = hDD22GF_.ptr[hDD22GF_.offset(i0+3,i1,i2)];
   const double hDD22_i0_i1p1_i2 = hDD22GF_.ptr[hDD22GF_.offset(i0,i1+1,i2)];
   const double hDD22_i0_i1p2_i2 = hDD22GF_.ptr[hDD22GF_.offset(i0,i1+2,i2)];
   const double hDD22_i0_i1p3_i2 = hDD22GF_.ptr[hDD22GF_.offset(i0,i1+3,i2)];
   const double hDD22_i0_i1_i2p1 = hDD22GF_.ptr[hDD22GF_.offset(i0,i1,i2+1)];
   const double hDD22_i0_i1_i2p2 = hDD22GF_.ptr[hDD22GF_.offset(i0,i1,i2+2)];
   const double hDD22_i0_i1_i2p3 = hDD22GF_.ptr[hDD22GF_.offset(i0,i1,i2+3)];
   const double aDD00_i0_i1_i2m3 = aDD00GF_.ptr[aDD00GF_.offset(i0,i1,i2-3)];
   const double aDD00_i0_i1_i2m2 = aDD00GF_.ptr[aDD00GF_.offset(i0,i1,i2-2)];
   const double aDD00_i0_i1_i2m1 = aDD00GF_.ptr[aDD00GF_.offset(i0,i1,i2-1)];
   const double aDD00_i0_i1m3_i2 = aDD00GF_.ptr[aDD00GF_.offset(i0,i1-3,i2)];
   const double aDD00_i0_i1m2_i2 = aDD00GF_.ptr[aDD00GF_.offset(i0,i1-2,i2)];
   const double aDD00_i0_i1m1_i2 = aDD00GF_.ptr[aDD00GF_.offset(i0,i1-1,i2)];
   const double aDD00_i0m3_i1_i2 = aDD00GF_.ptr[aDD00GF_.offset(i0-3,i1,i2)];
   const double aDD00_i0m2_i1_i2 = aDD00GF_.ptr[aDD00GF_.offset(i0-2,i1,i2)];
   const double aDD00_i0m1_i1_i2 = aDD00GF_.ptr[aDD00GF_.offset(i0-1,i1,i2)];
   const double aDD00 = aDD00GF_.ptr[aDD00GF_.offset(i0,i1,i2)];
   const double aDD00_i0p1_i1_i2 = aDD00GF_.ptr[aDD00GF_.offset(i0+1,i1,i2)];
   const double aDD00_i0p2_i1_i2 = aDD00GF_.ptr[aDD00GF_.offset(i0+2,i1,i2)];
   const double aDD00_i0p3_i1_i2 = aDD00GF_.ptr[aDD00GF_.offset(i0+3,i1,i2)];
   const double aDD00_i0_i1p1_i2 = aDD00GF_.ptr[aDD00GF_.offset(i0,i1+1,i2)];
   const double aDD00_i0_i1p2_i2 = aDD00GF_.ptr[aDD00GF_.offset(i0,i1+2,i2)];
   const double aDD00_i0_i1p3_i2 = aDD00GF_.ptr[aDD00GF_.offset(i0,i1+3,i2)];
   const double aDD00_i0_i1_i2p1 = aDD00GF_.ptr[aDD00GF_.offset(i0,i1,i2+1)];
   const double aDD00_i0_i1_i2p2 = aDD00GF_.ptr[aDD00GF_.offset(i0,i1,i2+2)];
   const double aDD00_i0_i1_i2p3 = aDD00GF_.ptr[aDD00GF_.offset(i0,i1,i2+3)];
   const double aDD01_i0_i1_i2m3 = aDD01GF_.ptr[aDD01GF_.offset(i0,i1,i2-3)];
   const double aDD01_i0_i1_i2m2 = aDD01GF_.ptr[aDD01GF_.offset(i0,i1,i2-2)];
   const double aDD01_i0_i1_i2m1 = aDD01GF_.ptr[aDD01GF_.offset(i0,i1,i2-1)];
   const double aDD01_i0_i1m3_i2 = aDD01GF_.ptr[aDD01GF_.offset(i0,i1-3,i2)];
   const double aDD01_i0_i1m2_i2 = aDD01GF_.ptr[aDD01GF_.offset(i0,i1-2,i2)];
   const double aDD01_i0_i1m1_i2 = aDD01GF_.ptr[aDD01GF_.offset(i0,i1-1,i2)];
   const double aDD01_i0m3_i1_i2 = aDD01GF_.ptr[aDD01GF_.offset(i0-3,i1,i2)];
   const double aDD01_i0m2_i1_i2 = aDD01GF_.ptr[aDD01GF_.offset(i0-2,i1,i2)];
   const double aDD01_i0m1_i1_i2 = aDD01GF_.ptr[aDD01GF_.offset(i0-1,i1,i2)];
   const double aDD01 = aDD01GF_.ptr[aDD01GF_.offset(i0,i1,i2)];
   const double aDD01_i0p1_i1_i2 = aDD01GF_.ptr[aDD01GF_.offset(i0+1,i1,i2)];
   const double aDD01_i0p2_i1_i2 = aDD01GF_.ptr[aDD01GF_.offset(i0+2,i1,i2)];
   const double aDD01_i0p3_i1_i2 = aDD01GF_.ptr[aDD01GF_.offset(i0+3,i1,i2)];
   const double aDD01_i0_i1p1_i2 = aDD01GF_.ptr[aDD01GF_.offset(i0,i1+1,i2)];
   const double aDD01_i0_i1p2_i2 = aDD01GF_.ptr[aDD01GF_.offset(i0,i1+2,i2)];
   const double aDD01_i0_i1p3_i2 = aDD01GF_.ptr[aDD01GF_.offset(i0,i1+3,i2)];
   const double aDD01_i0_i1_i2p1 = aDD01GF_.ptr[aDD01GF_.offset(i0,i1,i2+1)];
   const double aDD01_i0_i1_i2p2 = aDD01GF_.ptr[aDD01GF_.offset(i0,i1,i2+2)];
   const double aDD01_i0_i1_i2p3 = aDD01GF_.ptr[aDD01GF_.offset(i0,i1,i2+3)];
   const double aDD02_i0_i1_i2m3 = aDD02GF_.ptr[aDD02GF_.offset(i0,i1,i2-3)];
   const double aDD02_i0_i1_i2m2 = aDD02GF_.ptr[aDD02GF_.offset(i0,i1,i2-2)];
   const double aDD02_i0_i1_i2m1 = aDD02GF_.ptr[aDD02GF_.offset(i0,i1,i2-1)];
   const double aDD02_i0_i1m3_i2 = aDD02GF_.ptr[aDD02GF_.offset(i0,i1-3,i2)];
   const double aDD02_i0_i1m2_i2 = aDD02GF_.ptr[aDD02GF_.offset(i0,i1-2,i2)];
   const double aDD02_i0_i1m1_i2 = aDD02GF_.ptr[aDD02GF_.offset(i0,i1-1,i2)];
   const double aDD02_i0m3_i1_i2 = aDD02GF_.ptr[aDD02GF_.offset(i0-3,i1,i2)];
   const double aDD02_i0m2_i1_i2 = aDD02GF_.ptr[aDD02GF_.offset(i0-2,i1,i2)];
   const double aDD02_i0m1_i1_i2 = aDD02GF_.ptr[aDD02GF_.offset(i0-1,i1,i2)];
   const double aDD02 = aDD02GF_.ptr[aDD02GF_.offset(i0,i1,i2)];
   const double aDD02_i0p1_i1_i2 = aDD02GF_.ptr[aDD02GF_.offset(i0+1,i1,i2)];
   const double aDD02_i0p2_i1_i2 = aDD02GF_.ptr[aDD02GF_.offset(i0+2,i1,i2)];
   const double aDD02_i0p3_i1_i2 = aDD02GF_.ptr[aDD02GF_.offset(i0+3,i1,i2)];
   const double aDD02_i0_i1p1_i2 = aDD02GF_.ptr[aDD02GF_.offset(i0,i1+1,i2)];
   const double aDD02_i0_i1p2_i2 = aDD02GF_.ptr[aDD02GF_.offset(i0,i1+2,i2)];
   const double aDD02_i0_i1p3_i2 = aDD02GF_.ptr[aDD02GF_.offset(i0,i1+3,i2)];
   const double aDD02_i0_i1_i2p1 = aDD02GF_.ptr[aDD02GF_.offset(i0,i1,i2+1)];
   const double aDD02_i0_i1_i2p2 = aDD02GF_.ptr[aDD02GF_.offset(i0,i1,i2+2)];
   const double aDD02_i0_i1_i2p3 = aDD02GF_.ptr[aDD02GF_.offset(i0,i1,i2+3)];
   const double aDD11_i0_i1_i2m3 = aDD11GF_.ptr[aDD11GF_.offset(i0,i1,i2-3)];
   const double aDD11_i0_i1_i2m2 = aDD11GF_.ptr[aDD11GF_.offset(i0,i1,i2-2)];
   const double aDD11_i0_i1_i2m1 = aDD11GF_.ptr[aDD11GF_.offset(i0,i1,i2-1)];
   const double aDD11_i0_i1m3_i2 = aDD11GF_.ptr[aDD11GF_.offset(i0,i1-3,i2)];
   const double aDD11_i0_i1m2_i2 = aDD11GF_.ptr[aDD11GF_.offset(i0,i1-2,i2)];
   const double aDD11_i0_i1m1_i2 = aDD11GF_.ptr[aDD11GF_.offset(i0,i1-1,i2)];
   const double aDD11_i0m3_i1_i2 = aDD11GF_.ptr[aDD11GF_.offset(i0-3,i1,i2)];
   const double aDD11_i0m2_i1_i2 = aDD11GF_.ptr[aDD11GF_.offset(i0-2,i1,i2)];
   const double aDD11_i0m1_i1_i2 = aDD11GF_.ptr[aDD11GF_.offset(i0-1,i1,i2)];
   const double aDD11 = aDD11GF_.ptr[aDD11GF_.offset(i0,i1,i2)];
   const double aDD11_i0p1_i1_i2 = aDD11GF_.ptr[aDD11GF_.offset(i0+1,i1,i2)];
   const double aDD11_i0p2_i1_i2 = aDD11GF_.ptr[aDD11GF_.offset(i0+2,i1,i2)];
   const double aDD11_i0p3_i1_i2 = aDD11GF_.ptr[aDD11GF_.offset(i0+3,i1,i2)];
   const double aDD11_i0_i1p1_i2 = aDD11GF_.ptr[aDD11GF_.offset(i0,i1+1,i2)];
   const double aDD11_i0_i1p2_i2 = aDD11GF_.ptr[aDD11GF_.offset(i0,i1+2,i2)];
   const double aDD11_i0_i1p3_i2 = aDD11GF_.ptr[aDD11GF_.offset(i0,i1+3,i2)];
   const double aDD11_i0_i1_i2p1 = aDD11GF_.ptr[aDD11GF_.offset(i0,i1,i2+1)];
   const double aDD11_i0_i1_i2p2 = aDD11GF_.ptr[aDD11GF_.offset(i0,i1,i2+2)];
   const double aDD11_i0_i1_i2p3 = aDD11GF_.ptr[aDD11GF_.offset(i0,i1,i2+3)];
   const double aDD12_i0_i1_i2m3 = aDD12GF_.ptr[aDD12GF_.offset(i0,i1,i2-3)];
   const double aDD12_i0_i1_i2m2 = aDD12GF_.ptr[aDD12GF_.offset(i0,i1,i2-2)];
   const double aDD12_i0_i1_i2m1 = aDD12GF_.ptr[aDD12GF_.offset(i0,i1,i2-1)];
   const double aDD12_i0_i1m3_i2 = aDD12GF_.ptr[aDD12GF_.offset(i0,i1-3,i2)];
   const double aDD12_i0_i1m2_i2 = aDD12GF_.ptr[aDD12GF_.offset(i0,i1-2,i2)];
   const double aDD12_i0_i1m1_i2 = aDD12GF_.ptr[aDD12GF_.offset(i0,i1-1,i2)];
   const double aDD12_i0m3_i1_i2 = aDD12GF_.ptr[aDD12GF_.offset(i0-3,i1,i2)];
   const double aDD12_i0m2_i1_i2 = aDD12GF_.ptr[aDD12GF_.offset(i0-2,i1,i2)];
   const double aDD12_i0m1_i1_i2 = aDD12GF_.ptr[aDD12GF_.offset(i0-1,i1,i2)];
   const double aDD12 = aDD12GF_.ptr[aDD12GF_.offset(i0,i1,i2)];
   const double aDD12_i0p1_i1_i2 = aDD12GF_.ptr[aDD12GF_.offset(i0+1,i1,i2)];
   const double aDD12_i0p2_i1_i2 = aDD12GF_.ptr[aDD12GF_.offset(i0+2,i1,i2)];
   const double aDD12_i0p3_i1_i2 = aDD12GF_.ptr[aDD12GF_.offset(i0+3,i1,i2)];
   const double aDD12_i0_i1p1_i2 = aDD12GF_.ptr[aDD12GF_.offset(i0,i1+1,i2)];
   const double aDD12_i0_i1p2_i2 = aDD12GF_.ptr[aDD12GF_.offset(i0,i1+2,i2)];
   const double aDD12_i0_i1p3_i2 = aDD12GF_.ptr[aDD12GF_.offset(i0,i1+3,i2)];
   const double aDD12_i0_i1_i2p1 = aDD12GF_.ptr[aDD12GF_.offset(i0,i1,i2+1)];
   const double aDD12_i0_i1_i2p2 = aDD12GF_.ptr[aDD12GF_.offset(i0,i1,i2+2)];
   const double aDD12_i0_i1_i2p3 = aDD12GF_.ptr[aDD12GF_.offset(i0,i1,i2+3)];
   const double aDD22_i0_i1_i2m3 = aDD22GF_.ptr[aDD22GF_.offset(i0,i1,i2-3)];
   const double aDD22_i0_i1_i2m2 = aDD22GF_.ptr[aDD22GF_.offset(i0,i1,i2-2)];
   const double aDD22_i0_i1_i2m1 = aDD22GF_.ptr[aDD22GF_.offset(i0,i1,i2-1)];
   const double aDD22_i0_i1m3_i2 = aDD22GF_.ptr[aDD22GF_.offset(i0,i1-3,i2)];
   const double aDD22_i0_i1m2_i2 = aDD22GF_.ptr[aDD22GF_.offset(i0,i1-2,i2)];
   const double aDD22_i0_i1m1_i2 = aDD22GF_.ptr[aDD22GF_.offset(i0,i1-1,i2)];
   const double aDD22_i0m3_i1_i2 = aDD22GF_.ptr[aDD22GF_.offset(i0-3,i1,i2)];
   const double aDD22_i0m2_i1_i2 = aDD22GF_.ptr[aDD22GF_.offset(i0-2,i1,i2)];
   const double aDD22_i0m1_i1_i2 = aDD22GF_.ptr[aDD22GF_.offset(i0-1,i1,i2)];
   const double aDD22 = aDD22GF_.ptr[aDD22GF_.offset(i0,i1,i2)];
   const double aDD22_i0p1_i1_i2 = aDD22GF_.ptr[aDD22GF_.offset(i0+1,i1,i2)];
   const double aDD22_i0p2_i1_i2 = aDD22GF_.ptr[aDD22GF_.offset(i0+2,i1,i2)];
   const double aDD22_i0p3_i1_i2 = aDD22GF_.ptr[aDD22GF_.offset(i0+3,i1,i2)];
   const double aDD22_i0_i1p1_i2 = aDD22GF_.ptr[aDD22GF_.offset(i0,i1+1,i2)];
   const double aDD22_i0_i1p2_i2 = aDD22GF_.ptr[aDD22GF_.offset(i0,i1+2,i2)];
   const double aDD22_i0_i1p3_i2 = aDD22GF_.ptr[aDD22GF_.offset(i0,i1+3,i2)];
   const double aDD22_i0_i1_i2p1 = aDD22GF_.ptr[aDD22GF_.offset(i0,i1,i2+1)];
   const double aDD22_i0_i1_i2p2 = aDD22GF_.ptr[aDD22GF_.offset(i0,i1,i2+2)];
   const double aDD22_i0_i1_i2p3 = aDD22GF_.ptr[aDD22GF_.offset(i0,i1,i2+3)];
   const double lambdaU0_i0_i1_i2m3 = lambdaU0GF_.ptr[lambdaU0GF_.offset(i0,i1,i2-3)];
   const double lambdaU0_i0_i1_i2m2 = lambdaU0GF_.ptr[lambdaU0GF_.offset(i0,i1,i2-2)];
   const double lambdaU0_i0_i1_i2m1 = lambdaU0GF_.ptr[lambdaU0GF_.offset(i0,i1,i2-1)];
   const double lambdaU0_i0_i1m3_i2 = lambdaU0GF_.ptr[lambdaU0GF_.offset(i0,i1-3,i2)];
   const double lambdaU0_i0_i1m2_i2 = lambdaU0GF_.ptr[lambdaU0GF_.offset(i0,i1-2,i2)];
   const double lambdaU0_i0_i1m1_i2 = lambdaU0GF_.ptr[lambdaU0GF_.offset(i0,i1-1,i2)];
   const double lambdaU0_i0m3_i1_i2 = lambdaU0GF_.ptr[lambdaU0GF_.offset(i0-3,i1,i2)];
   const double lambdaU0_i0m2_i1_i2 = lambdaU0GF_.ptr[lambdaU0GF_.offset(i0-2,i1,i2)];
   const double lambdaU0_i0m1_i1_i2 = lambdaU0GF_.ptr[lambdaU0GF_.offset(i0-1,i1,i2)];
   const double lambdaU0 = lambdaU0GF_.ptr[lambdaU0GF_.offset(i0,i1,i2)];
   const double lambdaU0_i0p1_i1_i2 = lambdaU0GF_.ptr[lambdaU0GF_.offset(i0+1,i1,i2)];
   const double lambdaU0_i0p2_i1_i2 = lambdaU0GF_.ptr[lambdaU0GF_.offset(i0+2,i1,i2)];
   const double lambdaU0_i0p3_i1_i2 = lambdaU0GF_.ptr[lambdaU0GF_.offset(i0+3,i1,i2)];
   const double lambdaU0_i0_i1p1_i2 = lambdaU0GF_.ptr[lambdaU0GF_.offset(i0,i1+1,i2)];
   const double lambdaU0_i0_i1p2_i2 = lambdaU0GF_.ptr[lambdaU0GF_.offset(i0,i1+2,i2)];
   const double lambdaU0_i0_i1p3_i2 = lambdaU0GF_.ptr[lambdaU0GF_.offset(i0,i1+3,i2)];
   const double lambdaU0_i0_i1_i2p1 = lambdaU0GF_.ptr[lambdaU0GF_.offset(i0,i1,i2+1)];
   const double lambdaU0_i0_i1_i2p2 = lambdaU0GF_.ptr[lambdaU0GF_.offset(i0,i1,i2+2)];
   const double lambdaU0_i0_i1_i2p3 = lambdaU0GF_.ptr[lambdaU0GF_.offset(i0,i1,i2+3)];
   const double lambdaU1_i0_i1_i2m3 = lambdaU1GF_.ptr[lambdaU1GF_.offset(i0,i1,i2-3)];
   const double lambdaU1_i0_i1_i2m2 = lambdaU1GF_.ptr[lambdaU1GF_.offset(i0,i1,i2-2)];
   const double lambdaU1_i0_i1_i2m1 = lambdaU1GF_.ptr[lambdaU1GF_.offset(i0,i1,i2-1)];
   const double lambdaU1_i0_i1m3_i2 = lambdaU1GF_.ptr[lambdaU1GF_.offset(i0,i1-3,i2)];
   const double lambdaU1_i0_i1m2_i2 = lambdaU1GF_.ptr[lambdaU1GF_.offset(i0,i1-2,i2)];
   const double lambdaU1_i0_i1m1_i2 = lambdaU1GF_.ptr[lambdaU1GF_.offset(i0,i1-1,i2)];
   const double lambdaU1_i0m3_i1_i2 = lambdaU1GF_.ptr[lambdaU1GF_.offset(i0-3,i1,i2)];
   const double lambdaU1_i0m2_i1_i2 = lambdaU1GF_.ptr[lambdaU1GF_.offset(i0-2,i1,i2)];
   const double lambdaU1_i0m1_i1_i2 = lambdaU1GF_.ptr[lambdaU1GF_.offset(i0-1,i1,i2)];
   const double lambdaU1 = lambdaU1GF_.ptr[lambdaU1GF_.offset(i0,i1,i2)];
   const double lambdaU1_i0p1_i1_i2 = lambdaU1GF_.ptr[lambdaU1GF_.offset(i0+1,i1,i2)];
   const double lambdaU1_i0p2_i1_i2 = lambdaU1GF_.ptr[lambdaU1GF_.offset(i0+2,i1,i2)];
   const double lambdaU1_i0p3_i1_i2 = lambdaU1GF_.ptr[lambdaU1GF_.offset(i0+3,i1,i2)];
   const double lambdaU1_i0_i1p1_i2 = lambdaU1GF_.ptr[lambdaU1GF_.offset(i0,i1+1,i2)];
   const double lambdaU1_i0_i1p2_i2 = lambdaU1GF_.ptr[lambdaU1GF_.offset(i0,i1+2,i2)];
   const double lambdaU1_i0_i1p3_i2 = lambdaU1GF_.ptr[lambdaU1GF_.offset(i0,i1+3,i2)];
   const double lambdaU1_i0_i1_i2p1 = lambdaU1GF_.ptr[lambdaU1GF_.offset(i0,i1,i2+1)];
   const double lambdaU1_i0_i1_i2p2 = lambdaU1GF_.ptr[lambdaU1GF_.offset(i0,i1,i2+2)];
   const double lambdaU1_i0_i1_i2p3 = lambdaU1GF_.ptr[lambdaU1GF_.offset(i0,i1,i2+3)];
   const double lambdaU2_i0_i1_i2m3 = lambdaU2GF_.ptr[lambdaU2GF_.offset(i0,i1,i2-3)];
   const double lambdaU2_i0_i1_i2m2 = lambdaU2GF_.ptr[lambdaU2GF_.offset(i0,i1,i2-2)];
   const double lambdaU2_i0_i1_i2m1 = lambdaU2GF_.ptr[lambdaU2GF_.offset(i0,i1,i2-1)];
   const double lambdaU2_i0_i1m3_i2 = lambdaU2GF_.ptr[lambdaU2GF_.offset(i0,i1-3,i2)];
   const double lambdaU2_i0_i1m2_i2 = lambdaU2GF_.ptr[lambdaU2GF_.offset(i0,i1-2,i2)];
   const double lambdaU2_i0_i1m1_i2 = lambdaU2GF_.ptr[lambdaU2GF_.offset(i0,i1-1,i2)];
   const double lambdaU2_i0m3_i1_i2 = lambdaU2GF_.ptr[lambdaU2GF_.offset(i0-3,i1,i2)];
   const double lambdaU2_i0m2_i1_i2 = lambdaU2GF_.ptr[lambdaU2GF_.offset(i0-2,i1,i2)];
   const double lambdaU2_i0m1_i1_i2 = lambdaU2GF_.ptr[lambdaU2GF_.offset(i0-1,i1,i2)];
   const double lambdaU2 = lambdaU2GF_.ptr[lambdaU2GF_.offset(i0,i1,i2)];
   const double lambdaU2_i0p1_i1_i2 = lambdaU2GF_.ptr[lambdaU2GF_.offset(i0+1,i1,i2)];
   const double lambdaU2_i0p2_i1_i2 = lambdaU2GF_.ptr[lambdaU2GF_.offset(i0+2,i1,i2)];
   const double lambdaU2_i0p3_i1_i2 = lambdaU2GF_.ptr[lambdaU2GF_.offset(i0+3,i1,i2)];
   const double lambdaU2_i0_i1p1_i2 = lambdaU2GF_.ptr[lambdaU2GF_.offset(i0,i1+1,i2)];
   const double lambdaU2_i0_i1p2_i2 = lambdaU2GF_.ptr[lambdaU2GF_.offset(i0,i1+2,i2)];
   const double lambdaU2_i0_i1p3_i2 = lambdaU2GF_.ptr[lambdaU2GF_.offset(i0,i1+3,i2)];
   const double lambdaU2_i0_i1_i2p1 = lambdaU2GF_.ptr[lambdaU2GF_.offset(i0,i1,i2+1)];
   const double lambdaU2_i0_i1_i2p2 = lambdaU2GF_.ptr[lambdaU2GF_.offset(i0,i1,i2+2)];
   const double lambdaU2_i0_i1_i2p3 = lambdaU2GF_.ptr[lambdaU2GF_.offset(i0,i1,i2+3)];
   const double vetU0_i0_i1_i2m3 = vetU0GF_.ptr[vetU0GF_.offset(i0,i1,i2-3)];
   const double vetU0_i0_i1m2_i2m2 = vetU0GF_.ptr[vetU0GF_.offset(i0,i1-2,i2-2)];
   const double vetU0_i0_i1m1_i2m2 = vetU0GF_.ptr[vetU0GF_.offset(i0,i1-1,i2-2)];
   const double vetU0_i0m2_i1_i2m2 = vetU0GF_.ptr[vetU0GF_.offset(i0-2,i1,i2-2)];
   const double vetU0_i0m1_i1_i2m2 = vetU0GF_.ptr[vetU0GF_.offset(i0-1,i1,i2-2)];
   const double vetU0_i0_i1_i2m2 = vetU0GF_.ptr[vetU0GF_.offset(i0,i1,i2-2)];
   const double vetU0_i0p1_i1_i2m2 = vetU0GF_.ptr[vetU0GF_.offset(i0+1,i1,i2-2)];
   const double vetU0_i0p2_i1_i2m2 = vetU0GF_.ptr[vetU0GF_.offset(i0+2,i1,i2-2)];
   const double vetU0_i0_i1p1_i2m2 = vetU0GF_.ptr[vetU0GF_.offset(i0,i1+1,i2-2)];
   const double vetU0_i0_i1p2_i2m2 = vetU0GF_.ptr[vetU0GF_.offset(i0,i1+2,i2-2)];
   const double vetU0_i0_i1m2_i2m1 = vetU0GF_.ptr[vetU0GF_.offset(i0,i1-2,i2-1)];
   const double vetU0_i0_i1m1_i2m1 = vetU0GF_.ptr[vetU0GF_.offset(i0,i1-1,i2-1)];
   const double vetU0_i0m2_i1_i2m1 = vetU0GF_.ptr[vetU0GF_.offset(i0-2,i1,i2-1)];
   const double vetU0_i0m1_i1_i2m1 = vetU0GF_.ptr[vetU0GF_.offset(i0-1,i1,i2-1)];
   const double vetU0_i0_i1_i2m1 = vetU0GF_.ptr[vetU0GF_.offset(i0,i1,i2-1)];
   const double vetU0_i0p1_i1_i2m1 = vetU0GF_.ptr[vetU0GF_.offset(i0+1,i1,i2-1)];
   const double vetU0_i0p2_i1_i2m1 = vetU0GF_.ptr[vetU0GF_.offset(i0+2,i1,i2-1)];
   const double vetU0_i0_i1p1_i2m1 = vetU0GF_.ptr[vetU0GF_.offset(i0,i1+1,i2-1)];
   const double vetU0_i0_i1p2_i2m1 = vetU0GF_.ptr[vetU0GF_.offset(i0,i1+2,i2-1)];
   const double vetU0_i0_i1m3_i2 = vetU0GF_.ptr[vetU0GF_.offset(i0,i1-3,i2)];
   const double vetU0_i0m2_i1m2_i2 = vetU0GF_.ptr[vetU0GF_.offset(i0-2,i1-2,i2)];
   const double vetU0_i0m1_i1m2_i2 = vetU0GF_.ptr[vetU0GF_.offset(i0-1,i1-2,i2)];
   const double vetU0_i0_i1m2_i2 = vetU0GF_.ptr[vetU0GF_.offset(i0,i1-2,i2)];
   const double vetU0_i0p1_i1m2_i2 = vetU0GF_.ptr[vetU0GF_.offset(i0+1,i1-2,i2)];
   const double vetU0_i0p2_i1m2_i2 = vetU0GF_.ptr[vetU0GF_.offset(i0+2,i1-2,i2)];
   const double vetU0_i0m2_i1m1_i2 = vetU0GF_.ptr[vetU0GF_.offset(i0-2,i1-1,i2)];
   const double vetU0_i0m1_i1m1_i2 = vetU0GF_.ptr[vetU0GF_.offset(i0-1,i1-1,i2)];
   const double vetU0_i0_i1m1_i2 = vetU0GF_.ptr[vetU0GF_.offset(i0,i1-1,i2)];
   const double vetU0_i0p1_i1m1_i2 = vetU0GF_.ptr[vetU0GF_.offset(i0+1,i1-1,i2)];
   const double vetU0_i0p2_i1m1_i2 = vetU0GF_.ptr[vetU0GF_.offset(i0+2,i1-1,i2)];
   const double vetU0_i0m3_i1_i2 = vetU0GF_.ptr[vetU0GF_.offset(i0-3,i1,i2)];
   const double vetU0_i0m2_i1_i2 = vetU0GF_.ptr[vetU0GF_.offset(i0-2,i1,i2)];
   const double vetU0_i0m1_i1_i2 = vetU0GF_.ptr[vetU0GF_.offset(i0-1,i1,i2)];
   const double vetU0 = vetU0GF_.ptr[vetU0GF_.offset(i0,i1,i2)];
   const double vetU0_i0p1_i1_i2 = vetU0GF_.ptr[vetU0GF_.offset(i0+1,i1,i2)];
   const double vetU0_i0p2_i1_i2 = vetU0GF_.ptr[vetU0GF_.offset(i0+2,i1,i2)];
   const double vetU0_i0p3_i1_i2 = vetU0GF_.ptr[vetU0GF_.offset(i0+3,i1,i2)];
   const double vetU0_i0m2_i1p1_i2 = vetU0GF_.ptr[vetU0GF_.offset(i0-2,i1+1,i2)];
   const double vetU0_i0m1_i1p1_i2 = vetU0GF_.ptr[vetU0GF_.offset(i0-1,i1+1,i2)];
   const double vetU0_i0_i1p1_i2 = vetU0GF_.ptr[vetU0GF_.offset(i0,i1+1,i2)];
   const double vetU0_i0p1_i1p1_i2 = vetU0GF_.ptr[vetU0GF_.offset(i0+1,i1+1,i2)];
   const double vetU0_i0p2_i1p1_i2 = vetU0GF_.ptr[vetU0GF_.offset(i0+2,i1+1,i2)];
   const double vetU0_i0m2_i1p2_i2 = vetU0GF_.ptr[vetU0GF_.offset(i0-2,i1+2,i2)];
   const double vetU0_i0m1_i1p2_i2 = vetU0GF_.ptr[vetU0GF_.offset(i0-1,i1+2,i2)];
   const double vetU0_i0_i1p2_i2 = vetU0GF_.ptr[vetU0GF_.offset(i0,i1+2,i2)];
   const double vetU0_i0p1_i1p2_i2 = vetU0GF_.ptr[vetU0GF_.offset(i0+1,i1+2,i2)];
   const double vetU0_i0p2_i1p2_i2 = vetU0GF_.ptr[vetU0GF_.offset(i0+2,i1+2,i2)];
   const double vetU0_i0_i1p3_i2 = vetU0GF_.ptr[vetU0GF_.offset(i0,i1+3,i2)];
   const double vetU0_i0_i1m2_i2p1 = vetU0GF_.ptr[vetU0GF_.offset(i0,i1-2,i2+1)];
   const double vetU0_i0_i1m1_i2p1 = vetU0GF_.ptr[vetU0GF_.offset(i0,i1-1,i2+1)];
   const double vetU0_i0m2_i1_i2p1 = vetU0GF_.ptr[vetU0GF_.offset(i0-2,i1,i2+1)];
   const double vetU0_i0m1_i1_i2p1 = vetU0GF_.ptr[vetU0GF_.offset(i0-1,i1,i2+1)];
   const double vetU0_i0_i1_i2p1 = vetU0GF_.ptr[vetU0GF_.offset(i0,i1,i2+1)];
   const double vetU0_i0p1_i1_i2p1 = vetU0GF_.ptr[vetU0GF_.offset(i0+1,i1,i2+1)];
   const double vetU0_i0p2_i1_i2p1 = vetU0GF_.ptr[vetU0GF_.offset(i0+2,i1,i2+1)];
   const double vetU0_i0_i1p1_i2p1 = vetU0GF_.ptr[vetU0GF_.offset(i0,i1+1,i2+1)];
   const double vetU0_i0_i1p2_i2p1 = vetU0GF_.ptr[vetU0GF_.offset(i0,i1+2,i2+1)];
   const double vetU0_i0_i1m2_i2p2 = vetU0GF_.ptr[vetU0GF_.offset(i0,i1-2,i2+2)];
   const double vetU0_i0_i1m1_i2p2 = vetU0GF_.ptr[vetU0GF_.offset(i0,i1-1,i2+2)];
   const double vetU0_i0m2_i1_i2p2 = vetU0GF_.ptr[vetU0GF_.offset(i0-2,i1,i2+2)];
   const double vetU0_i0m1_i1_i2p2 = vetU0GF_.ptr[vetU0GF_.offset(i0-1,i1,i2+2)];
   const double vetU0_i0_i1_i2p2 = vetU0GF_.ptr[vetU0GF_.offset(i0,i1,i2+2)];
   const double vetU0_i0p1_i1_i2p2 = vetU0GF_.ptr[vetU0GF_.offset(i0+1,i1,i2+2)];
   const double vetU0_i0p2_i1_i2p2 = vetU0GF_.ptr[vetU0GF_.offset(i0+2,i1,i2+2)];
   const double vetU0_i0_i1p1_i2p2 = vetU0GF_.ptr[vetU0GF_.offset(i0,i1+1,i2+2)];
   const double vetU0_i0_i1p2_i2p2 = vetU0GF_.ptr[vetU0GF_.offset(i0,i1+2,i2+2)];
   const double vetU0_i0_i1_i2p3 = vetU0GF_.ptr[vetU0GF_.offset(i0,i1,i2+3)];
   const double vetU1_i0_i1_i2m3 = vetU1GF_.ptr[vetU1GF_.offset(i0,i1,i2-3)];
   const double vetU1_i0_i1m2_i2m2 = vetU1GF_.ptr[vetU1GF_.offset(i0,i1-2,i2-2)];
   const double vetU1_i0_i1m1_i2m2 = vetU1GF_.ptr[vetU1GF_.offset(i0,i1-1,i2-2)];
   const double vetU1_i0m2_i1_i2m2 = vetU1GF_.ptr[vetU1GF_.offset(i0-2,i1,i2-2)];
   const double vetU1_i0m1_i1_i2m2 = vetU1GF_.ptr[vetU1GF_.offset(i0-1,i1,i2-2)];
   const double vetU1_i0_i1_i2m2 = vetU1GF_.ptr[vetU1GF_.offset(i0,i1,i2-2)];
   const double vetU1_i0p1_i1_i2m2 = vetU1GF_.ptr[vetU1GF_.offset(i0+1,i1,i2-2)];
   const double vetU1_i0p2_i1_i2m2 = vetU1GF_.ptr[vetU1GF_.offset(i0+2,i1,i2-2)];
   const double vetU1_i0_i1p1_i2m2 = vetU1GF_.ptr[vetU1GF_.offset(i0,i1+1,i2-2)];
   const double vetU1_i0_i1p2_i2m2 = vetU1GF_.ptr[vetU1GF_.offset(i0,i1+2,i2-2)];
   const double vetU1_i0_i1m2_i2m1 = vetU1GF_.ptr[vetU1GF_.offset(i0,i1-2,i2-1)];
   const double vetU1_i0_i1m1_i2m1 = vetU1GF_.ptr[vetU1GF_.offset(i0,i1-1,i2-1)];
   const double vetU1_i0m2_i1_i2m1 = vetU1GF_.ptr[vetU1GF_.offset(i0-2,i1,i2-1)];
   const double vetU1_i0m1_i1_i2m1 = vetU1GF_.ptr[vetU1GF_.offset(i0-1,i1,i2-1)];
   const double vetU1_i0_i1_i2m1 = vetU1GF_.ptr[vetU1GF_.offset(i0,i1,i2-1)];
   const double vetU1_i0p1_i1_i2m1 = vetU1GF_.ptr[vetU1GF_.offset(i0+1,i1,i2-1)];
   const double vetU1_i0p2_i1_i2m1 = vetU1GF_.ptr[vetU1GF_.offset(i0+2,i1,i2-1)];
   const double vetU1_i0_i1p1_i2m1 = vetU1GF_.ptr[vetU1GF_.offset(i0,i1+1,i2-1)];
   const double vetU1_i0_i1p2_i2m1 = vetU1GF_.ptr[vetU1GF_.offset(i0,i1+2,i2-1)];
   const double vetU1_i0_i1m3_i2 = vetU1GF_.ptr[vetU1GF_.offset(i0,i1-3,i2)];
   const double vetU1_i0m2_i1m2_i2 = vetU1GF_.ptr[vetU1GF_.offset(i0-2,i1-2,i2)];
   const double vetU1_i0m1_i1m2_i2 = vetU1GF_.ptr[vetU1GF_.offset(i0-1,i1-2,i2)];
   const double vetU1_i0_i1m2_i2 = vetU1GF_.ptr[vetU1GF_.offset(i0,i1-2,i2)];
   const double vetU1_i0p1_i1m2_i2 = vetU1GF_.ptr[vetU1GF_.offset(i0+1,i1-2,i2)];
   const double vetU1_i0p2_i1m2_i2 = vetU1GF_.ptr[vetU1GF_.offset(i0+2,i1-2,i2)];
   const double vetU1_i0m2_i1m1_i2 = vetU1GF_.ptr[vetU1GF_.offset(i0-2,i1-1,i2)];
   const double vetU1_i0m1_i1m1_i2 = vetU1GF_.ptr[vetU1GF_.offset(i0-1,i1-1,i2)];
   const double vetU1_i0_i1m1_i2 = vetU1GF_.ptr[vetU1GF_.offset(i0,i1-1,i2)];
   const double vetU1_i0p1_i1m1_i2 = vetU1GF_.ptr[vetU1GF_.offset(i0+1,i1-1,i2)];
   const double vetU1_i0p2_i1m1_i2 = vetU1GF_.ptr[vetU1GF_.offset(i0+2,i1-1,i2)];
   const double vetU1_i0m3_i1_i2 = vetU1GF_.ptr[vetU1GF_.offset(i0-3,i1,i2)];
   const double vetU1_i0m2_i1_i2 = vetU1GF_.ptr[vetU1GF_.offset(i0-2,i1,i2)];
   const double vetU1_i0m1_i1_i2 = vetU1GF_.ptr[vetU1GF_.offset(i0-1,i1,i2)];
   const double vetU1 = vetU1GF_.ptr[vetU1GF_.offset(i0,i1,i2)];
   const double vetU1_i0p1_i1_i2 = vetU1GF_.ptr[vetU1GF_.offset(i0+1,i1,i2)];
   const double vetU1_i0p2_i1_i2 = vetU1GF_.ptr[vetU1GF_.offset(i0+2,i1,i2)];
   const double vetU1_i0p3_i1_i2 = vetU1GF_.ptr[vetU1GF_.offset(i0+3,i1,i2)];
   const double vetU1_i0m2_i1p1_i2 = vetU1GF_.ptr[vetU1GF_.offset(i0-2,i1+1,i2)];
   const double vetU1_i0m1_i1p1_i2 = vetU1GF_.ptr[vetU1GF_.offset(i0-1,i1+1,i2)];
   const double vetU1_i0_i1p1_i2 = vetU1GF_.ptr[vetU1GF_.offset(i0,i1+1,i2)];
   const double vetU1_i0p1_i1p1_i2 = vetU1GF_.ptr[vetU1GF_.offset(i0+1,i1+1,i2)];
   const double vetU1_i0p2_i1p1_i2 = vetU1GF_.ptr[vetU1GF_.offset(i0+2,i1+1,i2)];
   const double vetU1_i0m2_i1p2_i2 = vetU1GF_.ptr[vetU1GF_.offset(i0-2,i1+2,i2)];
   const double vetU1_i0m1_i1p2_i2 = vetU1GF_.ptr[vetU1GF_.offset(i0-1,i1+2,i2)];
   const double vetU1_i0_i1p2_i2 = vetU1GF_.ptr[vetU1GF_.offset(i0,i1+2,i2)];
   const double vetU1_i0p1_i1p2_i2 = vetU1GF_.ptr[vetU1GF_.offset(i0+1,i1+2,i2)];
   const double vetU1_i0p2_i1p2_i2 = vetU1GF_.ptr[vetU1GF_.offset(i0+2,i1+2,i2)];
   const double vetU1_i0_i1p3_i2 = vetU1GF_.ptr[vetU1GF_.offset(i0,i1+3,i2)];
   const double vetU1_i0_i1m2_i2p1 = vetU1GF_.ptr[vetU1GF_.offset(i0,i1-2,i2+1)];
   const double vetU1_i0_i1m1_i2p1 = vetU1GF_.ptr[vetU1GF_.offset(i0,i1-1,i2+1)];
   const double vetU1_i0m2_i1_i2p1 = vetU1GF_.ptr[vetU1GF_.offset(i0-2,i1,i2+1)];
   const double vetU1_i0m1_i1_i2p1 = vetU1GF_.ptr[vetU1GF_.offset(i0-1,i1,i2+1)];
   const double vetU1_i0_i1_i2p1 = vetU1GF_.ptr[vetU1GF_.offset(i0,i1,i2+1)];
   const double vetU1_i0p1_i1_i2p1 = vetU1GF_.ptr[vetU1GF_.offset(i0+1,i1,i2+1)];
   const double vetU1_i0p2_i1_i2p1 = vetU1GF_.ptr[vetU1GF_.offset(i0+2,i1,i2+1)];
   const double vetU1_i0_i1p1_i2p1 = vetU1GF_.ptr[vetU1GF_.offset(i0,i1+1,i2+1)];
   const double vetU1_i0_i1p2_i2p1 = vetU1GF_.ptr[vetU1GF_.offset(i0,i1+2,i2+1)];
   const double vetU1_i0_i1m2_i2p2 = vetU1GF_.ptr[vetU1GF_.offset(i0,i1-2,i2+2)];
   const double vetU1_i0_i1m1_i2p2 = vetU1GF_.ptr[vetU1GF_.offset(i0,i1-1,i2+2)];
   const double vetU1_i0m2_i1_i2p2 = vetU1GF_.ptr[vetU1GF_.offset(i0-2,i1,i2+2)];
   const double vetU1_i0m1_i1_i2p2 = vetU1GF_.ptr[vetU1GF_.offset(i0-1,i1,i2+2)];
   const double vetU1_i0_i1_i2p2 = vetU1GF_.ptr[vetU1GF_.offset(i0,i1,i2+2)];
   const double vetU1_i0p1_i1_i2p2 = vetU1GF_.ptr[vetU1GF_.offset(i0+1,i1,i2+2)];
   const double vetU1_i0p2_i1_i2p2 = vetU1GF_.ptr[vetU1GF_.offset(i0+2,i1,i2+2)];
   const double vetU1_i0_i1p1_i2p2 = vetU1GF_.ptr[vetU1GF_.offset(i0,i1+1,i2+2)];
   const double vetU1_i0_i1p2_i2p2 = vetU1GF_.ptr[vetU1GF_.offset(i0,i1+2,i2+2)];
   const double vetU1_i0_i1_i2p3 = vetU1GF_.ptr[vetU1GF_.offset(i0,i1,i2+3)];
   const double vetU2_i0_i1_i2m3 = vetU2GF_.ptr[vetU2GF_.offset(i0,i1,i2-3)];
   const double vetU2_i0_i1m2_i2m2 = vetU2GF_.ptr[vetU2GF_.offset(i0,i1-2,i2-2)];
   const double vetU2_i0_i1m1_i2m2 = vetU2GF_.ptr[vetU2GF_.offset(i0,i1-1,i2-2)];
   const double vetU2_i0m2_i1_i2m2 = vetU2GF_.ptr[vetU2GF_.offset(i0-2,i1,i2-2)];
   const double vetU2_i0m1_i1_i2m2 = vetU2GF_.ptr[vetU2GF_.offset(i0-1,i1,i2-2)];
   const double vetU2_i0_i1_i2m2 = vetU2GF_.ptr[vetU2GF_.offset(i0,i1,i2-2)];
   const double vetU2_i0p1_i1_i2m2 = vetU2GF_.ptr[vetU2GF_.offset(i0+1,i1,i2-2)];
   const double vetU2_i0p2_i1_i2m2 = vetU2GF_.ptr[vetU2GF_.offset(i0+2,i1,i2-2)];
   const double vetU2_i0_i1p1_i2m2 = vetU2GF_.ptr[vetU2GF_.offset(i0,i1+1,i2-2)];
   const double vetU2_i0_i1p2_i2m2 = vetU2GF_.ptr[vetU2GF_.offset(i0,i1+2,i2-2)];
   const double vetU2_i0_i1m2_i2m1 = vetU2GF_.ptr[vetU2GF_.offset(i0,i1-2,i2-1)];
   const double vetU2_i0_i1m1_i2m1 = vetU2GF_.ptr[vetU2GF_.offset(i0,i1-1,i2-1)];
   const double vetU2_i0m2_i1_i2m1 = vetU2GF_.ptr[vetU2GF_.offset(i0-2,i1,i2-1)];
   const double vetU2_i0m1_i1_i2m1 = vetU2GF_.ptr[vetU2GF_.offset(i0-1,i1,i2-1)];
   const double vetU2_i0_i1_i2m1 = vetU2GF_.ptr[vetU2GF_.offset(i0,i1,i2-1)];
   const double vetU2_i0p1_i1_i2m1 = vetU2GF_.ptr[vetU2GF_.offset(i0+1,i1,i2-1)];
   const double vetU2_i0p2_i1_i2m1 = vetU2GF_.ptr[vetU2GF_.offset(i0+2,i1,i2-1)];
   const double vetU2_i0_i1p1_i2m1 = vetU2GF_.ptr[vetU2GF_.offset(i0,i1+1,i2-1)];
   const double vetU2_i0_i1p2_i2m1 = vetU2GF_.ptr[vetU2GF_.offset(i0,i1+2,i2-1)];
   const double vetU2_i0_i1m3_i2 = vetU2GF_.ptr[vetU2GF_.offset(i0,i1-3,i2)];
   const double vetU2_i0m2_i1m2_i2 = vetU2GF_.ptr[vetU2GF_.offset(i0-2,i1-2,i2)];
   const double vetU2_i0m1_i1m2_i2 = vetU2GF_.ptr[vetU2GF_.offset(i0-1,i1-2,i2)];
   const double vetU2_i0_i1m2_i2 = vetU2GF_.ptr[vetU2GF_.offset(i0,i1-2,i2)];
   const double vetU2_i0p1_i1m2_i2 = vetU2GF_.ptr[vetU2GF_.offset(i0+1,i1-2,i2)];
   const double vetU2_i0p2_i1m2_i2 = vetU2GF_.ptr[vetU2GF_.offset(i0+2,i1-2,i2)];
   const double vetU2_i0m2_i1m1_i2 = vetU2GF_.ptr[vetU2GF_.offset(i0-2,i1-1,i2)];
   const double vetU2_i0m1_i1m1_i2 = vetU2GF_.ptr[vetU2GF_.offset(i0-1,i1-1,i2)];
   const double vetU2_i0_i1m1_i2 = vetU2GF_.ptr[vetU2GF_.offset(i0,i1-1,i2)];
   const double vetU2_i0p1_i1m1_i2 = vetU2GF_.ptr[vetU2GF_.offset(i0+1,i1-1,i2)];
   const double vetU2_i0p2_i1m1_i2 = vetU2GF_.ptr[vetU2GF_.offset(i0+2,i1-1,i2)];
   const double vetU2_i0m3_i1_i2 = vetU2GF_.ptr[vetU2GF_.offset(i0-3,i1,i2)];
   const double vetU2_i0m2_i1_i2 = vetU2GF_.ptr[vetU2GF_.offset(i0-2,i1,i2)];
   const double vetU2_i0m1_i1_i2 = vetU2GF_.ptr[vetU2GF_.offset(i0-1,i1,i2)];
   const double vetU2 = vetU2GF_.ptr[vetU2GF_.offset(i0,i1,i2)];
   const double vetU2_i0p1_i1_i2 = vetU2GF_.ptr[vetU2GF_.offset(i0+1,i1,i2)];
   const double vetU2_i0p2_i1_i2 = vetU2GF_.ptr[vetU2GF_.offset(i0+2,i1,i2)];
   const double vetU2_i0p3_i1_i2 = vetU2GF_.ptr[vetU2GF_.offset(i0+3,i1,i2)];
   const double vetU2_i0m2_i1p1_i2 = vetU2GF_.ptr[vetU2GF_.offset(i0-2,i1+1,i2)];
   const double vetU2_i0m1_i1p1_i2 = vetU2GF_.ptr[vetU2GF_.offset(i0-1,i1+1,i2)];
   const double vetU2_i0_i1p1_i2 = vetU2GF_.ptr[vetU2GF_.offset(i0,i1+1,i2)];
   const double vetU2_i0p1_i1p1_i2 = vetU2GF_.ptr[vetU2GF_.offset(i0+1,i1+1,i2)];
   const double vetU2_i0p2_i1p1_i2 = vetU2GF_.ptr[vetU2GF_.offset(i0+2,i1+1,i2)];
   const double vetU2_i0m2_i1p2_i2 = vetU2GF_.ptr[vetU2GF_.offset(i0-2,i1+2,i2)];
   const double vetU2_i0m1_i1p2_i2 = vetU2GF_.ptr[vetU2GF_.offset(i0-1,i1+2,i2)];
   const double vetU2_i0_i1p2_i2 = vetU2GF_.ptr[vetU2GF_.offset(i0,i1+2,i2)];
   const double vetU2_i0p1_i1p2_i2 = vetU2GF_.ptr[vetU2GF_.offset(i0+1,i1+2,i2)];
   const double vetU2_i0p2_i1p2_i2 = vetU2GF_.ptr[vetU2GF_.offset(i0+2,i1+2,i2)];
   const double vetU2_i0_i1p3_i2 = vetU2GF_.ptr[vetU2GF_.offset(i0,i1+3,i2)];
   const double vetU2_i0_i1m2_i2p1 = vetU2GF_.ptr[vetU2GF_.offset(i0,i1-2,i2+1)];
   const double vetU2_i0_i1m1_i2p1 = vetU2GF_.ptr[vetU2GF_.offset(i0,i1-1,i2+1)];
   const double vetU2_i0m2_i1_i2p1 = vetU2GF_.ptr[vetU2GF_.offset(i0-2,i1,i2+1)];
   const double vetU2_i0m1_i1_i2p1 = vetU2GF_.ptr[vetU2GF_.offset(i0-1,i1,i2+1)];
   const double vetU2_i0_i1_i2p1 = vetU2GF_.ptr[vetU2GF_.offset(i0,i1,i2+1)];
   const double vetU2_i0p1_i1_i2p1 = vetU2GF_.ptr[vetU2GF_.offset(i0+1,i1,i2+1)];
   const double vetU2_i0p2_i1_i2p1 = vetU2GF_.ptr[vetU2GF_.offset(i0+2,i1,i2+1)];
   const double vetU2_i0_i1p1_i2p1 = vetU2GF_.ptr[vetU2GF_.offset(i0,i1+1,i2+1)];
   const double vetU2_i0_i1p2_i2p1 = vetU2GF_.ptr[vetU2GF_.offset(i0,i1+2,i2+1)];
   const double vetU2_i0_i1m2_i2p2 = vetU2GF_.ptr[vetU2GF_.offset(i0,i1-2,i2+2)];
   const double vetU2_i0_i1m1_i2p2 = vetU2GF_.ptr[vetU2GF_.offset(i0,i1-1,i2+2)];
   const double vetU2_i0m2_i1_i2p2 = vetU2GF_.ptr[vetU2GF_.offset(i0-2,i1,i2+2)];
   const double vetU2_i0m1_i1_i2p2 = vetU2GF_.ptr[vetU2GF_.offset(i0-1,i1,i2+2)];
   const double vetU2_i0_i1_i2p2 = vetU2GF_.ptr[vetU2GF_.offset(i0,i1,i2+2)];
   const double vetU2_i0p1_i1_i2p2 = vetU2GF_.ptr[vetU2GF_.offset(i0+1,i1,i2+2)];
   const double vetU2_i0p2_i1_i2p2 = vetU2GF_.ptr[vetU2GF_.offset(i0+2,i1,i2+2)];
   const double vetU2_i0_i1p1_i2p2 = vetU2GF_.ptr[vetU2GF_.offset(i0,i1+1,i2+2)];
   const double vetU2_i0_i1p2_i2p2 = vetU2GF_.ptr[vetU2GF_.offset(i0,i1+2,i2+2)];
   const double vetU2_i0_i1_i2p3 = vetU2GF_.ptr[vetU2GF_.offset(i0,i1,i2+3)];
   const double betU0_i0_i1_i2m3 = betU0GF_.ptr[betU0GF_.offset(i0,i1,i2-3)];
   const double betU0_i0_i1_i2m2 = betU0GF_.ptr[betU0GF_.offset(i0,i1,i2-2)];
   const double betU0_i0_i1_i2m1 = betU0GF_.ptr[betU0GF_.offset(i0,i1,i2-1)];
   const double betU0_i0_i1m3_i2 = betU0GF_.ptr[betU0GF_.offset(i0,i1-3,i2)];
   const double betU0_i0_i1m2_i2 = betU0GF_.ptr[betU0GF_.offset(i0,i1-2,i2)];
   const double betU0_i0_i1m1_i2 = betU0GF_.ptr[betU0GF_.offset(i0,i1-1,i2)];
   const double betU0_i0m3_i1_i2 = betU0GF_.ptr[betU0GF_.offset(i0-3,i1,i2)];
   const double betU0_i0m2_i1_i2 = betU0GF_.ptr[betU0GF_.offset(i0-2,i1,i2)];
   const double betU0_i0m1_i1_i2 = betU0GF_.ptr[betU0GF_.offset(i0-1,i1,i2)];
   const double betU0 = betU0GF_.ptr[betU0GF_.offset(i0,i1,i2)];
   const double betU0_i0p1_i1_i2 = betU0GF_.ptr[betU0GF_.offset(i0+1,i1,i2)];
   const double betU0_i0p2_i1_i2 = betU0GF_.ptr[betU0GF_.offset(i0+2,i1,i2)];
   const double betU0_i0p3_i1_i2 = betU0GF_.ptr[betU0GF_.offset(i0+3,i1,i2)];
   const double betU0_i0_i1p1_i2 = betU0GF_.ptr[betU0GF_.offset(i0,i1+1,i2)];
   const double betU0_i0_i1p2_i2 = betU0GF_.ptr[betU0GF_.offset(i0,i1+2,i2)];
   const double betU0_i0_i1p3_i2 = betU0GF_.ptr[betU0GF_.offset(i0,i1+3,i2)];
   const double betU0_i0_i1_i2p1 = betU0GF_.ptr[betU0GF_.offset(i0,i1,i2+1)];
   const double betU0_i0_i1_i2p2 = betU0GF_.ptr[betU0GF_.offset(i0,i1,i2+2)];
   const double betU0_i0_i1_i2p3 = betU0GF_.ptr[betU0GF_.offset(i0,i1,i2+3)];
   const double betU1_i0_i1_i2m3 = betU1GF_.ptr[betU1GF_.offset(i0,i1,i2-3)];
   const double betU1_i0_i1_i2m2 = betU1GF_.ptr[betU1GF_.offset(i0,i1,i2-2)];
   const double betU1_i0_i1_i2m1 = betU1GF_.ptr[betU1GF_.offset(i0,i1,i2-1)];
   const double betU1_i0_i1m3_i2 = betU1GF_.ptr[betU1GF_.offset(i0,i1-3,i2)];
   const double betU1_i0_i1m2_i2 = betU1GF_.ptr[betU1GF_.offset(i0,i1-2,i2)];
   const double betU1_i0_i1m1_i2 = betU1GF_.ptr[betU1GF_.offset(i0,i1-1,i2)];
   const double betU1_i0m3_i1_i2 = betU1GF_.ptr[betU1GF_.offset(i0-3,i1,i2)];
   const double betU1_i0m2_i1_i2 = betU1GF_.ptr[betU1GF_.offset(i0-2,i1,i2)];
   const double betU1_i0m1_i1_i2 = betU1GF_.ptr[betU1GF_.offset(i0-1,i1,i2)];
   const double betU1 = betU1GF_.ptr[betU1GF_.offset(i0,i1,i2)];
   const double betU1_i0p1_i1_i2 = betU1GF_.ptr[betU1GF_.offset(i0+1,i1,i2)];
   const double betU1_i0p2_i1_i2 = betU1GF_.ptr[betU1GF_.offset(i0+2,i1,i2)];
   const double betU1_i0p3_i1_i2 = betU1GF_.ptr[betU1GF_.offset(i0+3,i1,i2)];
   const double betU1_i0_i1p1_i2 = betU1GF_.ptr[betU1GF_.offset(i0,i1+1,i2)];
   const double betU1_i0_i1p2_i2 = betU1GF_.ptr[betU1GF_.offset(i0,i1+2,i2)];
   const double betU1_i0_i1p3_i2 = betU1GF_.ptr[betU1GF_.offset(i0,i1+3,i2)];
   const double betU1_i0_i1_i2p1 = betU1GF_.ptr[betU1GF_.offset(i0,i1,i2+1)];
   const double betU1_i0_i1_i2p2 = betU1GF_.ptr[betU1GF_.offset(i0,i1,i2+2)];
   const double betU1_i0_i1_i2p3 = betU1GF_.ptr[betU1GF_.offset(i0,i1,i2+3)];
   const double betU2_i0_i1_i2m3 = betU2GF_.ptr[betU2GF_.offset(i0,i1,i2-3)];
   const double betU2_i0_i1_i2m2 = betU2GF_.ptr[betU2GF_.offset(i0,i1,i2-2)];
   const double betU2_i0_i1_i2m1 = betU2GF_.ptr[betU2GF_.offset(i0,i1,i2-1)];
   const double betU2_i0_i1m3_i2 = betU2GF_.ptr[betU2GF_.offset(i0,i1-3,i2)];
   const double betU2_i0_i1m2_i2 = betU2GF_.ptr[betU2GF_.offset(i0,i1-2,i2)];
   const double betU2_i0_i1m1_i2 = betU2GF_.ptr[betU2GF_.offset(i0,i1-1,i2)];
   const double betU2_i0m3_i1_i2 = betU2GF_.ptr[betU2GF_.offset(i0-3,i1,i2)];
   const double betU2_i0m2_i1_i2 = betU2GF_.ptr[betU2GF_.offset(i0-2,i1,i2)];
   const double betU2_i0m1_i1_i2 = betU2GF_.ptr[betU2GF_.offset(i0-1,i1,i2)];
   const double betU2 = betU2GF_.ptr[betU2GF_.offset(i0,i1,i2)];
   const double betU2_i0p1_i1_i2 = betU2GF_.ptr[betU2GF_.offset(i0+1,i1,i2)];
   const double betU2_i0p2_i1_i2 = betU2GF_.ptr[betU2GF_.offset(i0+2,i1,i2)];
   const double betU2_i0p3_i1_i2 = betU2GF_.ptr[betU2GF_.offset(i0+3,i1,i2)];
   const double betU2_i0_i1p1_i2 = betU2GF_.ptr[betU2GF_.offset(i0,i1+1,i2)];
   const double betU2_i0_i1p2_i2 = betU2GF_.ptr[betU2GF_.offset(i0,i1+2,i2)];
   const double betU2_i0_i1p3_i2 = betU2GF_.ptr[betU2GF_.offset(i0,i1+3,i2)];
   const double betU2_i0_i1_i2p1 = betU2GF_.ptr[betU2GF_.offset(i0,i1,i2+1)];
   const double betU2_i0_i1_i2p2 = betU2GF_.ptr[betU2GF_.offset(i0,i1,i2+2)];
   const double betU2_i0_i1_i2p3 = betU2GF_.ptr[betU2GF_.offset(i0,i1,i2+3)];
   const double trK_i0_i1_i2m3 = trKGF_.ptr[trKGF_.offset(i0,i1,i2-3)];
   const double trK_i0_i1_i2m2 = trKGF_.ptr[trKGF_.offset(i0,i1,i2-2)];
   const double trK_i0_i1_i2m1 = trKGF_.ptr[trKGF_.offset(i0,i1,i2-1)];
   const double trK_i0_i1m3_i2 = trKGF_.ptr[trKGF_.offset(i0,i1-3,i2)];
   const double trK_i0_i1m2_i2 = trKGF_.ptr[trKGF_.offset(i0,i1-2,i2)];
   const double trK_i0_i1m1_i2 = trKGF_.ptr[trKGF_.offset(i0,i1-1,i2)];
   const double trK_i0m3_i1_i2 = trKGF_.ptr[trKGF_.offset(i0-3,i1,i2)];
   const double trK_i0m2_i1_i2 = trKGF_.ptr[trKGF_.offset(i0-2,i1,i2)];
   const double trK_i0m1_i1_i2 = trKGF_.ptr[trKGF_.offset(i0-1,i1,i2)];
   const double trK = trKGF_.ptr[trKGF_.offset(i0,i1,i2)];
   const double trK_i0p1_i1_i2 = trKGF_.ptr[trKGF_.offset(i0+1,i1,i2)];
   const double trK_i0p2_i1_i2 = trKGF_.ptr[trKGF_.offset(i0+2,i1,i2)];
   const double trK_i0p3_i1_i2 = trKGF_.ptr[trKGF_.offset(i0+3,i1,i2)];
   const double trK_i0_i1p1_i2 = trKGF_.ptr[trKGF_.offset(i0,i1+1,i2)];
   const double trK_i0_i1p2_i2 = trKGF_.ptr[trKGF_.offset(i0,i1+2,i2)];
   const double trK_i0_i1p3_i2 = trKGF_.ptr[trKGF_.offset(i0,i1+3,i2)];
   const double trK_i0_i1_i2p1 = trKGF_.ptr[trKGF_.offset(i0,i1,i2+1)];
   const double trK_i0_i1_i2p2 = trKGF_.ptr[trKGF_.offset(i0,i1,i2+2)];
   const double trK_i0_i1_i2p3 = trKGF_.ptr[trKGF_.offset(i0,i1,i2+3)];
   const double cf_i0_i1_i2m3 = cfGF_.ptr[cfGF_.offset(i0,i1,i2-3)];
   const double cf_i0_i1m2_i2m2 = cfGF_.ptr[cfGF_.offset(i0,i1-2,i2-2)];
   const double cf_i0_i1m1_i2m2 = cfGF_.ptr[cfGF_.offset(i0,i1-1,i2-2)];
   const double cf_i0m2_i1_i2m2 = cfGF_.ptr[cfGF_.offset(i0-2,i1,i2-2)];
   const double cf_i0m1_i1_i2m2 = cfGF_.ptr[cfGF_.offset(i0-1,i1,i2-2)];
   const double cf_i0_i1_i2m2 = cfGF_.ptr[cfGF_.offset(i0,i1,i2-2)];
   const double cf_i0p1_i1_i2m2 = cfGF_.ptr[cfGF_.offset(i0+1,i1,i2-2)];
   const double cf_i0p2_i1_i2m2 = cfGF_.ptr[cfGF_.offset(i0+2,i1,i2-2)];
   const double cf_i0_i1p1_i2m2 = cfGF_.ptr[cfGF_.offset(i0,i1+1,i2-2)];
   const double cf_i0_i1p2_i2m2 = cfGF_.ptr[cfGF_.offset(i0,i1+2,i2-2)];
   const double cf_i0_i1m2_i2m1 = cfGF_.ptr[cfGF_.offset(i0,i1-2,i2-1)];
   const double cf_i0_i1m1_i2m1 = cfGF_.ptr[cfGF_.offset(i0,i1-1,i2-1)];
   const double cf_i0m2_i1_i2m1 = cfGF_.ptr[cfGF_.offset(i0-2,i1,i2-1)];
   const double cf_i0m1_i1_i2m1 = cfGF_.ptr[cfGF_.offset(i0-1,i1,i2-1)];
   const double cf_i0_i1_i2m1 = cfGF_.ptr[cfGF_.offset(i0,i1,i2-1)];
   const double cf_i0p1_i1_i2m1 = cfGF_.ptr[cfGF_.offset(i0+1,i1,i2-1)];
   const double cf_i0p2_i1_i2m1 = cfGF_.ptr[cfGF_.offset(i0+2,i1,i2-1)];
   const double cf_i0_i1p1_i2m1 = cfGF_.ptr[cfGF_.offset(i0,i1+1,i2-1)];
   const double cf_i0_i1p2_i2m1 = cfGF_.ptr[cfGF_.offset(i0,i1+2,i2-1)];
   const double cf_i0_i1m3_i2 = cfGF_.ptr[cfGF_.offset(i0,i1-3,i2)];
   const double cf_i0m2_i1m2_i2 = cfGF_.ptr[cfGF_.offset(i0-2,i1-2,i2)];
   const double cf_i0m1_i1m2_i2 = cfGF_.ptr[cfGF_.offset(i0-1,i1-2,i2)];
   const double cf_i0_i1m2_i2 = cfGF_.ptr[cfGF_.offset(i0,i1-2,i2)];
   const double cf_i0p1_i1m2_i2 = cfGF_.ptr[cfGF_.offset(i0+1,i1-2,i2)];
   const double cf_i0p2_i1m2_i2 = cfGF_.ptr[cfGF_.offset(i0+2,i1-2,i2)];
   const double cf_i0m2_i1m1_i2 = cfGF_.ptr[cfGF_.offset(i0-2,i1-1,i2)];
   const double cf_i0m1_i1m1_i2 = cfGF_.ptr[cfGF_.offset(i0-1,i1-1,i2)];
   const double cf_i0_i1m1_i2 = cfGF_.ptr[cfGF_.offset(i0,i1-1,i2)];
   const double cf_i0p1_i1m1_i2 = cfGF_.ptr[cfGF_.offset(i0+1,i1-1,i2)];
   const double cf_i0p2_i1m1_i2 = cfGF_.ptr[cfGF_.offset(i0+2,i1-1,i2)];
   const double cf_i0m3_i1_i2 = cfGF_.ptr[cfGF_.offset(i0-3,i1,i2)];
   const double cf_i0m2_i1_i2 = cfGF_.ptr[cfGF_.offset(i0-2,i1,i2)];
   const double cf_i0m1_i1_i2 = cfGF_.ptr[cfGF_.offset(i0-1,i1,i2)];
   const double cf = cfGF_.ptr[cfGF_.offset(i0,i1,i2)];
   const double cf_i0p1_i1_i2 = cfGF_.ptr[cfGF_.offset(i0+1,i1,i2)];
   const double cf_i0p2_i1_i2 = cfGF_.ptr[cfGF_.offset(i0+2,i1,i2)];
   const double cf_i0p3_i1_i2 = cfGF_.ptr[cfGF_.offset(i0+3,i1,i2)];
   const double cf_i0m2_i1p1_i2 = cfGF_.ptr[cfGF_.offset(i0-2,i1+1,i2)];
   const double cf_i0m1_i1p1_i2 = cfGF_.ptr[cfGF_.offset(i0-1,i1+1,i2)];
   const double cf_i0_i1p1_i2 = cfGF_.ptr[cfGF_.offset(i0,i1+1,i2)];
   const double cf_i0p1_i1p1_i2 = cfGF_.ptr[cfGF_.offset(i0+1,i1+1,i2)];
   const double cf_i0p2_i1p1_i2 = cfGF_.ptr[cfGF_.offset(i0+2,i1+1,i2)];
   const double cf_i0m2_i1p2_i2 = cfGF_.ptr[cfGF_.offset(i0-2,i1+2,i2)];
   const double cf_i0m1_i1p2_i2 = cfGF_.ptr[cfGF_.offset(i0-1,i1+2,i2)];
   const double cf_i0_i1p2_i2 = cfGF_.ptr[cfGF_.offset(i0,i1+2,i2)];
   const double cf_i0p1_i1p2_i2 = cfGF_.ptr[cfGF_.offset(i0+1,i1+2,i2)];
   const double cf_i0p2_i1p2_i2 = cfGF_.ptr[cfGF_.offset(i0+2,i1+2,i2)];
   const double cf_i0_i1p3_i2 = cfGF_.ptr[cfGF_.offset(i0,i1+3,i2)];
   const double cf_i0_i1m2_i2p1 = cfGF_.ptr[cfGF_.offset(i0,i1-2,i2+1)];
   const double cf_i0_i1m1_i2p1 = cfGF_.ptr[cfGF_.offset(i0,i1-1,i2+1)];
   const double cf_i0m2_i1_i2p1 = cfGF_.ptr[cfGF_.offset(i0-2,i1,i2+1)];
   const double cf_i0m1_i1_i2p1 = cfGF_.ptr[cfGF_.offset(i0-1,i1,i2+1)];
   const double cf_i0_i1_i2p1 = cfGF_.ptr[cfGF_.offset(i0,i1,i2+1)];
   const double cf_i0p1_i1_i2p1 = cfGF_.ptr[cfGF_.offset(i0+1,i1,i2+1)];
   const double cf_i0p2_i1_i2p1 = cfGF_.ptr[cfGF_.offset(i0+2,i1,i2+1)];
   const double cf_i0_i1p1_i2p1 = cfGF_.ptr[cfGF_.offset(i0,i1+1,i2+1)];
   const double cf_i0_i1p2_i2p1 = cfGF_.ptr[cfGF_.offset(i0,i1+2,i2+1)];
   const double cf_i0_i1m2_i2p2 = cfGF_.ptr[cfGF_.offset(i0,i1-2,i2+2)];
   const double cf_i0_i1m1_i2p2 = cfGF_.ptr[cfGF_.offset(i0,i1-1,i2+2)];
   const double cf_i0m2_i1_i2p2 = cfGF_.ptr[cfGF_.offset(i0-2,i1,i2+2)];
   const double cf_i0m1_i1_i2p2 = cfGF_.ptr[cfGF_.offset(i0-1,i1,i2+2)];
   const double cf_i0_i1_i2p2 = cfGF_.ptr[cfGF_.offset(i0,i1,i2+2)];
   const double cf_i0p1_i1_i2p2 = cfGF_.ptr[cfGF_.offset(i0+1,i1,i2+2)];
   const double cf_i0p2_i1_i2p2 = cfGF_.ptr[cfGF_.offset(i0+2,i1,i2+2)];
   const double cf_i0_i1p1_i2p2 = cfGF_.ptr[cfGF_.offset(i0,i1+1,i2+2)];
   const double cf_i0_i1p2_i2p2 = cfGF_.ptr[cfGF_.offset(i0,i1+2,i2+2)];
   const double cf_i0_i1_i2p3 = cfGF_.ptr[cfGF_.offset(i0,i1,i2+3)];
   const double alpha_i0_i1_i2m3 = alphaGF_.ptr[alphaGF_.offset(i0,i1,i2-3)];
   const double alpha_i0_i1m2_i2m2 = alphaGF_.ptr[alphaGF_.offset(i0,i1-2,i2-2)];
   const double alpha_i0_i1m1_i2m2 = alphaGF_.ptr[alphaGF_.offset(i0,i1-1,i2-2)];
   const double alpha_i0m2_i1_i2m2 = alphaGF_.ptr[alphaGF_.offset(i0-2,i1,i2-2)];
   const double alpha_i0m1_i1_i2m2 = alphaGF_.ptr[alphaGF_.offset(i0-1,i1,i2-2)];
   const double alpha_i0_i1_i2m2 = alphaGF_.ptr[alphaGF_.offset(i0,i1,i2-2)];
   const double alpha_i0p1_i1_i2m2 = alphaGF_.ptr[alphaGF_.offset(i0+1,i1,i2-2)];
   const double alpha_i0p2_i1_i2m2 = alphaGF_.ptr[alphaGF_.offset(i0+2,i1,i2-2)];
   const double alpha_i0_i1p1_i2m2 = alphaGF_.ptr[alphaGF_.offset(i0,i1+1,i2-2)];
   const double alpha_i0_i1p2_i2m2 = alphaGF_.ptr[alphaGF_.offset(i0,i1+2,i2-2)];
   const double alpha_i0_i1m2_i2m1 = alphaGF_.ptr[alphaGF_.offset(i0,i1-2,i2-1)];
   const double alpha_i0_i1m1_i2m1 = alphaGF_.ptr[alphaGF_.offset(i0,i1-1,i2-1)];
   const double alpha_i0m2_i1_i2m1 = alphaGF_.ptr[alphaGF_.offset(i0-2,i1,i2-1)];
   const double alpha_i0m1_i1_i2m1 = alphaGF_.ptr[alphaGF_.offset(i0-1,i1,i2-1)];
   const double alpha_i0_i1_i2m1 = alphaGF_.ptr[alphaGF_.offset(i0,i1,i2-1)];
   const double alpha_i0p1_i1_i2m1 = alphaGF_.ptr[alphaGF_.offset(i0+1,i1,i2-1)];
   const double alpha_i0p2_i1_i2m1 = alphaGF_.ptr[alphaGF_.offset(i0+2,i1,i2-1)];
   const double alpha_i0_i1p1_i2m1 = alphaGF_.ptr[alphaGF_.offset(i0,i1+1,i2-1)];
   const double alpha_i0_i1p2_i2m1 = alphaGF_.ptr[alphaGF_.offset(i0,i1+2,i2-1)];
   const double alpha_i0_i1m3_i2 = alphaGF_.ptr[alphaGF_.offset(i0,i1-3,i2)];
   const double alpha_i0m2_i1m2_i2 = alphaGF_.ptr[alphaGF_.offset(i0-2,i1-2,i2)];
   const double alpha_i0m1_i1m2_i2 = alphaGF_.ptr[alphaGF_.offset(i0-1,i1-2,i2)];
   const double alpha_i0_i1m2_i2 = alphaGF_.ptr[alphaGF_.offset(i0,i1-2,i2)];
   const double alpha_i0p1_i1m2_i2 = alphaGF_.ptr[alphaGF_.offset(i0+1,i1-2,i2)];
   const double alpha_i0p2_i1m2_i2 = alphaGF_.ptr[alphaGF_.offset(i0+2,i1-2,i2)];
   const double alpha_i0m2_i1m1_i2 = alphaGF_.ptr[alphaGF_.offset(i0-2,i1-1,i2)];
   const double alpha_i0m1_i1m1_i2 = alphaGF_.ptr[alphaGF_.offset(i0-1,i1-1,i2)];
   const double alpha_i0_i1m1_i2 = alphaGF_.ptr[alphaGF_.offset(i0,i1-1,i2)];
   const double alpha_i0p1_i1m1_i2 = alphaGF_.ptr[alphaGF_.offset(i0+1,i1-1,i2)];
   const double alpha_i0p2_i1m1_i2 = alphaGF_.ptr[alphaGF_.offset(i0+2,i1-1,i2)];
   const double alpha_i0m3_i1_i2 = alphaGF_.ptr[alphaGF_.offset(i0-3,i1,i2)];
   const double alpha_i0m2_i1_i2 = alphaGF_.ptr[alphaGF_.offset(i0-2,i1,i2)];
   const double alpha_i0m1_i1_i2 = alphaGF_.ptr[alphaGF_.offset(i0-1,i1,i2)];
   const double alpha = alphaGF_.ptr[alphaGF_.offset(i0,i1,i2)];
   const double alpha_i0p1_i1_i2 = alphaGF_.ptr[alphaGF_.offset(i0+1,i1,i2)];
   const double alpha_i0p2_i1_i2 = alphaGF_.ptr[alphaGF_.offset(i0+2,i1,i2)];
   const double alpha_i0p3_i1_i2 = alphaGF_.ptr[alphaGF_.offset(i0+3,i1,i2)];
   const double alpha_i0m2_i1p1_i2 = alphaGF_.ptr[alphaGF_.offset(i0-2,i1+1,i2)];
   const double alpha_i0m1_i1p1_i2 = alphaGF_.ptr[alphaGF_.offset(i0-1,i1+1,i2)];
   const double alpha_i0_i1p1_i2 = alphaGF_.ptr[alphaGF_.offset(i0,i1+1,i2)];
   const double alpha_i0p1_i1p1_i2 = alphaGF_.ptr[alphaGF_.offset(i0+1,i1+1,i2)];
   const double alpha_i0p2_i1p1_i2 = alphaGF_.ptr[alphaGF_.offset(i0+2,i1+1,i2)];
   const double alpha_i0m2_i1p2_i2 = alphaGF_.ptr[alphaGF_.offset(i0-2,i1+2,i2)];
   const double alpha_i0m1_i1p2_i2 = alphaGF_.ptr[alphaGF_.offset(i0-1,i1+2,i2)];
   const double alpha_i0_i1p2_i2 = alphaGF_.ptr[alphaGF_.offset(i0,i1+2,i2)];
   const double alpha_i0p1_i1p2_i2 = alphaGF_.ptr[alphaGF_.offset(i0+1,i1+2,i2)];
   const double alpha_i0p2_i1p2_i2 = alphaGF_.ptr[alphaGF_.offset(i0+2,i1+2,i2)];
   const double alpha_i0_i1p3_i2 = alphaGF_.ptr[alphaGF_.offset(i0,i1+3,i2)];
   const double alpha_i0_i1m2_i2p1 = alphaGF_.ptr[alphaGF_.offset(i0,i1-2,i2+1)];
   const double alpha_i0_i1m1_i2p1 = alphaGF_.ptr[alphaGF_.offset(i0,i1-1,i2+1)];
   const double alpha_i0m2_i1_i2p1 = alphaGF_.ptr[alphaGF_.offset(i0-2,i1,i2+1)];
   const double alpha_i0m1_i1_i2p1 = alphaGF_.ptr[alphaGF_.offset(i0-1,i1,i2+1)];
   const double alpha_i0_i1_i2p1 = alphaGF_.ptr[alphaGF_.offset(i0,i1,i2+1)];
   const double alpha_i0p1_i1_i2p1 = alphaGF_.ptr[alphaGF_.offset(i0+1,i1,i2+1)];
   const double alpha_i0p2_i1_i2p1 = alphaGF_.ptr[alphaGF_.offset(i0+2,i1,i2+1)];
   const double alpha_i0_i1p1_i2p1 = alphaGF_.ptr[alphaGF_.offset(i0,i1+1,i2+1)];
   const double alpha_i0_i1p2_i2p1 = alphaGF_.ptr[alphaGF_.offset(i0,i1+2,i2+1)];
   const double alpha_i0_i1m2_i2p2 = alphaGF_.ptr[alphaGF_.offset(i0,i1-2,i2+2)];
   const double alpha_i0_i1m1_i2p2 = alphaGF_.ptr[alphaGF_.offset(i0,i1-1,i2+2)];
   const double alpha_i0m2_i1_i2p2 = alphaGF_.ptr[alphaGF_.offset(i0-2,i1,i2+2)];
   const double alpha_i0m1_i1_i2p2 = alphaGF_.ptr[alphaGF_.offset(i0-1,i1,i2+2)];
   const double alpha_i0_i1_i2p2 = alphaGF_.ptr[alphaGF_.offset(i0,i1,i2+2)];
   const double alpha_i0p1_i1_i2p2 = alphaGF_.ptr[alphaGF_.offset(i0+1,i1,i2+2)];
   const double alpha_i0p2_i1_i2p2 = alphaGF_.ptr[alphaGF_.offset(i0+2,i1,i2+2)];
   const double alpha_i0_i1p1_i2p2 = alphaGF_.ptr[alphaGF_.offset(i0,i1+1,i2+2)];
   const double alpha_i0_i1p2_i2p2 = alphaGF_.ptr[alphaGF_.offset(i0,i1+2,i2+2)];
   const double alpha_i0_i1_i2p3 = alphaGF_.ptr[alphaGF_.offset(i0,i1,i2+3)];
   const double RbarDD00 = RbarDD00GF_.ptr[RbarDD00GF_.offset(i0,i1,i2)];
   const double RbarDD01 = RbarDD01GF_.ptr[RbarDD01GF_.offset(i0,i1,i2)];
   const double RbarDD02 = RbarDD02GF_.ptr[RbarDD02GF_.offset(i0,i1,i2)];
   const double RbarDD11 = RbarDD11GF_.ptr[RbarDD11GF_.offset(i0,i1,i2)];
   const double RbarDD12 = RbarDD12GF_.ptr[RbarDD12GF_.offset(i0,i1,i2)];
   const double RbarDD22 = RbarDD22GF_.ptr[RbarDD22GF_.offset(i0,i1,i2)];
   const double tmpFD0 = -5.0/16.0*aDD00;
   const double tmpFD1 = -5.0/16.0*aDD01;
   const double tmpFD2 = -5.0/16.0*aDD02;
   const double tmpFD3 = -5.0/16.0*aDD11;
   const double tmpFD4 = -5.0/16.0*aDD12;
   const double tmpFD5 = -5.0/16.0*aDD22;
   const double tmpFD6 = (5.0/6.0)*aDD00;
   const double tmpFD7 = (5.0/6.0)*aDD01;
   const double tmpFD8 = (5.0/6.0)*aDD02;
   const double tmpFD9 = (5.0/6.0)*aDD11;
   const double tmpFD10 = (5.0/6.0)*aDD12;
   const double tmpFD11 = (5.0/6.0)*aDD22;
   const double tmpFD12 = -tmpFD6;
   const double tmpFD13 = -tmpFD7;
   const double tmpFD14 = -tmpFD8;
   const double tmpFD15 = -tmpFD9;
   const double tmpFD16 = -tmpFD10;
   const double tmpFD17 = -tmpFD11;
   const double tmpFD18 = (1.0/12.0)*alpha_i0m2_i1_i2;
   const double tmpFD19 = -1.0/12.0*alpha_i0p2_i1_i2;
   const double tmpFD20 = (1.0/12.0)*alpha_i0_i1m2_i2;
   const double tmpFD21 = -1.0/12.0*alpha_i0_i1p2_i2;
   const double tmpFD22 = (1.0/12.0)*alpha_i0_i1_i2m2;
   const double tmpFD23 = -1.0/12.0*alpha_i0_i1_i2p2;
   const double tmpFD24 = ((invdx0)*(invdx0));
   const double tmpFD25 = -5.0/2.0*alpha;
   const double tmpFD26 = invdx0*invdx1;
   const double tmpFD27 = invdx0*invdx2;
   const double tmpFD28 = ((invdx1)*(invdx1));
   const double tmpFD29 = invdx1*invdx2;
   const double tmpFD30 = ((invdx2)*(invdx2));
   const double tmpFD31 = -5.0/16.0*alpha;
   const double tmpFD32 = (5.0/6.0)*alpha;
   const double tmpFD33 = -tmpFD32;
   const double tmpFD34 = -5.0/16.0*betU0;
   const double tmpFD35 = -5.0/16.0*betU1;
   const double tmpFD36 = -5.0/16.0*betU2;
   const double tmpFD37 = (5.0/6.0)*betU0;
   const double tmpFD38 = (5.0/6.0)*betU1;
   const double tmpFD39 = (5.0/6.0)*betU2;
   const double tmpFD40 = -tmpFD37;
   const double tmpFD41 = -tmpFD38;
   const double tmpFD42 = -tmpFD39;
   const double tmpFD43 = (1.0/12.0)*cf_i0m2_i1_i2;
   const double tmpFD44 = -1.0/12.0*cf_i0p2_i1_i2;
   const double tmpFD45 = (1.0/12.0)*cf_i0_i1m2_i2;
   const double tmpFD46 = -1.0/12.0*cf_i0_i1p2_i2;
   const double tmpFD47 = (1.0/12.0)*cf_i0_i1_i2m2;
   const double tmpFD48 = -1.0/12.0*cf_i0_i1_i2p2;
   const double tmpFD49 = -5.0/2.0*cf;
   const double tmpFD50 = -5.0/16.0*cf;
   const double tmpFD51 = (5.0/6.0)*cf;
   const double tmpFD52 = -tmpFD51;
   const double tmpFD53 = -5.0/16.0*hDD00;
   const double tmpFD54 = -5.0/16.0*hDD01;
   const double tmpFD55 = -5.0/16.0*hDD02;
   const double tmpFD56 = -5.0/16.0*hDD11;
   const double tmpFD57 = -5.0/16.0*hDD12;
   const double tmpFD58 = -5.0/16.0*hDD22;
   const double tmpFD59 = (5.0/6.0)*hDD00;
   const double tmpFD60 = (5.0/6.0)*hDD01;
   const double tmpFD61 = (5.0/6.0)*hDD02;
   const double tmpFD62 = (5.0/6.0)*hDD11;
   const double tmpFD63 = (5.0/6.0)*hDD12;
   const double tmpFD64 = (5.0/6.0)*hDD22;
   const double tmpFD65 = -tmpFD59;
   const double tmpFD66 = -tmpFD60;
   const double tmpFD67 = -tmpFD61;
   const double tmpFD68 = -tmpFD62;
   const double tmpFD69 = -tmpFD63;
   const double tmpFD70 = -tmpFD64;
   const double tmpFD71 = -5.0/16.0*lambdaU0;
   const double tmpFD72 = -5.0/16.0*lambdaU1;
   const double tmpFD73 = -5.0/16.0*lambdaU2;
   const double tmpFD74 = (5.0/6.0)*lambdaU0;
   const double tmpFD75 = (5.0/6.0)*lambdaU1;
   const double tmpFD76 = (5.0/6.0)*lambdaU2;
   const double tmpFD77 = -tmpFD74;
   const double tmpFD78 = -tmpFD75;
   const double tmpFD79 = -tmpFD76;
   const double tmpFD80 = -5.0/16.0*trK;
   const double tmpFD81 = (5.0/6.0)*trK;
   const double tmpFD82 = -tmpFD81;
   const double tmpFD83 = (1.0/12.0)*vetU0_i0m2_i1_i2;
   const double tmpFD84 = -1.0/12.0*vetU0_i0p2_i1_i2;
   const double tmpFD85 = (1.0/12.0)*vetU0_i0_i1m2_i2;
   const double tmpFD86 = -1.0/12.0*vetU0_i0_i1p2_i2;
   const double tmpFD87 = (1.0/12.0)*vetU0_i0_i1_i2m2;
   const double tmpFD88 = -1.0/12.0*vetU0_i0_i1_i2p2;
   const double tmpFD89 = (1.0/12.0)*vetU1_i0m2_i1_i2;
   const double tmpFD90 = -1.0/12.0*vetU1_i0p2_i1_i2;
   const double tmpFD91 = (1.0/12.0)*vetU1_i0_i1m2_i2;
   const double tmpFD92 = -1.0/12.0*vetU1_i0_i1p2_i2;
   const double tmpFD93 = (1.0/12.0)*vetU1_i0_i1_i2m2;
   const double tmpFD94 = -1.0/12.0*vetU1_i0_i1_i2p2;
   const double tmpFD95 = (1.0/12.0)*vetU2_i0m2_i1_i2;
   const double tmpFD96 = -1.0/12.0*vetU2_i0p2_i1_i2;
   const double tmpFD97 = (1.0/12.0)*vetU2_i0_i1m2_i2;
   const double tmpFD98 = -1.0/12.0*vetU2_i0_i1p2_i2;
   const double tmpFD99 = (1.0/12.0)*vetU2_i0_i1_i2m2;
   const double tmpFD100 = -1.0/12.0*vetU2_i0_i1_i2p2;
   const double tmpFD101 = -5.0/2.0*vetU0;
   const double tmpFD102 = -5.0/2.0*vetU1;
   const double tmpFD103 = -5.0/2.0*vetU2;
   const double tmpFD104 = -5.0/16.0*vetU0;
   const double tmpFD105 = -5.0/16.0*vetU1;
   const double tmpFD106 = -5.0/16.0*vetU2;
   const double tmpFD107 = (5.0/6.0)*vetU0;
   const double tmpFD108 = (5.0/6.0)*vetU1;
   const double tmpFD109 = (5.0/6.0)*vetU2;
   const double tmpFD110 = -tmpFD107;
   const double tmpFD111 = -tmpFD108;
   const double tmpFD112 = -tmpFD109;
   const double aDD_dKOD000 = invdx0*((15.0/64.0)*aDD00_i0m1_i1_i2 - 3.0/32.0*aDD00_i0m2_i1_i2 + (1.0/64.0)*aDD00_i0m3_i1_i2 + (15.0/64.0)*aDD00_i0p1_i1_i2 - 3.0/32.0*aDD00_i0p2_i1_i2 + (1.0/64.0)*aDD00_i0p3_i1_i2 + tmpFD0);
   const double aDD_dKOD001 = invdx1*((15.0/64.0)*aDD00_i0_i1m1_i2 - 3.0/32.0*aDD00_i0_i1m2_i2 + (1.0/64.0)*aDD00_i0_i1m3_i2 + (15.0/64.0)*aDD00_i0_i1p1_i2 - 3.0/32.0*aDD00_i0_i1p2_i2 + (1.0/64.0)*aDD00_i0_i1p3_i2 + tmpFD0);
   const double aDD_dKOD002 = invdx2*((15.0/64.0)*aDD00_i0_i1_i2m1 - 3.0/32.0*aDD00_i0_i1_i2m2 + (1.0/64.0)*aDD00_i0_i1_i2m3 + (15.0/64.0)*aDD00_i0_i1_i2p1 - 3.0/32.0*aDD00_i0_i1_i2p2 + (1.0/64.0)*aDD00_i0_i1_i2p3 + tmpFD0);
   const double aDD_dKOD010 = invdx0*((15.0/64.0)*aDD01_i0m1_i1_i2 - 3.0/32.0*aDD01_i0m2_i1_i2 + (1.0/64.0)*aDD01_i0m3_i1_i2 + (15.0/64.0)*aDD01_i0p1_i1_i2 - 3.0/32.0*aDD01_i0p2_i1_i2 + (1.0/64.0)*aDD01_i0p3_i1_i2 + tmpFD1);
   const double aDD_dKOD011 = invdx1*((15.0/64.0)*aDD01_i0_i1m1_i2 - 3.0/32.0*aDD01_i0_i1m2_i2 + (1.0/64.0)*aDD01_i0_i1m3_i2 + (15.0/64.0)*aDD01_i0_i1p1_i2 - 3.0/32.0*aDD01_i0_i1p2_i2 + (1.0/64.0)*aDD01_i0_i1p3_i2 + tmpFD1);
   const double aDD_dKOD012 = invdx2*((15.0/64.0)*aDD01_i0_i1_i2m1 - 3.0/32.0*aDD01_i0_i1_i2m2 + (1.0/64.0)*aDD01_i0_i1_i2m3 + (15.0/64.0)*aDD01_i0_i1_i2p1 - 3.0/32.0*aDD01_i0_i1_i2p2 + (1.0/64.0)*aDD01_i0_i1_i2p3 + tmpFD1);
   const double aDD_dKOD020 = invdx0*((15.0/64.0)*aDD02_i0m1_i1_i2 - 3.0/32.0*aDD02_i0m2_i1_i2 + (1.0/64.0)*aDD02_i0m3_i1_i2 + (15.0/64.0)*aDD02_i0p1_i1_i2 - 3.0/32.0*aDD02_i0p2_i1_i2 + (1.0/64.0)*aDD02_i0p3_i1_i2 + tmpFD2);
   const double aDD_dKOD021 = invdx1*((15.0/64.0)*aDD02_i0_i1m1_i2 - 3.0/32.0*aDD02_i0_i1m2_i2 + (1.0/64.0)*aDD02_i0_i1m3_i2 + (15.0/64.0)*aDD02_i0_i1p1_i2 - 3.0/32.0*aDD02_i0_i1p2_i2 + (1.0/64.0)*aDD02_i0_i1p3_i2 + tmpFD2);
   const double aDD_dKOD022 = invdx2*((15.0/64.0)*aDD02_i0_i1_i2m1 - 3.0/32.0*aDD02_i0_i1_i2m2 + (1.0/64.0)*aDD02_i0_i1_i2m3 + (15.0/64.0)*aDD02_i0_i1_i2p1 - 3.0/32.0*aDD02_i0_i1_i2p2 + (1.0/64.0)*aDD02_i0_i1_i2p3 + tmpFD2);
   const double aDD_dKOD110 = invdx0*((15.0/64.0)*aDD11_i0m1_i1_i2 - 3.0/32.0*aDD11_i0m2_i1_i2 + (1.0/64.0)*aDD11_i0m3_i1_i2 + (15.0/64.0)*aDD11_i0p1_i1_i2 - 3.0/32.0*aDD11_i0p2_i1_i2 + (1.0/64.0)*aDD11_i0p3_i1_i2 + tmpFD3);
   const double aDD_dKOD111 = invdx1*((15.0/64.0)*aDD11_i0_i1m1_i2 - 3.0/32.0*aDD11_i0_i1m2_i2 + (1.0/64.0)*aDD11_i0_i1m3_i2 + (15.0/64.0)*aDD11_i0_i1p1_i2 - 3.0/32.0*aDD11_i0_i1p2_i2 + (1.0/64.0)*aDD11_i0_i1p3_i2 + tmpFD3);
   const double aDD_dKOD112 = invdx2*((15.0/64.0)*aDD11_i0_i1_i2m1 - 3.0/32.0*aDD11_i0_i1_i2m2 + (1.0/64.0)*aDD11_i0_i1_i2m3 + (15.0/64.0)*aDD11_i0_i1_i2p1 - 3.0/32.0*aDD11_i0_i1_i2p2 + (1.0/64.0)*aDD11_i0_i1_i2p3 + tmpFD3);
   const double aDD_dKOD120 = invdx0*((15.0/64.0)*aDD12_i0m1_i1_i2 - 3.0/32.0*aDD12_i0m2_i1_i2 + (1.0/64.0)*aDD12_i0m3_i1_i2 + (15.0/64.0)*aDD12_i0p1_i1_i2 - 3.0/32.0*aDD12_i0p2_i1_i2 + (1.0/64.0)*aDD12_i0p3_i1_i2 + tmpFD4);
   const double aDD_dKOD121 = invdx1*((15.0/64.0)*aDD12_i0_i1m1_i2 - 3.0/32.0*aDD12_i0_i1m2_i2 + (1.0/64.0)*aDD12_i0_i1m3_i2 + (15.0/64.0)*aDD12_i0_i1p1_i2 - 3.0/32.0*aDD12_i0_i1p2_i2 + (1.0/64.0)*aDD12_i0_i1p3_i2 + tmpFD4);
   const double aDD_dKOD122 = invdx2*((15.0/64.0)*aDD12_i0_i1_i2m1 - 3.0/32.0*aDD12_i0_i1_i2m2 + (1.0/64.0)*aDD12_i0_i1_i2m3 + (15.0/64.0)*aDD12_i0_i1_i2p1 - 3.0/32.0*aDD12_i0_i1_i2p2 + (1.0/64.0)*aDD12_i0_i1_i2p3 + tmpFD4);
   const double aDD_dKOD220 = invdx0*((15.0/64.0)*aDD22_i0m1_i1_i2 - 3.0/32.0*aDD22_i0m2_i1_i2 + (1.0/64.0)*aDD22_i0m3_i1_i2 + (15.0/64.0)*aDD22_i0p1_i1_i2 - 3.0/32.0*aDD22_i0p2_i1_i2 + (1.0/64.0)*aDD22_i0p3_i1_i2 + tmpFD5);
   const double aDD_dKOD221 = invdx1*((15.0/64.0)*aDD22_i0_i1m1_i2 - 3.0/32.0*aDD22_i0_i1m2_i2 + (1.0/64.0)*aDD22_i0_i1m3_i2 + (15.0/64.0)*aDD22_i0_i1p1_i2 - 3.0/32.0*aDD22_i0_i1p2_i2 + (1.0/64.0)*aDD22_i0_i1p3_i2 + tmpFD5);
   const double aDD_dKOD222 = invdx2*((15.0/64.0)*aDD22_i0_i1_i2m1 - 3.0/32.0*aDD22_i0_i1_i2m2 + (1.0/64.0)*aDD22_i0_i1_i2m3 + (15.0/64.0)*aDD22_i0_i1_i2p1 - 3.0/32.0*aDD22_i0_i1_i2p2 + (1.0/64.0)*aDD22_i0_i1_i2p3 + tmpFD5);
   const double UpwindAlgInputaDD_ddnD000 = invdx0*(-3.0/2.0*aDD00_i0m1_i1_i2 + (1.0/2.0)*aDD00_i0m2_i1_i2 - 1.0/12.0*aDD00_i0m3_i1_i2 + (1.0/4.0)*aDD00_i0p1_i1_i2 + tmpFD6);
   const double UpwindAlgInputaDD_ddnD001 = invdx1*(-3.0/2.0*aDD00_i0_i1m1_i2 + (1.0/2.0)*aDD00_i0_i1m2_i2 - 1.0/12.0*aDD00_i0_i1m3_i2 + (1.0/4.0)*aDD00_i0_i1p1_i2 + tmpFD6);
   const double UpwindAlgInputaDD_ddnD002 = invdx2*(-3.0/2.0*aDD00_i0_i1_i2m1 + (1.0/2.0)*aDD00_i0_i1_i2m2 - 1.0/12.0*aDD00_i0_i1_i2m3 + (1.0/4.0)*aDD00_i0_i1_i2p1 + tmpFD6);
   const double UpwindAlgInputaDD_ddnD010 = invdx0*(-3.0/2.0*aDD01_i0m1_i1_i2 + (1.0/2.0)*aDD01_i0m2_i1_i2 - 1.0/12.0*aDD01_i0m3_i1_i2 + (1.0/4.0)*aDD01_i0p1_i1_i2 + tmpFD7);
   const double UpwindAlgInputaDD_ddnD011 = invdx1*(-3.0/2.0*aDD01_i0_i1m1_i2 + (1.0/2.0)*aDD01_i0_i1m2_i2 - 1.0/12.0*aDD01_i0_i1m3_i2 + (1.0/4.0)*aDD01_i0_i1p1_i2 + tmpFD7);
   const double UpwindAlgInputaDD_ddnD012 = invdx2*(-3.0/2.0*aDD01_i0_i1_i2m1 + (1.0/2.0)*aDD01_i0_i1_i2m2 - 1.0/12.0*aDD01_i0_i1_i2m3 + (1.0/4.0)*aDD01_i0_i1_i2p1 + tmpFD7);
   const double UpwindAlgInputaDD_ddnD020 = invdx0*(-3.0/2.0*aDD02_i0m1_i1_i2 + (1.0/2.0)*aDD02_i0m2_i1_i2 - 1.0/12.0*aDD02_i0m3_i1_i2 + (1.0/4.0)*aDD02_i0p1_i1_i2 + tmpFD8);
   const double UpwindAlgInputaDD_ddnD021 = invdx1*(-3.0/2.0*aDD02_i0_i1m1_i2 + (1.0/2.0)*aDD02_i0_i1m2_i2 - 1.0/12.0*aDD02_i0_i1m3_i2 + (1.0/4.0)*aDD02_i0_i1p1_i2 + tmpFD8);
   const double UpwindAlgInputaDD_ddnD022 = invdx2*(-3.0/2.0*aDD02_i0_i1_i2m1 + (1.0/2.0)*aDD02_i0_i1_i2m2 - 1.0/12.0*aDD02_i0_i1_i2m3 + (1.0/4.0)*aDD02_i0_i1_i2p1 + tmpFD8);
   const double UpwindAlgInputaDD_ddnD110 = invdx0*(-3.0/2.0*aDD11_i0m1_i1_i2 + (1.0/2.0)*aDD11_i0m2_i1_i2 - 1.0/12.0*aDD11_i0m3_i1_i2 + (1.0/4.0)*aDD11_i0p1_i1_i2 + tmpFD9);
   const double UpwindAlgInputaDD_ddnD111 = invdx1*(-3.0/2.0*aDD11_i0_i1m1_i2 + (1.0/2.0)*aDD11_i0_i1m2_i2 - 1.0/12.0*aDD11_i0_i1m3_i2 + (1.0/4.0)*aDD11_i0_i1p1_i2 + tmpFD9);
   const double UpwindAlgInputaDD_ddnD112 = invdx2*(-3.0/2.0*aDD11_i0_i1_i2m1 + (1.0/2.0)*aDD11_i0_i1_i2m2 - 1.0/12.0*aDD11_i0_i1_i2m3 + (1.0/4.0)*aDD11_i0_i1_i2p1 + tmpFD9);
   const double UpwindAlgInputaDD_ddnD120 = invdx0*(-3.0/2.0*aDD12_i0m1_i1_i2 + (1.0/2.0)*aDD12_i0m2_i1_i2 - 1.0/12.0*aDD12_i0m3_i1_i2 + (1.0/4.0)*aDD12_i0p1_i1_i2 + tmpFD10);
   const double UpwindAlgInputaDD_ddnD121 = invdx1*(-3.0/2.0*aDD12_i0_i1m1_i2 + (1.0/2.0)*aDD12_i0_i1m2_i2 - 1.0/12.0*aDD12_i0_i1m3_i2 + (1.0/4.0)*aDD12_i0_i1p1_i2 + tmpFD10);
   const double UpwindAlgInputaDD_ddnD122 = invdx2*(-3.0/2.0*aDD12_i0_i1_i2m1 + (1.0/2.0)*aDD12_i0_i1_i2m2 - 1.0/12.0*aDD12_i0_i1_i2m3 + (1.0/4.0)*aDD12_i0_i1_i2p1 + tmpFD10);
   const double UpwindAlgInputaDD_ddnD220 = invdx0*(-3.0/2.0*aDD22_i0m1_i1_i2 + (1.0/2.0)*aDD22_i0m2_i1_i2 - 1.0/12.0*aDD22_i0m3_i1_i2 + (1.0/4.0)*aDD22_i0p1_i1_i2 + tmpFD11);
   const double UpwindAlgInputaDD_ddnD221 = invdx1*(-3.0/2.0*aDD22_i0_i1m1_i2 + (1.0/2.0)*aDD22_i0_i1m2_i2 - 1.0/12.0*aDD22_i0_i1m3_i2 + (1.0/4.0)*aDD22_i0_i1p1_i2 + tmpFD11);
   const double UpwindAlgInputaDD_ddnD222 = invdx2*(-3.0/2.0*aDD22_i0_i1_i2m1 + (1.0/2.0)*aDD22_i0_i1_i2m2 - 1.0/12.0*aDD22_i0_i1_i2m3 + (1.0/4.0)*aDD22_i0_i1_i2p1 + tmpFD11);
   const double UpwindAlgInputaDD_dupD000 = invdx0*(-1.0/4.0*aDD00_i0m1_i1_i2 + (3.0/2.0)*aDD00_i0p1_i1_i2 - 1.0/2.0*aDD00_i0p2_i1_i2 + (1.0/12.0)*aDD00_i0p3_i1_i2 + tmpFD12);
   const double UpwindAlgInputaDD_dupD001 = invdx1*(-1.0/4.0*aDD00_i0_i1m1_i2 + (3.0/2.0)*aDD00_i0_i1p1_i2 - 1.0/2.0*aDD00_i0_i1p2_i2 + (1.0/12.0)*aDD00_i0_i1p3_i2 + tmpFD12);
   const double UpwindAlgInputaDD_dupD002 = invdx2*(-1.0/4.0*aDD00_i0_i1_i2m1 + (3.0/2.0)*aDD00_i0_i1_i2p1 - 1.0/2.0*aDD00_i0_i1_i2p2 + (1.0/12.0)*aDD00_i0_i1_i2p3 + tmpFD12);
   const double UpwindAlgInputaDD_dupD010 = invdx0*(-1.0/4.0*aDD01_i0m1_i1_i2 + (3.0/2.0)*aDD01_i0p1_i1_i2 - 1.0/2.0*aDD01_i0p2_i1_i2 + (1.0/12.0)*aDD01_i0p3_i1_i2 + tmpFD13);
   const double UpwindAlgInputaDD_dupD011 = invdx1*(-1.0/4.0*aDD01_i0_i1m1_i2 + (3.0/2.0)*aDD01_i0_i1p1_i2 - 1.0/2.0*aDD01_i0_i1p2_i2 + (1.0/12.0)*aDD01_i0_i1p3_i2 + tmpFD13);
   const double UpwindAlgInputaDD_dupD012 = invdx2*(-1.0/4.0*aDD01_i0_i1_i2m1 + (3.0/2.0)*aDD01_i0_i1_i2p1 - 1.0/2.0*aDD01_i0_i1_i2p2 + (1.0/12.0)*aDD01_i0_i1_i2p3 + tmpFD13);
   const double UpwindAlgInputaDD_dupD020 = invdx0*(-1.0/4.0*aDD02_i0m1_i1_i2 + (3.0/2.0)*aDD02_i0p1_i1_i2 - 1.0/2.0*aDD02_i0p2_i1_i2 + (1.0/12.0)*aDD02_i0p3_i1_i2 + tmpFD14);
   const double UpwindAlgInputaDD_dupD021 = invdx1*(-1.0/4.0*aDD02_i0_i1m1_i2 + (3.0/2.0)*aDD02_i0_i1p1_i2 - 1.0/2.0*aDD02_i0_i1p2_i2 + (1.0/12.0)*aDD02_i0_i1p3_i2 + tmpFD14);
   const double UpwindAlgInputaDD_dupD022 = invdx2*(-1.0/4.0*aDD02_i0_i1_i2m1 + (3.0/2.0)*aDD02_i0_i1_i2p1 - 1.0/2.0*aDD02_i0_i1_i2p2 + (1.0/12.0)*aDD02_i0_i1_i2p3 + tmpFD14);
   const double UpwindAlgInputaDD_dupD110 = invdx0*(-1.0/4.0*aDD11_i0m1_i1_i2 + (3.0/2.0)*aDD11_i0p1_i1_i2 - 1.0/2.0*aDD11_i0p2_i1_i2 + (1.0/12.0)*aDD11_i0p3_i1_i2 + tmpFD15);
   const double UpwindAlgInputaDD_dupD111 = invdx1*(-1.0/4.0*aDD11_i0_i1m1_i2 + (3.0/2.0)*aDD11_i0_i1p1_i2 - 1.0/2.0*aDD11_i0_i1p2_i2 + (1.0/12.0)*aDD11_i0_i1p3_i2 + tmpFD15);
   const double UpwindAlgInputaDD_dupD112 = invdx2*(-1.0/4.0*aDD11_i0_i1_i2m1 + (3.0/2.0)*aDD11_i0_i1_i2p1 - 1.0/2.0*aDD11_i0_i1_i2p2 + (1.0/12.0)*aDD11_i0_i1_i2p3 + tmpFD15);
   const double UpwindAlgInputaDD_dupD120 = invdx0*(-1.0/4.0*aDD12_i0m1_i1_i2 + (3.0/2.0)*aDD12_i0p1_i1_i2 - 1.0/2.0*aDD12_i0p2_i1_i2 + (1.0/12.0)*aDD12_i0p3_i1_i2 + tmpFD16);
   const double UpwindAlgInputaDD_dupD121 = invdx1*(-1.0/4.0*aDD12_i0_i1m1_i2 + (3.0/2.0)*aDD12_i0_i1p1_i2 - 1.0/2.0*aDD12_i0_i1p2_i2 + (1.0/12.0)*aDD12_i0_i1p3_i2 + tmpFD16);
   const double UpwindAlgInputaDD_dupD122 = invdx2*(-1.0/4.0*aDD12_i0_i1_i2m1 + (3.0/2.0)*aDD12_i0_i1_i2p1 - 1.0/2.0*aDD12_i0_i1_i2p2 + (1.0/12.0)*aDD12_i0_i1_i2p3 + tmpFD16);
   const double UpwindAlgInputaDD_dupD220 = invdx0*(-1.0/4.0*aDD22_i0m1_i1_i2 + (3.0/2.0)*aDD22_i0p1_i1_i2 - 1.0/2.0*aDD22_i0p2_i1_i2 + (1.0/12.0)*aDD22_i0p3_i1_i2 + tmpFD17);
   const double UpwindAlgInputaDD_dupD221 = invdx1*(-1.0/4.0*aDD22_i0_i1m1_i2 + (3.0/2.0)*aDD22_i0_i1p1_i2 - 1.0/2.0*aDD22_i0_i1p2_i2 + (1.0/12.0)*aDD22_i0_i1p3_i2 + tmpFD17);
   const double UpwindAlgInputaDD_dupD222 = invdx2*(-1.0/4.0*aDD22_i0_i1_i2m1 + (3.0/2.0)*aDD22_i0_i1_i2p1 - 1.0/2.0*aDD22_i0_i1_i2p2 + (1.0/12.0)*aDD22_i0_i1_i2p3 + tmpFD17);
   const double alpha_dD0 = invdx0*(-2.0/3.0*alpha_i0m1_i1_i2 + (2.0/3.0)*alpha_i0p1_i1_i2 + tmpFD18 + tmpFD19);
   const double alpha_dD1 = invdx1*(-2.0/3.0*alpha_i0_i1m1_i2 + (2.0/3.0)*alpha_i0_i1p1_i2 + tmpFD20 + tmpFD21);
   const double alpha_dD2 = invdx2*(-2.0/3.0*alpha_i0_i1_i2m1 + (2.0/3.0)*alpha_i0_i1_i2p1 + tmpFD22 + tmpFD23);
   const double alpha_dDD00 = tmpFD24*((4.0/3.0)*alpha_i0m1_i1_i2 + (4.0/3.0)*alpha_i0p1_i1_i2 - tmpFD18 + tmpFD19 + tmpFD25);
   const double alpha_dDD01 = tmpFD26*((4.0/9.0)*alpha_i0m1_i1m1_i2 - 1.0/18.0*alpha_i0m1_i1m2_i2 - 4.0/9.0*alpha_i0m1_i1p1_i2 + (1.0/18.0)*alpha_i0m1_i1p2_i2 - 1.0/18.0*alpha_i0m2_i1m1_i2 + (1.0/144.0)*alpha_i0m2_i1m2_i2 + (1.0/18.0)*alpha_i0m2_i1p1_i2 - 1.0/144.0*alpha_i0m2_i1p2_i2 - 4.0/9.0*alpha_i0p1_i1m1_i2 + (1.0/18.0)*alpha_i0p1_i1m2_i2 + (4.0/9.0)*alpha_i0p1_i1p1_i2 - 1.0/18.0*alpha_i0p1_i1p2_i2 + (1.0/18.0)*alpha_i0p2_i1m1_i2 - 1.0/144.0*alpha_i0p2_i1m2_i2 - 1.0/18.0*alpha_i0p2_i1p1_i2 + (1.0/144.0)*alpha_i0p2_i1p2_i2);
   const double alpha_dDD02 = tmpFD27*((4.0/9.0)*alpha_i0m1_i1_i2m1 - 1.0/18.0*alpha_i0m1_i1_i2m2 - 4.0/9.0*alpha_i0m1_i1_i2p1 + (1.0/18.0)*alpha_i0m1_i1_i2p2 - 1.0/18.0*alpha_i0m2_i1_i2m1 + (1.0/144.0)*alpha_i0m2_i1_i2m2 + (1.0/18.0)*alpha_i0m2_i1_i2p1 - 1.0/144.0*alpha_i0m2_i1_i2p2 - 4.0/9.0*alpha_i0p1_i1_i2m1 + (1.0/18.0)*alpha_i0p1_i1_i2m2 + (4.0/9.0)*alpha_i0p1_i1_i2p1 - 1.0/18.0*alpha_i0p1_i1_i2p2 + (1.0/18.0)*alpha_i0p2_i1_i2m1 - 1.0/144.0*alpha_i0p2_i1_i2m2 - 1.0/18.0*alpha_i0p2_i1_i2p1 + (1.0/144.0)*alpha_i0p2_i1_i2p2);
   const double alpha_dDD11 = tmpFD28*((4.0/3.0)*alpha_i0_i1m1_i2 + (4.0/3.0)*alpha_i0_i1p1_i2 - tmpFD20 + tmpFD21 + tmpFD25);
   const double alpha_dDD12 = tmpFD29*((4.0/9.0)*alpha_i0_i1m1_i2m1 - 1.0/18.0*alpha_i0_i1m1_i2m2 - 4.0/9.0*alpha_i0_i1m1_i2p1 + (1.0/18.0)*alpha_i0_i1m1_i2p2 - 1.0/18.0*alpha_i0_i1m2_i2m1 + (1.0/144.0)*alpha_i0_i1m2_i2m2 + (1.0/18.0)*alpha_i0_i1m2_i2p1 - 1.0/144.0*alpha_i0_i1m2_i2p2 - 4.0/9.0*alpha_i0_i1p1_i2m1 + (1.0/18.0)*alpha_i0_i1p1_i2m2 + (4.0/9.0)*alpha_i0_i1p1_i2p1 - 1.0/18.0*alpha_i0_i1p1_i2p2 + (1.0/18.0)*alpha_i0_i1p2_i2m1 - 1.0/144.0*alpha_i0_i1p2_i2m2 - 1.0/18.0*alpha_i0_i1p2_i2p1 + (1.0/144.0)*alpha_i0_i1p2_i2p2);
   const double alpha_dDD22 = tmpFD30*((4.0/3.0)*alpha_i0_i1_i2m1 + (4.0/3.0)*alpha_i0_i1_i2p1 - tmpFD22 + tmpFD23 + tmpFD25);
   const double alpha_dKOD0 = invdx0*((15.0/64.0)*alpha_i0m1_i1_i2 - 3.0/32.0*alpha_i0m2_i1_i2 + (1.0/64.0)*alpha_i0m3_i1_i2 + (15.0/64.0)*alpha_i0p1_i1_i2 - 3.0/32.0*alpha_i0p2_i1_i2 + (1.0/64.0)*alpha_i0p3_i1_i2 + tmpFD31);
   const double alpha_dKOD1 = invdx1*((15.0/64.0)*alpha_i0_i1m1_i2 - 3.0/32.0*alpha_i0_i1m2_i2 + (1.0/64.0)*alpha_i0_i1m3_i2 + (15.0/64.0)*alpha_i0_i1p1_i2 - 3.0/32.0*alpha_i0_i1p2_i2 + (1.0/64.0)*alpha_i0_i1p3_i2 + tmpFD31);
   const double alpha_dKOD2 = invdx2*((15.0/64.0)*alpha_i0_i1_i2m1 - 3.0/32.0*alpha_i0_i1_i2m2 + (1.0/64.0)*alpha_i0_i1_i2m3 + (15.0/64.0)*alpha_i0_i1_i2p1 - 3.0/32.0*alpha_i0_i1_i2p2 + (1.0/64.0)*alpha_i0_i1_i2p3 + tmpFD31);
   const double UpwindAlgInputalpha_ddnD0 = invdx0*(-3.0/2.0*alpha_i0m1_i1_i2 + (1.0/2.0)*alpha_i0m2_i1_i2 - 1.0/12.0*alpha_i0m3_i1_i2 + (1.0/4.0)*alpha_i0p1_i1_i2 + tmpFD32);
   const double UpwindAlgInputalpha_ddnD1 = invdx1*(-3.0/2.0*alpha_i0_i1m1_i2 + (1.0/2.0)*alpha_i0_i1m2_i2 - 1.0/12.0*alpha_i0_i1m3_i2 + (1.0/4.0)*alpha_i0_i1p1_i2 + tmpFD32);
   const double UpwindAlgInputalpha_ddnD2 = invdx2*(-3.0/2.0*alpha_i0_i1_i2m1 + (1.0/2.0)*alpha_i0_i1_i2m2 - 1.0/12.0*alpha_i0_i1_i2m3 + (1.0/4.0)*alpha_i0_i1_i2p1 + tmpFD32);
   const double UpwindAlgInputalpha_dupD0 = invdx0*(-1.0/4.0*alpha_i0m1_i1_i2 + (3.0/2.0)*alpha_i0p1_i1_i2 - 1.0/2.0*alpha_i0p2_i1_i2 + (1.0/12.0)*alpha_i0p3_i1_i2 + tmpFD33);
   const double UpwindAlgInputalpha_dupD1 = invdx1*(-1.0/4.0*alpha_i0_i1m1_i2 + (3.0/2.0)*alpha_i0_i1p1_i2 - 1.0/2.0*alpha_i0_i1p2_i2 + (1.0/12.0)*alpha_i0_i1p3_i2 + tmpFD33);
   const double UpwindAlgInputalpha_dupD2 = invdx2*(-1.0/4.0*alpha_i0_i1_i2m1 + (3.0/2.0)*alpha_i0_i1_i2p1 - 1.0/2.0*alpha_i0_i1_i2p2 + (1.0/12.0)*alpha_i0_i1_i2p3 + tmpFD33);
   const double betU_dKOD00 = invdx0*((15.0/64.0)*betU0_i0m1_i1_i2 - 3.0/32.0*betU0_i0m2_i1_i2 + (1.0/64.0)*betU0_i0m3_i1_i2 + (15.0/64.0)*betU0_i0p1_i1_i2 - 3.0/32.0*betU0_i0p2_i1_i2 + (1.0/64.0)*betU0_i0p3_i1_i2 + tmpFD34);
   const double betU_dKOD01 = invdx1*((15.0/64.0)*betU0_i0_i1m1_i2 - 3.0/32.0*betU0_i0_i1m2_i2 + (1.0/64.0)*betU0_i0_i1m3_i2 + (15.0/64.0)*betU0_i0_i1p1_i2 - 3.0/32.0*betU0_i0_i1p2_i2 + (1.0/64.0)*betU0_i0_i1p3_i2 + tmpFD34);
   const double betU_dKOD02 = invdx2*((15.0/64.0)*betU0_i0_i1_i2m1 - 3.0/32.0*betU0_i0_i1_i2m2 + (1.0/64.0)*betU0_i0_i1_i2m3 + (15.0/64.0)*betU0_i0_i1_i2p1 - 3.0/32.0*betU0_i0_i1_i2p2 + (1.0/64.0)*betU0_i0_i1_i2p3 + tmpFD34);
   const double betU_dKOD10 = invdx0*((15.0/64.0)*betU1_i0m1_i1_i2 - 3.0/32.0*betU1_i0m2_i1_i2 + (1.0/64.0)*betU1_i0m3_i1_i2 + (15.0/64.0)*betU1_i0p1_i1_i2 - 3.0/32.0*betU1_i0p2_i1_i2 + (1.0/64.0)*betU1_i0p3_i1_i2 + tmpFD35);
   const double betU_dKOD11 = invdx1*((15.0/64.0)*betU1_i0_i1m1_i2 - 3.0/32.0*betU1_i0_i1m2_i2 + (1.0/64.0)*betU1_i0_i1m3_i2 + (15.0/64.0)*betU1_i0_i1p1_i2 - 3.0/32.0*betU1_i0_i1p2_i2 + (1.0/64.0)*betU1_i0_i1p3_i2 + tmpFD35);
   const double betU_dKOD12 = invdx2*((15.0/64.0)*betU1_i0_i1_i2m1 - 3.0/32.0*betU1_i0_i1_i2m2 + (1.0/64.0)*betU1_i0_i1_i2m3 + (15.0/64.0)*betU1_i0_i1_i2p1 - 3.0/32.0*betU1_i0_i1_i2p2 + (1.0/64.0)*betU1_i0_i1_i2p3 + tmpFD35);
   const double betU_dKOD20 = invdx0*((15.0/64.0)*betU2_i0m1_i1_i2 - 3.0/32.0*betU2_i0m2_i1_i2 + (1.0/64.0)*betU2_i0m3_i1_i2 + (15.0/64.0)*betU2_i0p1_i1_i2 - 3.0/32.0*betU2_i0p2_i1_i2 + (1.0/64.0)*betU2_i0p3_i1_i2 + tmpFD36);
   const double betU_dKOD21 = invdx1*((15.0/64.0)*betU2_i0_i1m1_i2 - 3.0/32.0*betU2_i0_i1m2_i2 + (1.0/64.0)*betU2_i0_i1m3_i2 + (15.0/64.0)*betU2_i0_i1p1_i2 - 3.0/32.0*betU2_i0_i1p2_i2 + (1.0/64.0)*betU2_i0_i1p3_i2 + tmpFD36);
   const double betU_dKOD22 = invdx2*((15.0/64.0)*betU2_i0_i1_i2m1 - 3.0/32.0*betU2_i0_i1_i2m2 + (1.0/64.0)*betU2_i0_i1_i2m3 + (15.0/64.0)*betU2_i0_i1_i2p1 - 3.0/32.0*betU2_i0_i1_i2p2 + (1.0/64.0)*betU2_i0_i1_i2p3 + tmpFD36);
   const double UpwindAlgInputbetU_ddnD00 = invdx0*(-3.0/2.0*betU0_i0m1_i1_i2 + (1.0/2.0)*betU0_i0m2_i1_i2 - 1.0/12.0*betU0_i0m3_i1_i2 + (1.0/4.0)*betU0_i0p1_i1_i2 + tmpFD37);
   const double UpwindAlgInputbetU_ddnD01 = invdx1*(-3.0/2.0*betU0_i0_i1m1_i2 + (1.0/2.0)*betU0_i0_i1m2_i2 - 1.0/12.0*betU0_i0_i1m3_i2 + (1.0/4.0)*betU0_i0_i1p1_i2 + tmpFD37);
   const double UpwindAlgInputbetU_ddnD02 = invdx2*(-3.0/2.0*betU0_i0_i1_i2m1 + (1.0/2.0)*betU0_i0_i1_i2m2 - 1.0/12.0*betU0_i0_i1_i2m3 + (1.0/4.0)*betU0_i0_i1_i2p1 + tmpFD37);
   const double UpwindAlgInputbetU_ddnD10 = invdx0*(-3.0/2.0*betU1_i0m1_i1_i2 + (1.0/2.0)*betU1_i0m2_i1_i2 - 1.0/12.0*betU1_i0m3_i1_i2 + (1.0/4.0)*betU1_i0p1_i1_i2 + tmpFD38);
   const double UpwindAlgInputbetU_ddnD11 = invdx1*(-3.0/2.0*betU1_i0_i1m1_i2 + (1.0/2.0)*betU1_i0_i1m2_i2 - 1.0/12.0*betU1_i0_i1m3_i2 + (1.0/4.0)*betU1_i0_i1p1_i2 + tmpFD38);
   const double UpwindAlgInputbetU_ddnD12 = invdx2*(-3.0/2.0*betU1_i0_i1_i2m1 + (1.0/2.0)*betU1_i0_i1_i2m2 - 1.0/12.0*betU1_i0_i1_i2m3 + (1.0/4.0)*betU1_i0_i1_i2p1 + tmpFD38);
   const double UpwindAlgInputbetU_ddnD20 = invdx0*(-3.0/2.0*betU2_i0m1_i1_i2 + (1.0/2.0)*betU2_i0m2_i1_i2 - 1.0/12.0*betU2_i0m3_i1_i2 + (1.0/4.0)*betU2_i0p1_i1_i2 + tmpFD39);
   const double UpwindAlgInputbetU_ddnD21 = invdx1*(-3.0/2.0*betU2_i0_i1m1_i2 + (1.0/2.0)*betU2_i0_i1m2_i2 - 1.0/12.0*betU2_i0_i1m3_i2 + (1.0/4.0)*betU2_i0_i1p1_i2 + tmpFD39);
   const double UpwindAlgInputbetU_ddnD22 = invdx2*(-3.0/2.0*betU2_i0_i1_i2m1 + (1.0/2.0)*betU2_i0_i1_i2m2 - 1.0/12.0*betU2_i0_i1_i2m3 + (1.0/4.0)*betU2_i0_i1_i2p1 + tmpFD39);
   const double UpwindAlgInputbetU_dupD00 = invdx0*(-1.0/4.0*betU0_i0m1_i1_i2 + (3.0/2.0)*betU0_i0p1_i1_i2 - 1.0/2.0*betU0_i0p2_i1_i2 + (1.0/12.0)*betU0_i0p3_i1_i2 + tmpFD40);
   const double UpwindAlgInputbetU_dupD01 = invdx1*(-1.0/4.0*betU0_i0_i1m1_i2 + (3.0/2.0)*betU0_i0_i1p1_i2 - 1.0/2.0*betU0_i0_i1p2_i2 + (1.0/12.0)*betU0_i0_i1p3_i2 + tmpFD40);
   const double UpwindAlgInputbetU_dupD02 = invdx2*(-1.0/4.0*betU0_i0_i1_i2m1 + (3.0/2.0)*betU0_i0_i1_i2p1 - 1.0/2.0*betU0_i0_i1_i2p2 + (1.0/12.0)*betU0_i0_i1_i2p3 + tmpFD40);
   const double UpwindAlgInputbetU_dupD10 = invdx0*(-1.0/4.0*betU1_i0m1_i1_i2 + (3.0/2.0)*betU1_i0p1_i1_i2 - 1.0/2.0*betU1_i0p2_i1_i2 + (1.0/12.0)*betU1_i0p3_i1_i2 + tmpFD41);
   const double UpwindAlgInputbetU_dupD11 = invdx1*(-1.0/4.0*betU1_i0_i1m1_i2 + (3.0/2.0)*betU1_i0_i1p1_i2 - 1.0/2.0*betU1_i0_i1p2_i2 + (1.0/12.0)*betU1_i0_i1p3_i2 + tmpFD41);
   const double UpwindAlgInputbetU_dupD12 = invdx2*(-1.0/4.0*betU1_i0_i1_i2m1 + (3.0/2.0)*betU1_i0_i1_i2p1 - 1.0/2.0*betU1_i0_i1_i2p2 + (1.0/12.0)*betU1_i0_i1_i2p3 + tmpFD41);
   const double UpwindAlgInputbetU_dupD20 = invdx0*(-1.0/4.0*betU2_i0m1_i1_i2 + (3.0/2.0)*betU2_i0p1_i1_i2 - 1.0/2.0*betU2_i0p2_i1_i2 + (1.0/12.0)*betU2_i0p3_i1_i2 + tmpFD42);
   const double UpwindAlgInputbetU_dupD21 = invdx1*(-1.0/4.0*betU2_i0_i1m1_i2 + (3.0/2.0)*betU2_i0_i1p1_i2 - 1.0/2.0*betU2_i0_i1p2_i2 + (1.0/12.0)*betU2_i0_i1p3_i2 + tmpFD42);
   const double UpwindAlgInputbetU_dupD22 = invdx2*(-1.0/4.0*betU2_i0_i1_i2m1 + (3.0/2.0)*betU2_i0_i1_i2p1 - 1.0/2.0*betU2_i0_i1_i2p2 + (1.0/12.0)*betU2_i0_i1_i2p3 + tmpFD42);
   const double cf_dD0 = invdx0*(-2.0/3.0*cf_i0m1_i1_i2 + (2.0/3.0)*cf_i0p1_i1_i2 + tmpFD43 + tmpFD44);
   const double cf_dD1 = invdx1*(-2.0/3.0*cf_i0_i1m1_i2 + (2.0/3.0)*cf_i0_i1p1_i2 + tmpFD45 + tmpFD46);
   const double cf_dD2 = invdx2*(-2.0/3.0*cf_i0_i1_i2m1 + (2.0/3.0)*cf_i0_i1_i2p1 + tmpFD47 + tmpFD48);
   const double cf_dDD00 = tmpFD24*((4.0/3.0)*cf_i0m1_i1_i2 + (4.0/3.0)*cf_i0p1_i1_i2 - tmpFD43 + tmpFD44 + tmpFD49);
   const double cf_dDD01 = tmpFD26*((4.0/9.0)*cf_i0m1_i1m1_i2 - 1.0/18.0*cf_i0m1_i1m2_i2 - 4.0/9.0*cf_i0m1_i1p1_i2 + (1.0/18.0)*cf_i0m1_i1p2_i2 - 1.0/18.0*cf_i0m2_i1m1_i2 + (1.0/144.0)*cf_i0m2_i1m2_i2 + (1.0/18.0)*cf_i0m2_i1p1_i2 - 1.0/144.0*cf_i0m2_i1p2_i2 - 4.0/9.0*cf_i0p1_i1m1_i2 + (1.0/18.0)*cf_i0p1_i1m2_i2 + (4.0/9.0)*cf_i0p1_i1p1_i2 - 1.0/18.0*cf_i0p1_i1p2_i2 + (1.0/18.0)*cf_i0p2_i1m1_i2 - 1.0/144.0*cf_i0p2_i1m2_i2 - 1.0/18.0*cf_i0p2_i1p1_i2 + (1.0/144.0)*cf_i0p2_i1p2_i2);
   const double cf_dDD02 = tmpFD27*((4.0/9.0)*cf_i0m1_i1_i2m1 - 1.0/18.0*cf_i0m1_i1_i2m2 - 4.0/9.0*cf_i0m1_i1_i2p1 + (1.0/18.0)*cf_i0m1_i1_i2p2 - 1.0/18.0*cf_i0m2_i1_i2m1 + (1.0/144.0)*cf_i0m2_i1_i2m2 + (1.0/18.0)*cf_i0m2_i1_i2p1 - 1.0/144.0*cf_i0m2_i1_i2p2 - 4.0/9.0*cf_i0p1_i1_i2m1 + (1.0/18.0)*cf_i0p1_i1_i2m2 + (4.0/9.0)*cf_i0p1_i1_i2p1 - 1.0/18.0*cf_i0p1_i1_i2p2 + (1.0/18.0)*cf_i0p2_i1_i2m1 - 1.0/144.0*cf_i0p2_i1_i2m2 - 1.0/18.0*cf_i0p2_i1_i2p1 + (1.0/144.0)*cf_i0p2_i1_i2p2);
   const double cf_dDD11 = tmpFD28*((4.0/3.0)*cf_i0_i1m1_i2 + (4.0/3.0)*cf_i0_i1p1_i2 - tmpFD45 + tmpFD46 + tmpFD49);
   const double cf_dDD12 = tmpFD29*((4.0/9.0)*cf_i0_i1m1_i2m1 - 1.0/18.0*cf_i0_i1m1_i2m2 - 4.0/9.0*cf_i0_i1m1_i2p1 + (1.0/18.0)*cf_i0_i1m1_i2p2 - 1.0/18.0*cf_i0_i1m2_i2m1 + (1.0/144.0)*cf_i0_i1m2_i2m2 + (1.0/18.0)*cf_i0_i1m2_i2p1 - 1.0/144.0*cf_i0_i1m2_i2p2 - 4.0/9.0*cf_i0_i1p1_i2m1 + (1.0/18.0)*cf_i0_i1p1_i2m2 + (4.0/9.0)*cf_i0_i1p1_i2p1 - 1.0/18.0*cf_i0_i1p1_i2p2 + (1.0/18.0)*cf_i0_i1p2_i2m1 - 1.0/144.0*cf_i0_i1p2_i2m2 - 1.0/18.0*cf_i0_i1p2_i2p1 + (1.0/144.0)*cf_i0_i1p2_i2p2);
   const double cf_dDD22 = tmpFD30*((4.0/3.0)*cf_i0_i1_i2m1 + (4.0/3.0)*cf_i0_i1_i2p1 - tmpFD47 + tmpFD48 + tmpFD49);
   const double cf_dKOD0 = invdx0*((15.0/64.0)*cf_i0m1_i1_i2 - 3.0/32.0*cf_i0m2_i1_i2 + (1.0/64.0)*cf_i0m3_i1_i2 + (15.0/64.0)*cf_i0p1_i1_i2 - 3.0/32.0*cf_i0p2_i1_i2 + (1.0/64.0)*cf_i0p3_i1_i2 + tmpFD50);
   const double cf_dKOD1 = invdx1*((15.0/64.0)*cf_i0_i1m1_i2 - 3.0/32.0*cf_i0_i1m2_i2 + (1.0/64.0)*cf_i0_i1m3_i2 + (15.0/64.0)*cf_i0_i1p1_i2 - 3.0/32.0*cf_i0_i1p2_i2 + (1.0/64.0)*cf_i0_i1p3_i2 + tmpFD50);
   const double cf_dKOD2 = invdx2*((15.0/64.0)*cf_i0_i1_i2m1 - 3.0/32.0*cf_i0_i1_i2m2 + (1.0/64.0)*cf_i0_i1_i2m3 + (15.0/64.0)*cf_i0_i1_i2p1 - 3.0/32.0*cf_i0_i1_i2p2 + (1.0/64.0)*cf_i0_i1_i2p3 + tmpFD50);
   const double UpwindAlgInputcf_ddnD0 = invdx0*(-3.0/2.0*cf_i0m1_i1_i2 + (1.0/2.0)*cf_i0m2_i1_i2 - 1.0/12.0*cf_i0m3_i1_i2 + (1.0/4.0)*cf_i0p1_i1_i2 + tmpFD51);
   const double UpwindAlgInputcf_ddnD1 = invdx1*(-3.0/2.0*cf_i0_i1m1_i2 + (1.0/2.0)*cf_i0_i1m2_i2 - 1.0/12.0*cf_i0_i1m3_i2 + (1.0/4.0)*cf_i0_i1p1_i2 + tmpFD51);
   const double UpwindAlgInputcf_ddnD2 = invdx2*(-3.0/2.0*cf_i0_i1_i2m1 + (1.0/2.0)*cf_i0_i1_i2m2 - 1.0/12.0*cf_i0_i1_i2m3 + (1.0/4.0)*cf_i0_i1_i2p1 + tmpFD51);
   const double UpwindAlgInputcf_dupD0 = invdx0*(-1.0/4.0*cf_i0m1_i1_i2 + (3.0/2.0)*cf_i0p1_i1_i2 - 1.0/2.0*cf_i0p2_i1_i2 + (1.0/12.0)*cf_i0p3_i1_i2 + tmpFD52);
   const double UpwindAlgInputcf_dupD1 = invdx1*(-1.0/4.0*cf_i0_i1m1_i2 + (3.0/2.0)*cf_i0_i1p1_i2 - 1.0/2.0*cf_i0_i1p2_i2 + (1.0/12.0)*cf_i0_i1p3_i2 + tmpFD52);
   const double UpwindAlgInputcf_dupD2 = invdx2*(-1.0/4.0*cf_i0_i1_i2m1 + (3.0/2.0)*cf_i0_i1_i2p1 - 1.0/2.0*cf_i0_i1_i2p2 + (1.0/12.0)*cf_i0_i1_i2p3 + tmpFD52);
   const double hDD_dD000 = invdx0*(-2.0/3.0*hDD00_i0m1_i1_i2 + (1.0/12.0)*hDD00_i0m2_i1_i2 + (2.0/3.0)*hDD00_i0p1_i1_i2 - 1.0/12.0*hDD00_i0p2_i1_i2);
   const double hDD_dD001 = invdx1*(-2.0/3.0*hDD00_i0_i1m1_i2 + (1.0/12.0)*hDD00_i0_i1m2_i2 + (2.0/3.0)*hDD00_i0_i1p1_i2 - 1.0/12.0*hDD00_i0_i1p2_i2);
   const double hDD_dD002 = invdx2*(-2.0/3.0*hDD00_i0_i1_i2m1 + (1.0/12.0)*hDD00_i0_i1_i2m2 + (2.0/3.0)*hDD00_i0_i1_i2p1 - 1.0/12.0*hDD00_i0_i1_i2p2);
   const double hDD_dD010 = invdx0*(-2.0/3.0*hDD01_i0m1_i1_i2 + (1.0/12.0)*hDD01_i0m2_i1_i2 + (2.0/3.0)*hDD01_i0p1_i1_i2 - 1.0/12.0*hDD01_i0p2_i1_i2);
   const double hDD_dD011 = invdx1*(-2.0/3.0*hDD01_i0_i1m1_i2 + (1.0/12.0)*hDD01_i0_i1m2_i2 + (2.0/3.0)*hDD01_i0_i1p1_i2 - 1.0/12.0*hDD01_i0_i1p2_i2);
   const double hDD_dD012 = invdx2*(-2.0/3.0*hDD01_i0_i1_i2m1 + (1.0/12.0)*hDD01_i0_i1_i2m2 + (2.0/3.0)*hDD01_i0_i1_i2p1 - 1.0/12.0*hDD01_i0_i1_i2p2);
   const double hDD_dD020 = invdx0*(-2.0/3.0*hDD02_i0m1_i1_i2 + (1.0/12.0)*hDD02_i0m2_i1_i2 + (2.0/3.0)*hDD02_i0p1_i1_i2 - 1.0/12.0*hDD02_i0p2_i1_i2);
   const double hDD_dD021 = invdx1*(-2.0/3.0*hDD02_i0_i1m1_i2 + (1.0/12.0)*hDD02_i0_i1m2_i2 + (2.0/3.0)*hDD02_i0_i1p1_i2 - 1.0/12.0*hDD02_i0_i1p2_i2);
   const double hDD_dD022 = invdx2*(-2.0/3.0*hDD02_i0_i1_i2m1 + (1.0/12.0)*hDD02_i0_i1_i2m2 + (2.0/3.0)*hDD02_i0_i1_i2p1 - 1.0/12.0*hDD02_i0_i1_i2p2);
   const double hDD_dD110 = invdx0*(-2.0/3.0*hDD11_i0m1_i1_i2 + (1.0/12.0)*hDD11_i0m2_i1_i2 + (2.0/3.0)*hDD11_i0p1_i1_i2 - 1.0/12.0*hDD11_i0p2_i1_i2);
   const double hDD_dD111 = invdx1*(-2.0/3.0*hDD11_i0_i1m1_i2 + (1.0/12.0)*hDD11_i0_i1m2_i2 + (2.0/3.0)*hDD11_i0_i1p1_i2 - 1.0/12.0*hDD11_i0_i1p2_i2);
   const double hDD_dD112 = invdx2*(-2.0/3.0*hDD11_i0_i1_i2m1 + (1.0/12.0)*hDD11_i0_i1_i2m2 + (2.0/3.0)*hDD11_i0_i1_i2p1 - 1.0/12.0*hDD11_i0_i1_i2p2);
   const double hDD_dD120 = invdx0*(-2.0/3.0*hDD12_i0m1_i1_i2 + (1.0/12.0)*hDD12_i0m2_i1_i2 + (2.0/3.0)*hDD12_i0p1_i1_i2 - 1.0/12.0*hDD12_i0p2_i1_i2);
   const double hDD_dD121 = invdx1*(-2.0/3.0*hDD12_i0_i1m1_i2 + (1.0/12.0)*hDD12_i0_i1m2_i2 + (2.0/3.0)*hDD12_i0_i1p1_i2 - 1.0/12.0*hDD12_i0_i1p2_i2);
   const double hDD_dD122 = invdx2*(-2.0/3.0*hDD12_i0_i1_i2m1 + (1.0/12.0)*hDD12_i0_i1_i2m2 + (2.0/3.0)*hDD12_i0_i1_i2p1 - 1.0/12.0*hDD12_i0_i1_i2p2);
   const double hDD_dD220 = invdx0*(-2.0/3.0*hDD22_i0m1_i1_i2 + (1.0/12.0)*hDD22_i0m2_i1_i2 + (2.0/3.0)*hDD22_i0p1_i1_i2 - 1.0/12.0*hDD22_i0p2_i1_i2);
   const double hDD_dD221 = invdx1*(-2.0/3.0*hDD22_i0_i1m1_i2 + (1.0/12.0)*hDD22_i0_i1m2_i2 + (2.0/3.0)*hDD22_i0_i1p1_i2 - 1.0/12.0*hDD22_i0_i1p2_i2);
   const double hDD_dD222 = invdx2*(-2.0/3.0*hDD22_i0_i1_i2m1 + (1.0/12.0)*hDD22_i0_i1_i2m2 + (2.0/3.0)*hDD22_i0_i1_i2p1 - 1.0/12.0*hDD22_i0_i1_i2p2);
   const double hDD_dKOD000 = invdx0*((15.0/64.0)*hDD00_i0m1_i1_i2 - 3.0/32.0*hDD00_i0m2_i1_i2 + (1.0/64.0)*hDD00_i0m3_i1_i2 + (15.0/64.0)*hDD00_i0p1_i1_i2 - 3.0/32.0*hDD00_i0p2_i1_i2 + (1.0/64.0)*hDD00_i0p3_i1_i2 + tmpFD53);
   const double hDD_dKOD001 = invdx1*((15.0/64.0)*hDD00_i0_i1m1_i2 - 3.0/32.0*hDD00_i0_i1m2_i2 + (1.0/64.0)*hDD00_i0_i1m3_i2 + (15.0/64.0)*hDD00_i0_i1p1_i2 - 3.0/32.0*hDD00_i0_i1p2_i2 + (1.0/64.0)*hDD00_i0_i1p3_i2 + tmpFD53);
   const double hDD_dKOD002 = invdx2*((15.0/64.0)*hDD00_i0_i1_i2m1 - 3.0/32.0*hDD00_i0_i1_i2m2 + (1.0/64.0)*hDD00_i0_i1_i2m3 + (15.0/64.0)*hDD00_i0_i1_i2p1 - 3.0/32.0*hDD00_i0_i1_i2p2 + (1.0/64.0)*hDD00_i0_i1_i2p3 + tmpFD53);
   const double hDD_dKOD010 = invdx0*((15.0/64.0)*hDD01_i0m1_i1_i2 - 3.0/32.0*hDD01_i0m2_i1_i2 + (1.0/64.0)*hDD01_i0m3_i1_i2 + (15.0/64.0)*hDD01_i0p1_i1_i2 - 3.0/32.0*hDD01_i0p2_i1_i2 + (1.0/64.0)*hDD01_i0p3_i1_i2 + tmpFD54);
   const double hDD_dKOD011 = invdx1*((15.0/64.0)*hDD01_i0_i1m1_i2 - 3.0/32.0*hDD01_i0_i1m2_i2 + (1.0/64.0)*hDD01_i0_i1m3_i2 + (15.0/64.0)*hDD01_i0_i1p1_i2 - 3.0/32.0*hDD01_i0_i1p2_i2 + (1.0/64.0)*hDD01_i0_i1p3_i2 + tmpFD54);
   const double hDD_dKOD012 = invdx2*((15.0/64.0)*hDD01_i0_i1_i2m1 - 3.0/32.0*hDD01_i0_i1_i2m2 + (1.0/64.0)*hDD01_i0_i1_i2m3 + (15.0/64.0)*hDD01_i0_i1_i2p1 - 3.0/32.0*hDD01_i0_i1_i2p2 + (1.0/64.0)*hDD01_i0_i1_i2p3 + tmpFD54);
   const double hDD_dKOD020 = invdx0*((15.0/64.0)*hDD02_i0m1_i1_i2 - 3.0/32.0*hDD02_i0m2_i1_i2 + (1.0/64.0)*hDD02_i0m3_i1_i2 + (15.0/64.0)*hDD02_i0p1_i1_i2 - 3.0/32.0*hDD02_i0p2_i1_i2 + (1.0/64.0)*hDD02_i0p3_i1_i2 + tmpFD55);
   const double hDD_dKOD021 = invdx1*((15.0/64.0)*hDD02_i0_i1m1_i2 - 3.0/32.0*hDD02_i0_i1m2_i2 + (1.0/64.0)*hDD02_i0_i1m3_i2 + (15.0/64.0)*hDD02_i0_i1p1_i2 - 3.0/32.0*hDD02_i0_i1p2_i2 + (1.0/64.0)*hDD02_i0_i1p3_i2 + tmpFD55);
   const double hDD_dKOD022 = invdx2*((15.0/64.0)*hDD02_i0_i1_i2m1 - 3.0/32.0*hDD02_i0_i1_i2m2 + (1.0/64.0)*hDD02_i0_i1_i2m3 + (15.0/64.0)*hDD02_i0_i1_i2p1 - 3.0/32.0*hDD02_i0_i1_i2p2 + (1.0/64.0)*hDD02_i0_i1_i2p3 + tmpFD55);
   const double hDD_dKOD110 = invdx0*((15.0/64.0)*hDD11_i0m1_i1_i2 - 3.0/32.0*hDD11_i0m2_i1_i2 + (1.0/64.0)*hDD11_i0m3_i1_i2 + (15.0/64.0)*hDD11_i0p1_i1_i2 - 3.0/32.0*hDD11_i0p2_i1_i2 + (1.0/64.0)*hDD11_i0p3_i1_i2 + tmpFD56);
   const double hDD_dKOD111 = invdx1*((15.0/64.0)*hDD11_i0_i1m1_i2 - 3.0/32.0*hDD11_i0_i1m2_i2 + (1.0/64.0)*hDD11_i0_i1m3_i2 + (15.0/64.0)*hDD11_i0_i1p1_i2 - 3.0/32.0*hDD11_i0_i1p2_i2 + (1.0/64.0)*hDD11_i0_i1p3_i2 + tmpFD56);
   const double hDD_dKOD112 = invdx2*((15.0/64.0)*hDD11_i0_i1_i2m1 - 3.0/32.0*hDD11_i0_i1_i2m2 + (1.0/64.0)*hDD11_i0_i1_i2m3 + (15.0/64.0)*hDD11_i0_i1_i2p1 - 3.0/32.0*hDD11_i0_i1_i2p2 + (1.0/64.0)*hDD11_i0_i1_i2p3 + tmpFD56);
   const double hDD_dKOD120 = invdx0*((15.0/64.0)*hDD12_i0m1_i1_i2 - 3.0/32.0*hDD12_i0m2_i1_i2 + (1.0/64.0)*hDD12_i0m3_i1_i2 + (15.0/64.0)*hDD12_i0p1_i1_i2 - 3.0/32.0*hDD12_i0p2_i1_i2 + (1.0/64.0)*hDD12_i0p3_i1_i2 + tmpFD57);
   const double hDD_dKOD121 = invdx1*((15.0/64.0)*hDD12_i0_i1m1_i2 - 3.0/32.0*hDD12_i0_i1m2_i2 + (1.0/64.0)*hDD12_i0_i1m3_i2 + (15.0/64.0)*hDD12_i0_i1p1_i2 - 3.0/32.0*hDD12_i0_i1p2_i2 + (1.0/64.0)*hDD12_i0_i1p3_i2 + tmpFD57);
   const double hDD_dKOD122 = invdx2*((15.0/64.0)*hDD12_i0_i1_i2m1 - 3.0/32.0*hDD12_i0_i1_i2m2 + (1.0/64.0)*hDD12_i0_i1_i2m3 + (15.0/64.0)*hDD12_i0_i1_i2p1 - 3.0/32.0*hDD12_i0_i1_i2p2 + (1.0/64.0)*hDD12_i0_i1_i2p3 + tmpFD57);
   const double hDD_dKOD220 = invdx0*((15.0/64.0)*hDD22_i0m1_i1_i2 - 3.0/32.0*hDD22_i0m2_i1_i2 + (1.0/64.0)*hDD22_i0m3_i1_i2 + (15.0/64.0)*hDD22_i0p1_i1_i2 - 3.0/32.0*hDD22_i0p2_i1_i2 + (1.0/64.0)*hDD22_i0p3_i1_i2 + tmpFD58);
   const double hDD_dKOD221 = invdx1*((15.0/64.0)*hDD22_i0_i1m1_i2 - 3.0/32.0*hDD22_i0_i1m2_i2 + (1.0/64.0)*hDD22_i0_i1m3_i2 + (15.0/64.0)*hDD22_i0_i1p1_i2 - 3.0/32.0*hDD22_i0_i1p2_i2 + (1.0/64.0)*hDD22_i0_i1p3_i2 + tmpFD58);
   const double hDD_dKOD222 = invdx2*((15.0/64.0)*hDD22_i0_i1_i2m1 - 3.0/32.0*hDD22_i0_i1_i2m2 + (1.0/64.0)*hDD22_i0_i1_i2m3 + (15.0/64.0)*hDD22_i0_i1_i2p1 - 3.0/32.0*hDD22_i0_i1_i2p2 + (1.0/64.0)*hDD22_i0_i1_i2p3 + tmpFD58);
   const double UpwindAlgInputhDD_ddnD000 = invdx0*(-3.0/2.0*hDD00_i0m1_i1_i2 + (1.0/2.0)*hDD00_i0m2_i1_i2 - 1.0/12.0*hDD00_i0m3_i1_i2 + (1.0/4.0)*hDD00_i0p1_i1_i2 + tmpFD59);
   const double UpwindAlgInputhDD_ddnD001 = invdx1*(-3.0/2.0*hDD00_i0_i1m1_i2 + (1.0/2.0)*hDD00_i0_i1m2_i2 - 1.0/12.0*hDD00_i0_i1m3_i2 + (1.0/4.0)*hDD00_i0_i1p1_i2 + tmpFD59);
   const double UpwindAlgInputhDD_ddnD002 = invdx2*(-3.0/2.0*hDD00_i0_i1_i2m1 + (1.0/2.0)*hDD00_i0_i1_i2m2 - 1.0/12.0*hDD00_i0_i1_i2m3 + (1.0/4.0)*hDD00_i0_i1_i2p1 + tmpFD59);
   const double UpwindAlgInputhDD_ddnD010 = invdx0*(-3.0/2.0*hDD01_i0m1_i1_i2 + (1.0/2.0)*hDD01_i0m2_i1_i2 - 1.0/12.0*hDD01_i0m3_i1_i2 + (1.0/4.0)*hDD01_i0p1_i1_i2 + tmpFD60);
   const double UpwindAlgInputhDD_ddnD011 = invdx1*(-3.0/2.0*hDD01_i0_i1m1_i2 + (1.0/2.0)*hDD01_i0_i1m2_i2 - 1.0/12.0*hDD01_i0_i1m3_i2 + (1.0/4.0)*hDD01_i0_i1p1_i2 + tmpFD60);
   const double UpwindAlgInputhDD_ddnD012 = invdx2*(-3.0/2.0*hDD01_i0_i1_i2m1 + (1.0/2.0)*hDD01_i0_i1_i2m2 - 1.0/12.0*hDD01_i0_i1_i2m3 + (1.0/4.0)*hDD01_i0_i1_i2p1 + tmpFD60);
   const double UpwindAlgInputhDD_ddnD020 = invdx0*(-3.0/2.0*hDD02_i0m1_i1_i2 + (1.0/2.0)*hDD02_i0m2_i1_i2 - 1.0/12.0*hDD02_i0m3_i1_i2 + (1.0/4.0)*hDD02_i0p1_i1_i2 + tmpFD61);
   const double UpwindAlgInputhDD_ddnD021 = invdx1*(-3.0/2.0*hDD02_i0_i1m1_i2 + (1.0/2.0)*hDD02_i0_i1m2_i2 - 1.0/12.0*hDD02_i0_i1m3_i2 + (1.0/4.0)*hDD02_i0_i1p1_i2 + tmpFD61);
   const double UpwindAlgInputhDD_ddnD022 = invdx2*(-3.0/2.0*hDD02_i0_i1_i2m1 + (1.0/2.0)*hDD02_i0_i1_i2m2 - 1.0/12.0*hDD02_i0_i1_i2m3 + (1.0/4.0)*hDD02_i0_i1_i2p1 + tmpFD61);
   const double UpwindAlgInputhDD_ddnD110 = invdx0*(-3.0/2.0*hDD11_i0m1_i1_i2 + (1.0/2.0)*hDD11_i0m2_i1_i2 - 1.0/12.0*hDD11_i0m3_i1_i2 + (1.0/4.0)*hDD11_i0p1_i1_i2 + tmpFD62);
   const double UpwindAlgInputhDD_ddnD111 = invdx1*(-3.0/2.0*hDD11_i0_i1m1_i2 + (1.0/2.0)*hDD11_i0_i1m2_i2 - 1.0/12.0*hDD11_i0_i1m3_i2 + (1.0/4.0)*hDD11_i0_i1p1_i2 + tmpFD62);
   const double UpwindAlgInputhDD_ddnD112 = invdx2*(-3.0/2.0*hDD11_i0_i1_i2m1 + (1.0/2.0)*hDD11_i0_i1_i2m2 - 1.0/12.0*hDD11_i0_i1_i2m3 + (1.0/4.0)*hDD11_i0_i1_i2p1 + tmpFD62);
   const double UpwindAlgInputhDD_ddnD120 = invdx0*(-3.0/2.0*hDD12_i0m1_i1_i2 + (1.0/2.0)*hDD12_i0m2_i1_i2 - 1.0/12.0*hDD12_i0m3_i1_i2 + (1.0/4.0)*hDD12_i0p1_i1_i2 + tmpFD63);
   const double UpwindAlgInputhDD_ddnD121 = invdx1*(-3.0/2.0*hDD12_i0_i1m1_i2 + (1.0/2.0)*hDD12_i0_i1m2_i2 - 1.0/12.0*hDD12_i0_i1m3_i2 + (1.0/4.0)*hDD12_i0_i1p1_i2 + tmpFD63);
   const double UpwindAlgInputhDD_ddnD122 = invdx2*(-3.0/2.0*hDD12_i0_i1_i2m1 + (1.0/2.0)*hDD12_i0_i1_i2m2 - 1.0/12.0*hDD12_i0_i1_i2m3 + (1.0/4.0)*hDD12_i0_i1_i2p1 + tmpFD63);
   const double UpwindAlgInputhDD_ddnD220 = invdx0*(-3.0/2.0*hDD22_i0m1_i1_i2 + (1.0/2.0)*hDD22_i0m2_i1_i2 - 1.0/12.0*hDD22_i0m3_i1_i2 + (1.0/4.0)*hDD22_i0p1_i1_i2 + tmpFD64);
   const double UpwindAlgInputhDD_ddnD221 = invdx1*(-3.0/2.0*hDD22_i0_i1m1_i2 + (1.0/2.0)*hDD22_i0_i1m2_i2 - 1.0/12.0*hDD22_i0_i1m3_i2 + (1.0/4.0)*hDD22_i0_i1p1_i2 + tmpFD64);
   const double UpwindAlgInputhDD_ddnD222 = invdx2*(-3.0/2.0*hDD22_i0_i1_i2m1 + (1.0/2.0)*hDD22_i0_i1_i2m2 - 1.0/12.0*hDD22_i0_i1_i2m3 + (1.0/4.0)*hDD22_i0_i1_i2p1 + tmpFD64);
   const double UpwindAlgInputhDD_dupD000 = invdx0*(-1.0/4.0*hDD00_i0m1_i1_i2 + (3.0/2.0)*hDD00_i0p1_i1_i2 - 1.0/2.0*hDD00_i0p2_i1_i2 + (1.0/12.0)*hDD00_i0p3_i1_i2 + tmpFD65);
   const double UpwindAlgInputhDD_dupD001 = invdx1*(-1.0/4.0*hDD00_i0_i1m1_i2 + (3.0/2.0)*hDD00_i0_i1p1_i2 - 1.0/2.0*hDD00_i0_i1p2_i2 + (1.0/12.0)*hDD00_i0_i1p3_i2 + tmpFD65);
   const double UpwindAlgInputhDD_dupD002 = invdx2*(-1.0/4.0*hDD00_i0_i1_i2m1 + (3.0/2.0)*hDD00_i0_i1_i2p1 - 1.0/2.0*hDD00_i0_i1_i2p2 + (1.0/12.0)*hDD00_i0_i1_i2p3 + tmpFD65);
   const double UpwindAlgInputhDD_dupD010 = invdx0*(-1.0/4.0*hDD01_i0m1_i1_i2 + (3.0/2.0)*hDD01_i0p1_i1_i2 - 1.0/2.0*hDD01_i0p2_i1_i2 + (1.0/12.0)*hDD01_i0p3_i1_i2 + tmpFD66);
   const double UpwindAlgInputhDD_dupD011 = invdx1*(-1.0/4.0*hDD01_i0_i1m1_i2 + (3.0/2.0)*hDD01_i0_i1p1_i2 - 1.0/2.0*hDD01_i0_i1p2_i2 + (1.0/12.0)*hDD01_i0_i1p3_i2 + tmpFD66);
   const double UpwindAlgInputhDD_dupD012 = invdx2*(-1.0/4.0*hDD01_i0_i1_i2m1 + (3.0/2.0)*hDD01_i0_i1_i2p1 - 1.0/2.0*hDD01_i0_i1_i2p2 + (1.0/12.0)*hDD01_i0_i1_i2p3 + tmpFD66);
   const double UpwindAlgInputhDD_dupD020 = invdx0*(-1.0/4.0*hDD02_i0m1_i1_i2 + (3.0/2.0)*hDD02_i0p1_i1_i2 - 1.0/2.0*hDD02_i0p2_i1_i2 + (1.0/12.0)*hDD02_i0p3_i1_i2 + tmpFD67);
   const double UpwindAlgInputhDD_dupD021 = invdx1*(-1.0/4.0*hDD02_i0_i1m1_i2 + (3.0/2.0)*hDD02_i0_i1p1_i2 - 1.0/2.0*hDD02_i0_i1p2_i2 + (1.0/12.0)*hDD02_i0_i1p3_i2 + tmpFD67);
   const double UpwindAlgInputhDD_dupD022 = invdx2*(-1.0/4.0*hDD02_i0_i1_i2m1 + (3.0/2.0)*hDD02_i0_i1_i2p1 - 1.0/2.0*hDD02_i0_i1_i2p2 + (1.0/12.0)*hDD02_i0_i1_i2p3 + tmpFD67);
   const double UpwindAlgInputhDD_dupD110 = invdx0*(-1.0/4.0*hDD11_i0m1_i1_i2 + (3.0/2.0)*hDD11_i0p1_i1_i2 - 1.0/2.0*hDD11_i0p2_i1_i2 + (1.0/12.0)*hDD11_i0p3_i1_i2 + tmpFD68);
   const double UpwindAlgInputhDD_dupD111 = invdx1*(-1.0/4.0*hDD11_i0_i1m1_i2 + (3.0/2.0)*hDD11_i0_i1p1_i2 - 1.0/2.0*hDD11_i0_i1p2_i2 + (1.0/12.0)*hDD11_i0_i1p3_i2 + tmpFD68);
   const double UpwindAlgInputhDD_dupD112 = invdx2*(-1.0/4.0*hDD11_i0_i1_i2m1 + (3.0/2.0)*hDD11_i0_i1_i2p1 - 1.0/2.0*hDD11_i0_i1_i2p2 + (1.0/12.0)*hDD11_i0_i1_i2p3 + tmpFD68);
   const double UpwindAlgInputhDD_dupD120 = invdx0*(-1.0/4.0*hDD12_i0m1_i1_i2 + (3.0/2.0)*hDD12_i0p1_i1_i2 - 1.0/2.0*hDD12_i0p2_i1_i2 + (1.0/12.0)*hDD12_i0p3_i1_i2 + tmpFD69);
   const double UpwindAlgInputhDD_dupD121 = invdx1*(-1.0/4.0*hDD12_i0_i1m1_i2 + (3.0/2.0)*hDD12_i0_i1p1_i2 - 1.0/2.0*hDD12_i0_i1p2_i2 + (1.0/12.0)*hDD12_i0_i1p3_i2 + tmpFD69);
   const double UpwindAlgInputhDD_dupD122 = invdx2*(-1.0/4.0*hDD12_i0_i1_i2m1 + (3.0/2.0)*hDD12_i0_i1_i2p1 - 1.0/2.0*hDD12_i0_i1_i2p2 + (1.0/12.0)*hDD12_i0_i1_i2p3 + tmpFD69);
   const double UpwindAlgInputhDD_dupD220 = invdx0*(-1.0/4.0*hDD22_i0m1_i1_i2 + (3.0/2.0)*hDD22_i0p1_i1_i2 - 1.0/2.0*hDD22_i0p2_i1_i2 + (1.0/12.0)*hDD22_i0p3_i1_i2 + tmpFD70);
   const double UpwindAlgInputhDD_dupD221 = invdx1*(-1.0/4.0*hDD22_i0_i1m1_i2 + (3.0/2.0)*hDD22_i0_i1p1_i2 - 1.0/2.0*hDD22_i0_i1p2_i2 + (1.0/12.0)*hDD22_i0_i1p3_i2 + tmpFD70);
   const double UpwindAlgInputhDD_dupD222 = invdx2*(-1.0/4.0*hDD22_i0_i1_i2m1 + (3.0/2.0)*hDD22_i0_i1_i2p1 - 1.0/2.0*hDD22_i0_i1_i2p2 + (1.0/12.0)*hDD22_i0_i1_i2p3 + tmpFD70);
   const double lambdaU_dKOD00 = invdx0*((15.0/64.0)*lambdaU0_i0m1_i1_i2 - 3.0/32.0*lambdaU0_i0m2_i1_i2 + (1.0/64.0)*lambdaU0_i0m3_i1_i2 + (15.0/64.0)*lambdaU0_i0p1_i1_i2 - 3.0/32.0*lambdaU0_i0p2_i1_i2 + (1.0/64.0)*lambdaU0_i0p3_i1_i2 + tmpFD71);
   const double lambdaU_dKOD01 = invdx1*((15.0/64.0)*lambdaU0_i0_i1m1_i2 - 3.0/32.0*lambdaU0_i0_i1m2_i2 + (1.0/64.0)*lambdaU0_i0_i1m3_i2 + (15.0/64.0)*lambdaU0_i0_i1p1_i2 - 3.0/32.0*lambdaU0_i0_i1p2_i2 + (1.0/64.0)*lambdaU0_i0_i1p3_i2 + tmpFD71);
   const double lambdaU_dKOD02 = invdx2*((15.0/64.0)*lambdaU0_i0_i1_i2m1 - 3.0/32.0*lambdaU0_i0_i1_i2m2 + (1.0/64.0)*lambdaU0_i0_i1_i2m3 + (15.0/64.0)*lambdaU0_i0_i1_i2p1 - 3.0/32.0*lambdaU0_i0_i1_i2p2 + (1.0/64.0)*lambdaU0_i0_i1_i2p3 + tmpFD71);
   const double lambdaU_dKOD10 = invdx0*((15.0/64.0)*lambdaU1_i0m1_i1_i2 - 3.0/32.0*lambdaU1_i0m2_i1_i2 + (1.0/64.0)*lambdaU1_i0m3_i1_i2 + (15.0/64.0)*lambdaU1_i0p1_i1_i2 - 3.0/32.0*lambdaU1_i0p2_i1_i2 + (1.0/64.0)*lambdaU1_i0p3_i1_i2 + tmpFD72);
   const double lambdaU_dKOD11 = invdx1*((15.0/64.0)*lambdaU1_i0_i1m1_i2 - 3.0/32.0*lambdaU1_i0_i1m2_i2 + (1.0/64.0)*lambdaU1_i0_i1m3_i2 + (15.0/64.0)*lambdaU1_i0_i1p1_i2 - 3.0/32.0*lambdaU1_i0_i1p2_i2 + (1.0/64.0)*lambdaU1_i0_i1p3_i2 + tmpFD72);
   const double lambdaU_dKOD12 = invdx2*((15.0/64.0)*lambdaU1_i0_i1_i2m1 - 3.0/32.0*lambdaU1_i0_i1_i2m2 + (1.0/64.0)*lambdaU1_i0_i1_i2m3 + (15.0/64.0)*lambdaU1_i0_i1_i2p1 - 3.0/32.0*lambdaU1_i0_i1_i2p2 + (1.0/64.0)*lambdaU1_i0_i1_i2p3 + tmpFD72);
   const double lambdaU_dKOD20 = invdx0*((15.0/64.0)*lambdaU2_i0m1_i1_i2 - 3.0/32.0*lambdaU2_i0m2_i1_i2 + (1.0/64.0)*lambdaU2_i0m3_i1_i2 + (15.0/64.0)*lambdaU2_i0p1_i1_i2 - 3.0/32.0*lambdaU2_i0p2_i1_i2 + (1.0/64.0)*lambdaU2_i0p3_i1_i2 + tmpFD73);
   const double lambdaU_dKOD21 = invdx1*((15.0/64.0)*lambdaU2_i0_i1m1_i2 - 3.0/32.0*lambdaU2_i0_i1m2_i2 + (1.0/64.0)*lambdaU2_i0_i1m3_i2 + (15.0/64.0)*lambdaU2_i0_i1p1_i2 - 3.0/32.0*lambdaU2_i0_i1p2_i2 + (1.0/64.0)*lambdaU2_i0_i1p3_i2 + tmpFD73);
   const double lambdaU_dKOD22 = invdx2*((15.0/64.0)*lambdaU2_i0_i1_i2m1 - 3.0/32.0*lambdaU2_i0_i1_i2m2 + (1.0/64.0)*lambdaU2_i0_i1_i2m3 + (15.0/64.0)*lambdaU2_i0_i1_i2p1 - 3.0/32.0*lambdaU2_i0_i1_i2p2 + (1.0/64.0)*lambdaU2_i0_i1_i2p3 + tmpFD73);
   const double UpwindAlgInputlambdaU_ddnD00 = invdx0*(-3.0/2.0*lambdaU0_i0m1_i1_i2 + (1.0/2.0)*lambdaU0_i0m2_i1_i2 - 1.0/12.0*lambdaU0_i0m3_i1_i2 + (1.0/4.0)*lambdaU0_i0p1_i1_i2 + tmpFD74);
   const double UpwindAlgInputlambdaU_ddnD01 = invdx1*(-3.0/2.0*lambdaU0_i0_i1m1_i2 + (1.0/2.0)*lambdaU0_i0_i1m2_i2 - 1.0/12.0*lambdaU0_i0_i1m3_i2 + (1.0/4.0)*lambdaU0_i0_i1p1_i2 + tmpFD74);
   const double UpwindAlgInputlambdaU_ddnD02 = invdx2*(-3.0/2.0*lambdaU0_i0_i1_i2m1 + (1.0/2.0)*lambdaU0_i0_i1_i2m2 - 1.0/12.0*lambdaU0_i0_i1_i2m3 + (1.0/4.0)*lambdaU0_i0_i1_i2p1 + tmpFD74);
   const double UpwindAlgInputlambdaU_ddnD10 = invdx0*(-3.0/2.0*lambdaU1_i0m1_i1_i2 + (1.0/2.0)*lambdaU1_i0m2_i1_i2 - 1.0/12.0*lambdaU1_i0m3_i1_i2 + (1.0/4.0)*lambdaU1_i0p1_i1_i2 + tmpFD75);
   const double UpwindAlgInputlambdaU_ddnD11 = invdx1*(-3.0/2.0*lambdaU1_i0_i1m1_i2 + (1.0/2.0)*lambdaU1_i0_i1m2_i2 - 1.0/12.0*lambdaU1_i0_i1m3_i2 + (1.0/4.0)*lambdaU1_i0_i1p1_i2 + tmpFD75);
   const double UpwindAlgInputlambdaU_ddnD12 = invdx2*(-3.0/2.0*lambdaU1_i0_i1_i2m1 + (1.0/2.0)*lambdaU1_i0_i1_i2m2 - 1.0/12.0*lambdaU1_i0_i1_i2m3 + (1.0/4.0)*lambdaU1_i0_i1_i2p1 + tmpFD75);
   const double UpwindAlgInputlambdaU_ddnD20 = invdx0*(-3.0/2.0*lambdaU2_i0m1_i1_i2 + (1.0/2.0)*lambdaU2_i0m2_i1_i2 - 1.0/12.0*lambdaU2_i0m3_i1_i2 + (1.0/4.0)*lambdaU2_i0p1_i1_i2 + tmpFD76);
   const double UpwindAlgInputlambdaU_ddnD21 = invdx1*(-3.0/2.0*lambdaU2_i0_i1m1_i2 + (1.0/2.0)*lambdaU2_i0_i1m2_i2 - 1.0/12.0*lambdaU2_i0_i1m3_i2 + (1.0/4.0)*lambdaU2_i0_i1p1_i2 + tmpFD76);
   const double UpwindAlgInputlambdaU_ddnD22 = invdx2*(-3.0/2.0*lambdaU2_i0_i1_i2m1 + (1.0/2.0)*lambdaU2_i0_i1_i2m2 - 1.0/12.0*lambdaU2_i0_i1_i2m3 + (1.0/4.0)*lambdaU2_i0_i1_i2p1 + tmpFD76);
   const double UpwindAlgInputlambdaU_dupD00 = invdx0*(-1.0/4.0*lambdaU0_i0m1_i1_i2 + (3.0/2.0)*lambdaU0_i0p1_i1_i2 - 1.0/2.0*lambdaU0_i0p2_i1_i2 + (1.0/12.0)*lambdaU0_i0p3_i1_i2 + tmpFD77);
   const double UpwindAlgInputlambdaU_dupD01 = invdx1*(-1.0/4.0*lambdaU0_i0_i1m1_i2 + (3.0/2.0)*lambdaU0_i0_i1p1_i2 - 1.0/2.0*lambdaU0_i0_i1p2_i2 + (1.0/12.0)*lambdaU0_i0_i1p3_i2 + tmpFD77);
   const double UpwindAlgInputlambdaU_dupD02 = invdx2*(-1.0/4.0*lambdaU0_i0_i1_i2m1 + (3.0/2.0)*lambdaU0_i0_i1_i2p1 - 1.0/2.0*lambdaU0_i0_i1_i2p2 + (1.0/12.0)*lambdaU0_i0_i1_i2p3 + tmpFD77);
   const double UpwindAlgInputlambdaU_dupD10 = invdx0*(-1.0/4.0*lambdaU1_i0m1_i1_i2 + (3.0/2.0)*lambdaU1_i0p1_i1_i2 - 1.0/2.0*lambdaU1_i0p2_i1_i2 + (1.0/12.0)*lambdaU1_i0p3_i1_i2 + tmpFD78);
   const double UpwindAlgInputlambdaU_dupD11 = invdx1*(-1.0/4.0*lambdaU1_i0_i1m1_i2 + (3.0/2.0)*lambdaU1_i0_i1p1_i2 - 1.0/2.0*lambdaU1_i0_i1p2_i2 + (1.0/12.0)*lambdaU1_i0_i1p3_i2 + tmpFD78);
   const double UpwindAlgInputlambdaU_dupD12 = invdx2*(-1.0/4.0*lambdaU1_i0_i1_i2m1 + (3.0/2.0)*lambdaU1_i0_i1_i2p1 - 1.0/2.0*lambdaU1_i0_i1_i2p2 + (1.0/12.0)*lambdaU1_i0_i1_i2p3 + tmpFD78);
   const double UpwindAlgInputlambdaU_dupD20 = invdx0*(-1.0/4.0*lambdaU2_i0m1_i1_i2 + (3.0/2.0)*lambdaU2_i0p1_i1_i2 - 1.0/2.0*lambdaU2_i0p2_i1_i2 + (1.0/12.0)*lambdaU2_i0p3_i1_i2 + tmpFD79);
   const double UpwindAlgInputlambdaU_dupD21 = invdx1*(-1.0/4.0*lambdaU2_i0_i1m1_i2 + (3.0/2.0)*lambdaU2_i0_i1p1_i2 - 1.0/2.0*lambdaU2_i0_i1p2_i2 + (1.0/12.0)*lambdaU2_i0_i1p3_i2 + tmpFD79);
   const double UpwindAlgInputlambdaU_dupD22 = invdx2*(-1.0/4.0*lambdaU2_i0_i1_i2m1 + (3.0/2.0)*lambdaU2_i0_i1_i2p1 - 1.0/2.0*lambdaU2_i0_i1_i2p2 + (1.0/12.0)*lambdaU2_i0_i1_i2p3 + tmpFD79);
   const double trK_dD0 = invdx0*(-2.0/3.0*trK_i0m1_i1_i2 + (1.0/12.0)*trK_i0m2_i1_i2 + (2.0/3.0)*trK_i0p1_i1_i2 - 1.0/12.0*trK_i0p2_i1_i2);
   const double trK_dD1 = invdx1*(-2.0/3.0*trK_i0_i1m1_i2 + (1.0/12.0)*trK_i0_i1m2_i2 + (2.0/3.0)*trK_i0_i1p1_i2 - 1.0/12.0*trK_i0_i1p2_i2);
   const double trK_dD2 = invdx2*(-2.0/3.0*trK_i0_i1_i2m1 + (1.0/12.0)*trK_i0_i1_i2m2 + (2.0/3.0)*trK_i0_i1_i2p1 - 1.0/12.0*trK_i0_i1_i2p2);
   const double trK_dKOD0 = invdx0*(tmpFD80 + (15.0/64.0)*trK_i0m1_i1_i2 - 3.0/32.0*trK_i0m2_i1_i2 + (1.0/64.0)*trK_i0m3_i1_i2 + (15.0/64.0)*trK_i0p1_i1_i2 - 3.0/32.0*trK_i0p2_i1_i2 + (1.0/64.0)*trK_i0p3_i1_i2);
   const double trK_dKOD1 = invdx1*(tmpFD80 + (15.0/64.0)*trK_i0_i1m1_i2 - 3.0/32.0*trK_i0_i1m2_i2 + (1.0/64.0)*trK_i0_i1m3_i2 + (15.0/64.0)*trK_i0_i1p1_i2 - 3.0/32.0*trK_i0_i1p2_i2 + (1.0/64.0)*trK_i0_i1p3_i2);
   const double trK_dKOD2 = invdx2*(tmpFD80 + (15.0/64.0)*trK_i0_i1_i2m1 - 3.0/32.0*trK_i0_i1_i2m2 + (1.0/64.0)*trK_i0_i1_i2m3 + (15.0/64.0)*trK_i0_i1_i2p1 - 3.0/32.0*trK_i0_i1_i2p2 + (1.0/64.0)*trK_i0_i1_i2p3);
   const double UpwindAlgInputtrK_ddnD0 = invdx0*(tmpFD81 - 3.0/2.0*trK_i0m1_i1_i2 + (1.0/2.0)*trK_i0m2_i1_i2 - 1.0/12.0*trK_i0m3_i1_i2 + (1.0/4.0)*trK_i0p1_i1_i2);
   const double UpwindAlgInputtrK_ddnD1 = invdx1*(tmpFD81 - 3.0/2.0*trK_i0_i1m1_i2 + (1.0/2.0)*trK_i0_i1m2_i2 - 1.0/12.0*trK_i0_i1m3_i2 + (1.0/4.0)*trK_i0_i1p1_i2);
   const double UpwindAlgInputtrK_ddnD2 = invdx2*(tmpFD81 - 3.0/2.0*trK_i0_i1_i2m1 + (1.0/2.0)*trK_i0_i1_i2m2 - 1.0/12.0*trK_i0_i1_i2m3 + (1.0/4.0)*trK_i0_i1_i2p1);
   const double UpwindAlgInputtrK_dupD0 = invdx0*(tmpFD82 - 1.0/4.0*trK_i0m1_i1_i2 + (3.0/2.0)*trK_i0p1_i1_i2 - 1.0/2.0*trK_i0p2_i1_i2 + (1.0/12.0)*trK_i0p3_i1_i2);
   const double UpwindAlgInputtrK_dupD1 = invdx1*(tmpFD82 - 1.0/4.0*trK_i0_i1m1_i2 + (3.0/2.0)*trK_i0_i1p1_i2 - 1.0/2.0*trK_i0_i1p2_i2 + (1.0/12.0)*trK_i0_i1p3_i2);
   const double UpwindAlgInputtrK_dupD2 = invdx2*(tmpFD82 - 1.0/4.0*trK_i0_i1_i2m1 + (3.0/2.0)*trK_i0_i1_i2p1 - 1.0/2.0*trK_i0_i1_i2p2 + (1.0/12.0)*trK_i0_i1_i2p3);
   const double vetU_dD00 = invdx0*(tmpFD83 + tmpFD84 - 2.0/3.0*vetU0_i0m1_i1_i2 + (2.0/3.0)*vetU0_i0p1_i1_i2);
   const double vetU_dD01 = invdx1*(tmpFD85 + tmpFD86 - 2.0/3.0*vetU0_i0_i1m1_i2 + (2.0/3.0)*vetU0_i0_i1p1_i2);
   const double vetU_dD02 = invdx2*(tmpFD87 + tmpFD88 - 2.0/3.0*vetU0_i0_i1_i2m1 + (2.0/3.0)*vetU0_i0_i1_i2p1);
   const double vetU_dD10 = invdx0*(tmpFD89 + tmpFD90 - 2.0/3.0*vetU1_i0m1_i1_i2 + (2.0/3.0)*vetU1_i0p1_i1_i2);
   const double vetU_dD11 = invdx1*(tmpFD91 + tmpFD92 - 2.0/3.0*vetU1_i0_i1m1_i2 + (2.0/3.0)*vetU1_i0_i1p1_i2);
   const double vetU_dD12 = invdx2*(tmpFD93 + tmpFD94 - 2.0/3.0*vetU1_i0_i1_i2m1 + (2.0/3.0)*vetU1_i0_i1_i2p1);
   const double vetU_dD20 = invdx0*(tmpFD95 + tmpFD96 - 2.0/3.0*vetU2_i0m1_i1_i2 + (2.0/3.0)*vetU2_i0p1_i1_i2);
   const double vetU_dD21 = invdx1*(tmpFD97 + tmpFD98 - 2.0/3.0*vetU2_i0_i1m1_i2 + (2.0/3.0)*vetU2_i0_i1p1_i2);
   const double vetU_dD22 = invdx2*(tmpFD100 + tmpFD99 - 2.0/3.0*vetU2_i0_i1_i2m1 + (2.0/3.0)*vetU2_i0_i1_i2p1);
   const double vetU_dDD000 = tmpFD24*(tmpFD101 - tmpFD83 + tmpFD84 + (4.0/3.0)*vetU0_i0m1_i1_i2 + (4.0/3.0)*vetU0_i0p1_i1_i2);
   const double vetU_dDD001 = tmpFD26*((4.0/9.0)*vetU0_i0m1_i1m1_i2 - 1.0/18.0*vetU0_i0m1_i1m2_i2 - 4.0/9.0*vetU0_i0m1_i1p1_i2 + (1.0/18.0)*vetU0_i0m1_i1p2_i2 - 1.0/18.0*vetU0_i0m2_i1m1_i2 + (1.0/144.0)*vetU0_i0m2_i1m2_i2 + (1.0/18.0)*vetU0_i0m2_i1p1_i2 - 1.0/144.0*vetU0_i0m2_i1p2_i2 - 4.0/9.0*vetU0_i0p1_i1m1_i2 + (1.0/18.0)*vetU0_i0p1_i1m2_i2 + (4.0/9.0)*vetU0_i0p1_i1p1_i2 - 1.0/18.0*vetU0_i0p1_i1p2_i2 + (1.0/18.0)*vetU0_i0p2_i1m1_i2 - 1.0/144.0*vetU0_i0p2_i1m2_i2 - 1.0/18.0*vetU0_i0p2_i1p1_i2 + (1.0/144.0)*vetU0_i0p2_i1p2_i2);
   const double vetU_dDD002 = tmpFD27*((4.0/9.0)*vetU0_i0m1_i1_i2m1 - 1.0/18.0*vetU0_i0m1_i1_i2m2 - 4.0/9.0*vetU0_i0m1_i1_i2p1 + (1.0/18.0)*vetU0_i0m1_i1_i2p2 - 1.0/18.0*vetU0_i0m2_i1_i2m1 + (1.0/144.0)*vetU0_i0m2_i1_i2m2 + (1.0/18.0)*vetU0_i0m2_i1_i2p1 - 1.0/144.0*vetU0_i0m2_i1_i2p2 - 4.0/9.0*vetU0_i0p1_i1_i2m1 + (1.0/18.0)*vetU0_i0p1_i1_i2m2 + (4.0/9.0)*vetU0_i0p1_i1_i2p1 - 1.0/18.0*vetU0_i0p1_i1_i2p2 + (1.0/18.0)*vetU0_i0p2_i1_i2m1 - 1.0/144.0*vetU0_i0p2_i1_i2m2 - 1.0/18.0*vetU0_i0p2_i1_i2p1 + (1.0/144.0)*vetU0_i0p2_i1_i2p2);
   const double vetU_dDD011 = tmpFD28*(tmpFD101 - tmpFD85 + tmpFD86 + (4.0/3.0)*vetU0_i0_i1m1_i2 + (4.0/3.0)*vetU0_i0_i1p1_i2);
   const double vetU_dDD012 = tmpFD29*((4.0/9.0)*vetU0_i0_i1m1_i2m1 - 1.0/18.0*vetU0_i0_i1m1_i2m2 - 4.0/9.0*vetU0_i0_i1m1_i2p1 + (1.0/18.0)*vetU0_i0_i1m1_i2p2 - 1.0/18.0*vetU0_i0_i1m2_i2m1 + (1.0/144.0)*vetU0_i0_i1m2_i2m2 + (1.0/18.0)*vetU0_i0_i1m2_i2p1 - 1.0/144.0*vetU0_i0_i1m2_i2p2 - 4.0/9.0*vetU0_i0_i1p1_i2m1 + (1.0/18.0)*vetU0_i0_i1p1_i2m2 + (4.0/9.0)*vetU0_i0_i1p1_i2p1 - 1.0/18.0*vetU0_i0_i1p1_i2p2 + (1.0/18.0)*vetU0_i0_i1p2_i2m1 - 1.0/144.0*vetU0_i0_i1p2_i2m2 - 1.0/18.0*vetU0_i0_i1p2_i2p1 + (1.0/144.0)*vetU0_i0_i1p2_i2p2);
   const double vetU_dDD022 = tmpFD30*(tmpFD101 - tmpFD87 + tmpFD88 + (4.0/3.0)*vetU0_i0_i1_i2m1 + (4.0/3.0)*vetU0_i0_i1_i2p1);
   const double vetU_dDD100 = tmpFD24*(tmpFD102 - tmpFD89 + tmpFD90 + (4.0/3.0)*vetU1_i0m1_i1_i2 + (4.0/3.0)*vetU1_i0p1_i1_i2);
   const double vetU_dDD101 = tmpFD26*((4.0/9.0)*vetU1_i0m1_i1m1_i2 - 1.0/18.0*vetU1_i0m1_i1m2_i2 - 4.0/9.0*vetU1_i0m1_i1p1_i2 + (1.0/18.0)*vetU1_i0m1_i1p2_i2 - 1.0/18.0*vetU1_i0m2_i1m1_i2 + (1.0/144.0)*vetU1_i0m2_i1m2_i2 + (1.0/18.0)*vetU1_i0m2_i1p1_i2 - 1.0/144.0*vetU1_i0m2_i1p2_i2 - 4.0/9.0*vetU1_i0p1_i1m1_i2 + (1.0/18.0)*vetU1_i0p1_i1m2_i2 + (4.0/9.0)*vetU1_i0p1_i1p1_i2 - 1.0/18.0*vetU1_i0p1_i1p2_i2 + (1.0/18.0)*vetU1_i0p2_i1m1_i2 - 1.0/144.0*vetU1_i0p2_i1m2_i2 - 1.0/18.0*vetU1_i0p2_i1p1_i2 + (1.0/144.0)*vetU1_i0p2_i1p2_i2);
   const double vetU_dDD102 = tmpFD27*((4.0/9.0)*vetU1_i0m1_i1_i2m1 - 1.0/18.0*vetU1_i0m1_i1_i2m2 - 4.0/9.0*vetU1_i0m1_i1_i2p1 + (1.0/18.0)*vetU1_i0m1_i1_i2p2 - 1.0/18.0*vetU1_i0m2_i1_i2m1 + (1.0/144.0)*vetU1_i0m2_i1_i2m2 + (1.0/18.0)*vetU1_i0m2_i1_i2p1 - 1.0/144.0*vetU1_i0m2_i1_i2p2 - 4.0/9.0*vetU1_i0p1_i1_i2m1 + (1.0/18.0)*vetU1_i0p1_i1_i2m2 + (4.0/9.0)*vetU1_i0p1_i1_i2p1 - 1.0/18.0*vetU1_i0p1_i1_i2p2 + (1.0/18.0)*vetU1_i0p2_i1_i2m1 - 1.0/144.0*vetU1_i0p2_i1_i2m2 - 1.0/18.0*vetU1_i0p2_i1_i2p1 + (1.0/144.0)*vetU1_i0p2_i1_i2p2);
   const double vetU_dDD111 = tmpFD28*(tmpFD102 - tmpFD91 + tmpFD92 + (4.0/3.0)*vetU1_i0_i1m1_i2 + (4.0/3.0)*vetU1_i0_i1p1_i2);
   const double vetU_dDD112 = tmpFD29*((4.0/9.0)*vetU1_i0_i1m1_i2m1 - 1.0/18.0*vetU1_i0_i1m1_i2m2 - 4.0/9.0*vetU1_i0_i1m1_i2p1 + (1.0/18.0)*vetU1_i0_i1m1_i2p2 - 1.0/18.0*vetU1_i0_i1m2_i2m1 + (1.0/144.0)*vetU1_i0_i1m2_i2m2 + (1.0/18.0)*vetU1_i0_i1m2_i2p1 - 1.0/144.0*vetU1_i0_i1m2_i2p2 - 4.0/9.0*vetU1_i0_i1p1_i2m1 + (1.0/18.0)*vetU1_i0_i1p1_i2m2 + (4.0/9.0)*vetU1_i0_i1p1_i2p1 - 1.0/18.0*vetU1_i0_i1p1_i2p2 + (1.0/18.0)*vetU1_i0_i1p2_i2m1 - 1.0/144.0*vetU1_i0_i1p2_i2m2 - 1.0/18.0*vetU1_i0_i1p2_i2p1 + (1.0/144.0)*vetU1_i0_i1p2_i2p2);
   const double vetU_dDD122 = tmpFD30*(tmpFD102 - tmpFD93 + tmpFD94 + (4.0/3.0)*vetU1_i0_i1_i2m1 + (4.0/3.0)*vetU1_i0_i1_i2p1);
   const double vetU_dDD200 = tmpFD24*(tmpFD103 - tmpFD95 + tmpFD96 + (4.0/3.0)*vetU2_i0m1_i1_i2 + (4.0/3.0)*vetU2_i0p1_i1_i2);
   const double vetU_dDD201 = tmpFD26*((4.0/9.0)*vetU2_i0m1_i1m1_i2 - 1.0/18.0*vetU2_i0m1_i1m2_i2 - 4.0/9.0*vetU2_i0m1_i1p1_i2 + (1.0/18.0)*vetU2_i0m1_i1p2_i2 - 1.0/18.0*vetU2_i0m2_i1m1_i2 + (1.0/144.0)*vetU2_i0m2_i1m2_i2 + (1.0/18.0)*vetU2_i0m2_i1p1_i2 - 1.0/144.0*vetU2_i0m2_i1p2_i2 - 4.0/9.0*vetU2_i0p1_i1m1_i2 + (1.0/18.0)*vetU2_i0p1_i1m2_i2 + (4.0/9.0)*vetU2_i0p1_i1p1_i2 - 1.0/18.0*vetU2_i0p1_i1p2_i2 + (1.0/18.0)*vetU2_i0p2_i1m1_i2 - 1.0/144.0*vetU2_i0p2_i1m2_i2 - 1.0/18.0*vetU2_i0p2_i1p1_i2 + (1.0/144.0)*vetU2_i0p2_i1p2_i2);
   const double vetU_dDD202 = tmpFD27*((4.0/9.0)*vetU2_i0m1_i1_i2m1 - 1.0/18.0*vetU2_i0m1_i1_i2m2 - 4.0/9.0*vetU2_i0m1_i1_i2p1 + (1.0/18.0)*vetU2_i0m1_i1_i2p2 - 1.0/18.0*vetU2_i0m2_i1_i2m1 + (1.0/144.0)*vetU2_i0m2_i1_i2m2 + (1.0/18.0)*vetU2_i0m2_i1_i2p1 - 1.0/144.0*vetU2_i0m2_i1_i2p2 - 4.0/9.0*vetU2_i0p1_i1_i2m1 + (1.0/18.0)*vetU2_i0p1_i1_i2m2 + (4.0/9.0)*vetU2_i0p1_i1_i2p1 - 1.0/18.0*vetU2_i0p1_i1_i2p2 + (1.0/18.0)*vetU2_i0p2_i1_i2m1 - 1.0/144.0*vetU2_i0p2_i1_i2m2 - 1.0/18.0*vetU2_i0p2_i1_i2p1 + (1.0/144.0)*vetU2_i0p2_i1_i2p2);
   const double vetU_dDD211 = tmpFD28*(tmpFD103 - tmpFD97 + tmpFD98 + (4.0/3.0)*vetU2_i0_i1m1_i2 + (4.0/3.0)*vetU2_i0_i1p1_i2);
   const double vetU_dDD212 = tmpFD29*((4.0/9.0)*vetU2_i0_i1m1_i2m1 - 1.0/18.0*vetU2_i0_i1m1_i2m2 - 4.0/9.0*vetU2_i0_i1m1_i2p1 + (1.0/18.0)*vetU2_i0_i1m1_i2p2 - 1.0/18.0*vetU2_i0_i1m2_i2m1 + (1.0/144.0)*vetU2_i0_i1m2_i2m2 + (1.0/18.0)*vetU2_i0_i1m2_i2p1 - 1.0/144.0*vetU2_i0_i1m2_i2p2 - 4.0/9.0*vetU2_i0_i1p1_i2m1 + (1.0/18.0)*vetU2_i0_i1p1_i2m2 + (4.0/9.0)*vetU2_i0_i1p1_i2p1 - 1.0/18.0*vetU2_i0_i1p1_i2p2 + (1.0/18.0)*vetU2_i0_i1p2_i2m1 - 1.0/144.0*vetU2_i0_i1p2_i2m2 - 1.0/18.0*vetU2_i0_i1p2_i2p1 + (1.0/144.0)*vetU2_i0_i1p2_i2p2);
   const double vetU_dDD222 = tmpFD30*(tmpFD100 + tmpFD103 - tmpFD99 + (4.0/3.0)*vetU2_i0_i1_i2m1 + (4.0/3.0)*vetU2_i0_i1_i2p1);
   const double vetU_dKOD00 = invdx0*(tmpFD104 + (15.0/64.0)*vetU0_i0m1_i1_i2 - 3.0/32.0*vetU0_i0m2_i1_i2 + (1.0/64.0)*vetU0_i0m3_i1_i2 + (15.0/64.0)*vetU0_i0p1_i1_i2 - 3.0/32.0*vetU0_i0p2_i1_i2 + (1.0/64.0)*vetU0_i0p3_i1_i2);
   const double vetU_dKOD01 = invdx1*(tmpFD104 + (15.0/64.0)*vetU0_i0_i1m1_i2 - 3.0/32.0*vetU0_i0_i1m2_i2 + (1.0/64.0)*vetU0_i0_i1m3_i2 + (15.0/64.0)*vetU0_i0_i1p1_i2 - 3.0/32.0*vetU0_i0_i1p2_i2 + (1.0/64.0)*vetU0_i0_i1p3_i2);
   const double vetU_dKOD02 = invdx2*(tmpFD104 + (15.0/64.0)*vetU0_i0_i1_i2m1 - 3.0/32.0*vetU0_i0_i1_i2m2 + (1.0/64.0)*vetU0_i0_i1_i2m3 + (15.0/64.0)*vetU0_i0_i1_i2p1 - 3.0/32.0*vetU0_i0_i1_i2p2 + (1.0/64.0)*vetU0_i0_i1_i2p3);
   const double vetU_dKOD10 = invdx0*(tmpFD105 + (15.0/64.0)*vetU1_i0m1_i1_i2 - 3.0/32.0*vetU1_i0m2_i1_i2 + (1.0/64.0)*vetU1_i0m3_i1_i2 + (15.0/64.0)*vetU1_i0p1_i1_i2 - 3.0/32.0*vetU1_i0p2_i1_i2 + (1.0/64.0)*vetU1_i0p3_i1_i2);
   const double vetU_dKOD11 = invdx1*(tmpFD105 + (15.0/64.0)*vetU1_i0_i1m1_i2 - 3.0/32.0*vetU1_i0_i1m2_i2 + (1.0/64.0)*vetU1_i0_i1m3_i2 + (15.0/64.0)*vetU1_i0_i1p1_i2 - 3.0/32.0*vetU1_i0_i1p2_i2 + (1.0/64.0)*vetU1_i0_i1p3_i2);
   const double vetU_dKOD12 = invdx2*(tmpFD105 + (15.0/64.0)*vetU1_i0_i1_i2m1 - 3.0/32.0*vetU1_i0_i1_i2m2 + (1.0/64.0)*vetU1_i0_i1_i2m3 + (15.0/64.0)*vetU1_i0_i1_i2p1 - 3.0/32.0*vetU1_i0_i1_i2p2 + (1.0/64.0)*vetU1_i0_i1_i2p3);
   const double vetU_dKOD20 = invdx0*(tmpFD106 + (15.0/64.0)*vetU2_i0m1_i1_i2 - 3.0/32.0*vetU2_i0m2_i1_i2 + (1.0/64.0)*vetU2_i0m3_i1_i2 + (15.0/64.0)*vetU2_i0p1_i1_i2 - 3.0/32.0*vetU2_i0p2_i1_i2 + (1.0/64.0)*vetU2_i0p3_i1_i2);
   const double vetU_dKOD21 = invdx1*(tmpFD106 + (15.0/64.0)*vetU2_i0_i1m1_i2 - 3.0/32.0*vetU2_i0_i1m2_i2 + (1.0/64.0)*vetU2_i0_i1m3_i2 + (15.0/64.0)*vetU2_i0_i1p1_i2 - 3.0/32.0*vetU2_i0_i1p2_i2 + (1.0/64.0)*vetU2_i0_i1p3_i2);
   const double vetU_dKOD22 = invdx2*(tmpFD106 + (15.0/64.0)*vetU2_i0_i1_i2m1 - 3.0/32.0*vetU2_i0_i1_i2m2 + (1.0/64.0)*vetU2_i0_i1_i2m3 + (15.0/64.0)*vetU2_i0_i1_i2p1 - 3.0/32.0*vetU2_i0_i1_i2p2 + (1.0/64.0)*vetU2_i0_i1_i2p3);
   const double UpwindAlgInputvetU_ddnD00 = invdx0*(tmpFD107 - 3.0/2.0*vetU0_i0m1_i1_i2 + (1.0/2.0)*vetU0_i0m2_i1_i2 - 1.0/12.0*vetU0_i0m3_i1_i2 + (1.0/4.0)*vetU0_i0p1_i1_i2);
   const double UpwindAlgInputvetU_ddnD01 = invdx1*(tmpFD107 - 3.0/2.0*vetU0_i0_i1m1_i2 + (1.0/2.0)*vetU0_i0_i1m2_i2 - 1.0/12.0*vetU0_i0_i1m3_i2 + (1.0/4.0)*vetU0_i0_i1p1_i2);
   const double UpwindAlgInputvetU_ddnD02 = invdx2*(tmpFD107 - 3.0/2.0*vetU0_i0_i1_i2m1 + (1.0/2.0)*vetU0_i0_i1_i2m2 - 1.0/12.0*vetU0_i0_i1_i2m3 + (1.0/4.0)*vetU0_i0_i1_i2p1);
   const double UpwindAlgInputvetU_ddnD10 = invdx0*(tmpFD108 - 3.0/2.0*vetU1_i0m1_i1_i2 + (1.0/2.0)*vetU1_i0m2_i1_i2 - 1.0/12.0*vetU1_i0m3_i1_i2 + (1.0/4.0)*vetU1_i0p1_i1_i2);
   const double UpwindAlgInputvetU_ddnD11 = invdx1*(tmpFD108 - 3.0/2.0*vetU1_i0_i1m1_i2 + (1.0/2.0)*vetU1_i0_i1m2_i2 - 1.0/12.0*vetU1_i0_i1m3_i2 + (1.0/4.0)*vetU1_i0_i1p1_i2);
   const double UpwindAlgInputvetU_ddnD12 = invdx2*(tmpFD108 - 3.0/2.0*vetU1_i0_i1_i2m1 + (1.0/2.0)*vetU1_i0_i1_i2m2 - 1.0/12.0*vetU1_i0_i1_i2m3 + (1.0/4.0)*vetU1_i0_i1_i2p1);
   const double UpwindAlgInputvetU_ddnD20 = invdx0*(tmpFD109 - 3.0/2.0*vetU2_i0m1_i1_i2 + (1.0/2.0)*vetU2_i0m2_i1_i2 - 1.0/12.0*vetU2_i0m3_i1_i2 + (1.0/4.0)*vetU2_i0p1_i1_i2);
   const double UpwindAlgInputvetU_ddnD21 = invdx1*(tmpFD109 - 3.0/2.0*vetU2_i0_i1m1_i2 + (1.0/2.0)*vetU2_i0_i1m2_i2 - 1.0/12.0*vetU2_i0_i1m3_i2 + (1.0/4.0)*vetU2_i0_i1p1_i2);
   const double UpwindAlgInputvetU_ddnD22 = invdx2*(tmpFD109 - 3.0/2.0*vetU2_i0_i1_i2m1 + (1.0/2.0)*vetU2_i0_i1_i2m2 - 1.0/12.0*vetU2_i0_i1_i2m3 + (1.0/4.0)*vetU2_i0_i1_i2p1);
   const double UpwindAlgInputvetU_dupD00 = invdx0*(tmpFD110 - 1.0/4.0*vetU0_i0m1_i1_i2 + (3.0/2.0)*vetU0_i0p1_i1_i2 - 1.0/2.0*vetU0_i0p2_i1_i2 + (1.0/12.0)*vetU0_i0p3_i1_i2);
   const double UpwindAlgInputvetU_dupD01 = invdx1*(tmpFD110 - 1.0/4.0*vetU0_i0_i1m1_i2 + (3.0/2.0)*vetU0_i0_i1p1_i2 - 1.0/2.0*vetU0_i0_i1p2_i2 + (1.0/12.0)*vetU0_i0_i1p3_i2);
   const double UpwindAlgInputvetU_dupD02 = invdx2*(tmpFD110 - 1.0/4.0*vetU0_i0_i1_i2m1 + (3.0/2.0)*vetU0_i0_i1_i2p1 - 1.0/2.0*vetU0_i0_i1_i2p2 + (1.0/12.0)*vetU0_i0_i1_i2p3);
   const double UpwindAlgInputvetU_dupD10 = invdx0*(tmpFD111 - 1.0/4.0*vetU1_i0m1_i1_i2 + (3.0/2.0)*vetU1_i0p1_i1_i2 - 1.0/2.0*vetU1_i0p2_i1_i2 + (1.0/12.0)*vetU1_i0p3_i1_i2);
   const double UpwindAlgInputvetU_dupD11 = invdx1*(tmpFD111 - 1.0/4.0*vetU1_i0_i1m1_i2 + (3.0/2.0)*vetU1_i0_i1p1_i2 - 1.0/2.0*vetU1_i0_i1p2_i2 + (1.0/12.0)*vetU1_i0_i1p3_i2);
   const double UpwindAlgInputvetU_dupD12 = invdx2*(tmpFD111 - 1.0/4.0*vetU1_i0_i1_i2m1 + (3.0/2.0)*vetU1_i0_i1_i2p1 - 1.0/2.0*vetU1_i0_i1_i2p2 + (1.0/12.0)*vetU1_i0_i1_i2p3);
   const double UpwindAlgInputvetU_dupD20 = invdx0*(tmpFD112 - 1.0/4.0*vetU2_i0m1_i1_i2 + (3.0/2.0)*vetU2_i0p1_i1_i2 - 1.0/2.0*vetU2_i0p2_i1_i2 + (1.0/12.0)*vetU2_i0p3_i1_i2);
   const double UpwindAlgInputvetU_dupD21 = invdx1*(tmpFD112 - 1.0/4.0*vetU2_i0_i1m1_i2 + (3.0/2.0)*vetU2_i0_i1p1_i2 - 1.0/2.0*vetU2_i0_i1p2_i2 + (1.0/12.0)*vetU2_i0_i1p3_i2);
   const double UpwindAlgInputvetU_dupD22 = invdx2*(tmpFD112 - 1.0/4.0*vetU2_i0_i1_i2m1 + (3.0/2.0)*vetU2_i0_i1_i2p1 - 1.0/2.0*vetU2_i0_i1_i2p2 + (1.0/12.0)*vetU2_i0_i1_i2p3);
   const double UpwindControlVectorU0 = vetU0;
   const double UpwindControlVectorU1 = vetU1;
   const double UpwindControlVectorU2 = vetU2;
   /* 
    * NRPy+ Finite Difference Code Generation, Step 2 of 3: Implement upwinding algorithm:
    */
   const double UpWind0 = UPWIND_ALG(UpwindControlVectorU0);
   const double UpWind1 = UPWIND_ALG(UpwindControlVectorU1);
   const double UpWind2 = UPWIND_ALG(UpwindControlVectorU2);
   const double aDD_dupD000 = UpWind0*(-UpwindAlgInputaDD_ddnD000 + UpwindAlgInputaDD_dupD000) + UpwindAlgInputaDD_ddnD000;
   const double aDD_dupD001 = UpWind1*(-UpwindAlgInputaDD_ddnD001 + UpwindAlgInputaDD_dupD001) + UpwindAlgInputaDD_ddnD001;
   const double aDD_dupD002 = UpWind2*(-UpwindAlgInputaDD_ddnD002 + UpwindAlgInputaDD_dupD002) + UpwindAlgInputaDD_ddnD002;
   const double aDD_dupD010 = UpWind0*(-UpwindAlgInputaDD_ddnD010 + UpwindAlgInputaDD_dupD010) + UpwindAlgInputaDD_ddnD010;
   const double aDD_dupD011 = UpWind1*(-UpwindAlgInputaDD_ddnD011 + UpwindAlgInputaDD_dupD011) + UpwindAlgInputaDD_ddnD011;
   const double aDD_dupD012 = UpWind2*(-UpwindAlgInputaDD_ddnD012 + UpwindAlgInputaDD_dupD012) + UpwindAlgInputaDD_ddnD012;
   const double aDD_dupD020 = UpWind0*(-UpwindAlgInputaDD_ddnD020 + UpwindAlgInputaDD_dupD020) + UpwindAlgInputaDD_ddnD020;
   const double aDD_dupD021 = UpWind1*(-UpwindAlgInputaDD_ddnD021 + UpwindAlgInputaDD_dupD021) + UpwindAlgInputaDD_ddnD021;
   const double aDD_dupD022 = UpWind2*(-UpwindAlgInputaDD_ddnD022 + UpwindAlgInputaDD_dupD022) + UpwindAlgInputaDD_ddnD022;
   const double aDD_dupD110 = UpWind0*(-UpwindAlgInputaDD_ddnD110 + UpwindAlgInputaDD_dupD110) + UpwindAlgInputaDD_ddnD110;
   const double aDD_dupD111 = UpWind1*(-UpwindAlgInputaDD_ddnD111 + UpwindAlgInputaDD_dupD111) + UpwindAlgInputaDD_ddnD111;
   const double aDD_dupD112 = UpWind2*(-UpwindAlgInputaDD_ddnD112 + UpwindAlgInputaDD_dupD112) + UpwindAlgInputaDD_ddnD112;
   const double aDD_dupD120 = UpWind0*(-UpwindAlgInputaDD_ddnD120 + UpwindAlgInputaDD_dupD120) + UpwindAlgInputaDD_ddnD120;
   const double aDD_dupD121 = UpWind1*(-UpwindAlgInputaDD_ddnD121 + UpwindAlgInputaDD_dupD121) + UpwindAlgInputaDD_ddnD121;
   const double aDD_dupD122 = UpWind2*(-UpwindAlgInputaDD_ddnD122 + UpwindAlgInputaDD_dupD122) + UpwindAlgInputaDD_ddnD122;
   const double aDD_dupD220 = UpWind0*(-UpwindAlgInputaDD_ddnD220 + UpwindAlgInputaDD_dupD220) + UpwindAlgInputaDD_ddnD220;
   const double aDD_dupD221 = UpWind1*(-UpwindAlgInputaDD_ddnD221 + UpwindAlgInputaDD_dupD221) + UpwindAlgInputaDD_ddnD221;
   const double aDD_dupD222 = UpWind2*(-UpwindAlgInputaDD_ddnD222 + UpwindAlgInputaDD_dupD222) + UpwindAlgInputaDD_ddnD222;
   const double alpha_dupD0 = UpWind0*(-UpwindAlgInputalpha_ddnD0 + UpwindAlgInputalpha_dupD0) + UpwindAlgInputalpha_ddnD0;
   const double alpha_dupD1 = UpWind1*(-UpwindAlgInputalpha_ddnD1 + UpwindAlgInputalpha_dupD1) + UpwindAlgInputalpha_ddnD1;
   const double alpha_dupD2 = UpWind2*(-UpwindAlgInputalpha_ddnD2 + UpwindAlgInputalpha_dupD2) + UpwindAlgInputalpha_ddnD2;
   const double betU_dupD00 = UpWind0*(-UpwindAlgInputbetU_ddnD00 + UpwindAlgInputbetU_dupD00) + UpwindAlgInputbetU_ddnD00;
   const double betU_dupD01 = UpWind1*(-UpwindAlgInputbetU_ddnD01 + UpwindAlgInputbetU_dupD01) + UpwindAlgInputbetU_ddnD01;
   const double betU_dupD02 = UpWind2*(-UpwindAlgInputbetU_ddnD02 + UpwindAlgInputbetU_dupD02) + UpwindAlgInputbetU_ddnD02;
   const double betU_dupD10 = UpWind0*(-UpwindAlgInputbetU_ddnD10 + UpwindAlgInputbetU_dupD10) + UpwindAlgInputbetU_ddnD10;
   const double betU_dupD11 = UpWind1*(-UpwindAlgInputbetU_ddnD11 + UpwindAlgInputbetU_dupD11) + UpwindAlgInputbetU_ddnD11;
   const double betU_dupD12 = UpWind2*(-UpwindAlgInputbetU_ddnD12 + UpwindAlgInputbetU_dupD12) + UpwindAlgInputbetU_ddnD12;
   const double betU_dupD20 = UpWind0*(-UpwindAlgInputbetU_ddnD20 + UpwindAlgInputbetU_dupD20) + UpwindAlgInputbetU_ddnD20;
   const double betU_dupD21 = UpWind1*(-UpwindAlgInputbetU_ddnD21 + UpwindAlgInputbetU_dupD21) + UpwindAlgInputbetU_ddnD21;
   const double betU_dupD22 = UpWind2*(-UpwindAlgInputbetU_ddnD22 + UpwindAlgInputbetU_dupD22) + UpwindAlgInputbetU_ddnD22;
   const double cf_dupD0 = UpWind0*(-UpwindAlgInputcf_ddnD0 + UpwindAlgInputcf_dupD0) + UpwindAlgInputcf_ddnD0;
   const double cf_dupD1 = UpWind1*(-UpwindAlgInputcf_ddnD1 + UpwindAlgInputcf_dupD1) + UpwindAlgInputcf_ddnD1;
   const double cf_dupD2 = UpWind2*(-UpwindAlgInputcf_ddnD2 + UpwindAlgInputcf_dupD2) + UpwindAlgInputcf_ddnD2;
   const double hDD_dupD000 = UpWind0*(-UpwindAlgInputhDD_ddnD000 + UpwindAlgInputhDD_dupD000) + UpwindAlgInputhDD_ddnD000;
   const double hDD_dupD001 = UpWind1*(-UpwindAlgInputhDD_ddnD001 + UpwindAlgInputhDD_dupD001) + UpwindAlgInputhDD_ddnD001;
   const double hDD_dupD002 = UpWind2*(-UpwindAlgInputhDD_ddnD002 + UpwindAlgInputhDD_dupD002) + UpwindAlgInputhDD_ddnD002;
   const double hDD_dupD010 = UpWind0*(-UpwindAlgInputhDD_ddnD010 + UpwindAlgInputhDD_dupD010) + UpwindAlgInputhDD_ddnD010;
   const double hDD_dupD011 = UpWind1*(-UpwindAlgInputhDD_ddnD011 + UpwindAlgInputhDD_dupD011) + UpwindAlgInputhDD_ddnD011;
   const double hDD_dupD012 = UpWind2*(-UpwindAlgInputhDD_ddnD012 + UpwindAlgInputhDD_dupD012) + UpwindAlgInputhDD_ddnD012;
   const double hDD_dupD020 = UpWind0*(-UpwindAlgInputhDD_ddnD020 + UpwindAlgInputhDD_dupD020) + UpwindAlgInputhDD_ddnD020;
   const double hDD_dupD021 = UpWind1*(-UpwindAlgInputhDD_ddnD021 + UpwindAlgInputhDD_dupD021) + UpwindAlgInputhDD_ddnD021;
   const double hDD_dupD022 = UpWind2*(-UpwindAlgInputhDD_ddnD022 + UpwindAlgInputhDD_dupD022) + UpwindAlgInputhDD_ddnD022;
   const double hDD_dupD110 = UpWind0*(-UpwindAlgInputhDD_ddnD110 + UpwindAlgInputhDD_dupD110) + UpwindAlgInputhDD_ddnD110;
   const double hDD_dupD111 = UpWind1*(-UpwindAlgInputhDD_ddnD111 + UpwindAlgInputhDD_dupD111) + UpwindAlgInputhDD_ddnD111;
   const double hDD_dupD112 = UpWind2*(-UpwindAlgInputhDD_ddnD112 + UpwindAlgInputhDD_dupD112) + UpwindAlgInputhDD_ddnD112;
   const double hDD_dupD120 = UpWind0*(-UpwindAlgInputhDD_ddnD120 + UpwindAlgInputhDD_dupD120) + UpwindAlgInputhDD_ddnD120;
   const double hDD_dupD121 = UpWind1*(-UpwindAlgInputhDD_ddnD121 + UpwindAlgInputhDD_dupD121) + UpwindAlgInputhDD_ddnD121;
   const double hDD_dupD122 = UpWind2*(-UpwindAlgInputhDD_ddnD122 + UpwindAlgInputhDD_dupD122) + UpwindAlgInputhDD_ddnD122;
   const double hDD_dupD220 = UpWind0*(-UpwindAlgInputhDD_ddnD220 + UpwindAlgInputhDD_dupD220) + UpwindAlgInputhDD_ddnD220;
   const double hDD_dupD221 = UpWind1*(-UpwindAlgInputhDD_ddnD221 + UpwindAlgInputhDD_dupD221) + UpwindAlgInputhDD_ddnD221;
   const double hDD_dupD222 = UpWind2*(-UpwindAlgInputhDD_ddnD222 + UpwindAlgInputhDD_dupD222) + UpwindAlgInputhDD_ddnD222;
   const double lambdaU_dupD00 = UpWind0*(-UpwindAlgInputlambdaU_ddnD00 + UpwindAlgInputlambdaU_dupD00) + UpwindAlgInputlambdaU_ddnD00;
   const double lambdaU_dupD01 = UpWind1*(-UpwindAlgInputlambdaU_ddnD01 + UpwindAlgInputlambdaU_dupD01) + UpwindAlgInputlambdaU_ddnD01;
   const double lambdaU_dupD02 = UpWind2*(-UpwindAlgInputlambdaU_ddnD02 + UpwindAlgInputlambdaU_dupD02) + UpwindAlgInputlambdaU_ddnD02;
   const double lambdaU_dupD10 = UpWind0*(-UpwindAlgInputlambdaU_ddnD10 + UpwindAlgInputlambdaU_dupD10) + UpwindAlgInputlambdaU_ddnD10;
   const double lambdaU_dupD11 = UpWind1*(-UpwindAlgInputlambdaU_ddnD11 + UpwindAlgInputlambdaU_dupD11) + UpwindAlgInputlambdaU_ddnD11;
   const double lambdaU_dupD12 = UpWind2*(-UpwindAlgInputlambdaU_ddnD12 + UpwindAlgInputlambdaU_dupD12) + UpwindAlgInputlambdaU_ddnD12;
   const double lambdaU_dupD20 = UpWind0*(-UpwindAlgInputlambdaU_ddnD20 + UpwindAlgInputlambdaU_dupD20) + UpwindAlgInputlambdaU_ddnD20;
   const double lambdaU_dupD21 = UpWind1*(-UpwindAlgInputlambdaU_ddnD21 + UpwindAlgInputlambdaU_dupD21) + UpwindAlgInputlambdaU_ddnD21;
   const double lambdaU_dupD22 = UpWind2*(-UpwindAlgInputlambdaU_ddnD22 + UpwindAlgInputlambdaU_dupD22) + UpwindAlgInputlambdaU_ddnD22;
   const double trK_dupD0 = UpWind0*(-UpwindAlgInputtrK_ddnD0 + UpwindAlgInputtrK_dupD0) + UpwindAlgInputtrK_ddnD0;
   const double trK_dupD1 = UpWind1*(-UpwindAlgInputtrK_ddnD1 + UpwindAlgInputtrK_dupD1) + UpwindAlgInputtrK_ddnD1;
   const double trK_dupD2 = UpWind2*(-UpwindAlgInputtrK_ddnD2 + UpwindAlgInputtrK_dupD2) + UpwindAlgInputtrK_ddnD2;
   const double vetU_dupD00 = UpWind0*(-UpwindAlgInputvetU_ddnD00 + UpwindAlgInputvetU_dupD00) + UpwindAlgInputvetU_ddnD00;
   const double vetU_dupD01 = UpWind1*(-UpwindAlgInputvetU_ddnD01 + UpwindAlgInputvetU_dupD01) + UpwindAlgInputvetU_ddnD01;
   const double vetU_dupD02 = UpWind2*(-UpwindAlgInputvetU_ddnD02 + UpwindAlgInputvetU_dupD02) + UpwindAlgInputvetU_ddnD02;
   const double vetU_dupD10 = UpWind0*(-UpwindAlgInputvetU_ddnD10 + UpwindAlgInputvetU_dupD10) + UpwindAlgInputvetU_ddnD10;
   const double vetU_dupD11 = UpWind1*(-UpwindAlgInputvetU_ddnD11 + UpwindAlgInputvetU_dupD11) + UpwindAlgInputvetU_ddnD11;
   const double vetU_dupD12 = UpWind2*(-UpwindAlgInputvetU_ddnD12 + UpwindAlgInputvetU_dupD12) + UpwindAlgInputvetU_ddnD12;
   const double vetU_dupD20 = UpWind0*(-UpwindAlgInputvetU_ddnD20 + UpwindAlgInputvetU_dupD20) + UpwindAlgInputvetU_ddnD20;
   const double vetU_dupD21 = UpWind1*(-UpwindAlgInputvetU_ddnD21 + UpwindAlgInputvetU_dupD21) + UpwindAlgInputvetU_ddnD21;
   const double vetU_dupD22 = UpWind2*(-UpwindAlgInputvetU_ddnD22 + UpwindAlgInputvetU_dupD22) + UpwindAlgInputvetU_ddnD22;
   /* 
    * NRPy+ Finite Difference Code Generation, Step 3 of 3: Evaluate SymPy expressions and write to main memory:
    */
   const double tmp0 = 2*vetU_dD00;
   const double tmp1 = 2*aDD01;
   const double tmp2 = 2*aDD02;
   const double tmp3 = alpha*trK;
   const double tmp4 = vetU_dD00 + vetU_dD11 + vetU_dD22;
   const double tmp5 = (2.0/3.0)*tmp4;
   const double tmp6 = hDD02*hDD12;
   const double tmp7 = 2*hDD01;
   const double tmp8 = ((hDD01)*(hDD01));
   const double tmp9 = hDD22 + 1;
   const double tmp10 = ((hDD02)*(hDD02));
   const double tmp11 = hDD11 + 1;
   const double tmp12 = ((hDD12)*(hDD12));
   const double tmp13 = hDD00 + 1;
   const double tmp14 = tmp11*tmp9;
   const double tmp15 = -tmp10*tmp11 - tmp12*tmp13 + tmp13*tmp14 + tmp6*tmp7 - tmp8*tmp9;
   const double tmp16 = (1.0/(tmp15));
   const double tmp17 = -hDD01*tmp9 + tmp6;
   const double tmp18 = tmp16*tmp17;
   const double tmp19 = aDD01*tmp18;
   const double tmp20 = hDD01*hDD12 - hDD02*tmp11;
   const double tmp21 = aDD02*tmp16;
   const double tmp22 = tmp20*tmp21;
   const double tmp23 = -tmp12 + tmp14;
   const double tmp24 = tmp16*tmp23;
   const double tmp25 = aDD00*tmp24;
   const double tmp26 = 2*alpha;
   const double tmp27 = aDD00*tmp26;
   const double tmp28 = hDD01*hDD02 - hDD12*tmp13;
   const double tmp29 = -tmp10 + tmp13*tmp9;
   const double tmp30 = tmp16*tmp29;
   const double tmp31 = aDD01*tmp26;
   const double tmp32 = tmp16*tmp20;
   const double tmp33 = tmp16*tmp28;
   const double tmp34 = tmp11*tmp13 - tmp8;
   const double tmp35 = tmp16*tmp34;
   const double tmp36 = aDD02*tmp26;
   const double tmp37 = ((cf)*(cf));
   const double tmp38 = (1.0/(cf));
   const double tmp39 = cf_dD2*tmp38;
   const double tmp40 = -alpha_dD1*tmp39;
   const double tmp41 = alpha_dD2*tmp38;
   const double tmp42 = -cf_dD1*tmp41;
   const double tmp43 = alpha/tmp37;
   const double tmp44 = cf_dD2*tmp43;
   const double tmp45 = (1.0/2.0)*hDD_dD112;
   const double tmp46 = tmp18*tmp45;
   const double tmp47 = (1.0/2.0)*hDD_dD221;
   const double tmp48 = tmp32*tmp47;
   const double tmp49 = (1.0/2.0)*hDD_dD012 + (1.0/2.0)*hDD_dD021 - 1.0/2.0*hDD_dD120;
   const double tmp50 = tmp24*tmp49;
   const double tmp51 = -tmp46 - tmp48 - tmp50;
   const double tmp52 = alpha_dD0*tmp51;
   const double tmp53 = tmp33*tmp47;
   const double tmp54 = tmp30*tmp45;
   const double tmp55 = tmp18*tmp49;
   const double tmp56 = -tmp53 - tmp54 - tmp55;
   const double tmp57 = alpha_dD1*tmp56;
   const double tmp58 = tmp33*tmp45;
   const double tmp59 = tmp35*tmp47;
   const double tmp60 = tmp32*tmp49;
   const double tmp61 = -tmp58 - tmp59 - tmp60;
   const double tmp62 = alpha_dD2*tmp61;
   const double tmp63 = (1.0/2.0)*tmp38;
   const double tmp64 = cf_dD0*tmp63;
   const double tmp65 = cf_dD1*tmp63;
   const double tmp66 = cf_dD2*tmp63;
   const double tmp67 = RbarDD12*alpha - alpha_dDD12 + cf_dD1*tmp44 - tmp26*(-tmp51*tmp64 - tmp56*tmp65 - tmp61*tmp66 + tmp63*(cf_dD1*tmp39 - cf_dDD12)) + tmp40 + tmp42 - tmp52 - tmp57 - tmp62;
   const double tmp68 = 2*tmp33;
   const double tmp69 = -alpha_dD0*tmp39;
   const double tmp70 = -cf_dD0*tmp41;
   const double tmp71 = (1.0/2.0)*hDD_dD220;
   const double tmp72 = tmp32*tmp71;
   const double tmp73 = (1.0/2.0)*hDD_dD002;
   const double tmp74 = tmp24*tmp73;
   const double tmp75 = (1.0/2.0)*hDD_dD012 - 1.0/2.0*hDD_dD021 + (1.0/2.0)*hDD_dD120;
   const double tmp76 = tmp18*tmp75;
   const double tmp77 = -tmp72 - tmp74 - tmp76;
   const double tmp78 = alpha_dD0*tmp77;
   const double tmp79 = tmp18*tmp73;
   const double tmp80 = tmp33*tmp71;
   const double tmp81 = tmp30*tmp75;
   const double tmp82 = -tmp79 - tmp80 - tmp81;
   const double tmp83 = alpha_dD1*tmp82;
   const double tmp84 = tmp32*tmp73;
   const double tmp85 = tmp35*tmp71;
   const double tmp86 = tmp33*tmp75;
   const double tmp87 = -tmp84 - tmp85 - tmp86;
   const double tmp88 = alpha_dD2*tmp87;
   const double tmp89 = RbarDD02*alpha - alpha_dDD02 + cf_dD0*tmp44 - tmp26*(tmp63*(cf_dD0*tmp39 - cf_dDD02) - tmp64*tmp77 - tmp65*tmp82 - tmp66*tmp87) + tmp69 + tmp70 - tmp78 - tmp83 - tmp88;
   const double tmp90 = 2*tmp32;
   const double tmp91 = cf_dD1*tmp38;
   const double tmp92 = -alpha_dD0*tmp91;
   const double tmp93 = cf_dD0*tmp38;
   const double tmp94 = -alpha_dD1*tmp93;
   const double tmp95 = (1.0/2.0)*hDD_dD110;
   const double tmp96 = tmp18*tmp95;
   const double tmp97 = (1.0/2.0)*hDD_dD001;
   const double tmp98 = tmp24*tmp97;
   const double tmp99 = -1.0/2.0*hDD_dD012 + (1.0/2.0)*hDD_dD021 + (1.0/2.0)*hDD_dD120;
   const double tmp100 = tmp32*tmp99;
   const double tmp101 = -tmp100 - tmp96 - tmp98;
   const double tmp102 = alpha_dD0*tmp101;
   const double tmp103 = tmp18*tmp97;
   const double tmp104 = tmp30*tmp95;
   const double tmp105 = tmp33*tmp99;
   const double tmp106 = -tmp103 - tmp104 - tmp105;
   const double tmp107 = alpha_dD1*tmp106;
   const double tmp108 = tmp32*tmp97;
   const double tmp109 = tmp33*tmp95;
   const double tmp110 = tmp35*tmp99;
   const double tmp111 = -tmp108 - tmp109 - tmp110;
   const double tmp112 = alpha_dD2*tmp111;
   const double tmp113 = RbarDD01*alpha - alpha_dDD01 + cf_dD0*cf_dD1*tmp43 - tmp102 - tmp107 - tmp112 - tmp26*(-tmp101*tmp64 - tmp106*tmp65 - tmp111*tmp66 + tmp63*(cf_dD0*tmp91 - cf_dDD01)) + tmp92 + tmp94;
   const double tmp114 = 2*tmp18;
   const double tmp115 = alpha_dD2*tmp39;
   const double tmp116 = ((cf_dD2)*(cf_dD2));
   const double tmp117 = (1.0/2.0)*hDD_dD222;
   const double tmp118 = tmp117*tmp32;
   const double tmp119 = hDD_dD122 - 1.0/2.0*hDD_dD221;
   const double tmp120 = tmp119*tmp18;
   const double tmp121 = hDD_dD022 - 1.0/2.0*hDD_dD220;
   const double tmp122 = tmp121*tmp24;
   const double tmp123 = -tmp118 - tmp120 - tmp122;
   const double tmp124 = alpha_dD0*tmp123;
   const double tmp125 = tmp117*tmp33;
   const double tmp126 = tmp121*tmp18;
   const double tmp127 = tmp119*tmp30;
   const double tmp128 = -tmp125 - tmp126 - tmp127;
   const double tmp129 = alpha_dD1*tmp128;
   const double tmp130 = tmp117*tmp35;
   const double tmp131 = tmp121*tmp32;
   const double tmp132 = tmp119*tmp33;
   const double tmp133 = -tmp130 - tmp131 - tmp132;
   const double tmp134 = alpha_dD2*tmp133;
   const double tmp135 = RbarDD22*alpha - alpha_dDD22 - 2*tmp115 + tmp116*tmp43 - tmp124 - tmp129 - tmp134 - tmp26*(-tmp123*tmp64 - tmp128*tmp65 - tmp133*tmp66 + tmp63*(-cf_dDD22 + tmp116*tmp38));
   const double tmp136 = alpha_dD1*tmp91;
   const double tmp137 = ((cf_dD1)*(cf_dD1));
   const double tmp138 = (1.0/2.0)*hDD_dD111;
   const double tmp139 = tmp138*tmp18;
   const double tmp140 = -1.0/2.0*hDD_dD112 + hDD_dD121;
   const double tmp141 = tmp140*tmp32;
   const double tmp142 = hDD_dD011 - 1.0/2.0*hDD_dD110;
   const double tmp143 = tmp142*tmp24;
   const double tmp144 = -tmp139 - tmp141 - tmp143;
   const double tmp145 = alpha_dD0*tmp144;
   const double tmp146 = tmp138*tmp30;
   const double tmp147 = tmp142*tmp18;
   const double tmp148 = tmp140*tmp33;
   const double tmp149 = -tmp146 - tmp147 - tmp148;
   const double tmp150 = alpha_dD1*tmp149;
   const double tmp151 = tmp138*tmp33;
   const double tmp152 = tmp142*tmp32;
   const double tmp153 = tmp140*tmp35;
   const double tmp154 = -tmp151 - tmp152 - tmp153;
   const double tmp155 = alpha_dD2*tmp154;
   const double tmp156 = RbarDD11*alpha - alpha_dDD11 - 2*tmp136 + tmp137*tmp43 - tmp145 - tmp150 - tmp155 - tmp26*(-tmp144*tmp64 - tmp149*tmp65 - tmp154*tmp66 + tmp63*(-cf_dDD11 + tmp137*tmp38));
   const double tmp157 = alpha_dD0*tmp93;
   const double tmp158 = ((cf_dD0)*(cf_dD0));
   const double tmp159 = (1.0/2.0)*hDD_dD000;
   const double tmp160 = tmp159*tmp24;
   const double tmp161 = -1.0/2.0*hDD_dD001 + hDD_dD010;
   const double tmp162 = tmp161*tmp18;
   const double tmp163 = -1.0/2.0*hDD_dD002 + hDD_dD020;
   const double tmp164 = tmp163*tmp32;
   const double tmp165 = -tmp160 - tmp162 - tmp164;
   const double tmp166 = alpha_dD0*tmp165;
   const double tmp167 = tmp159*tmp18;
   const double tmp168 = tmp163*tmp33;
   const double tmp169 = tmp161*tmp30;
   const double tmp170 = -tmp167 - tmp168 - tmp169;
   const double tmp171 = alpha_dD1*tmp170;
   const double tmp172 = tmp159*tmp32;
   const double tmp173 = tmp161*tmp33;
   const double tmp174 = tmp163*tmp35;
   const double tmp175 = -tmp172 - tmp173 - tmp174;
   const double tmp176 = alpha_dD2*tmp175;
   const double tmp177 = RbarDD00*alpha - alpha_dDD00 - 2*tmp157 + tmp158*tmp43 - tmp166 - tmp171 - tmp176 - tmp26*(-tmp165*tmp64 - tmp170*tmp65 - tmp175*tmp66 + tmp63*(-cf_dDD00 + tmp158*tmp38));
   const double tmp178 = tmp113*tmp114 + tmp135*tmp35 + tmp156*tmp30 + tmp177*tmp24 + tmp67*tmp68 + tmp89*tmp90;
   const double tmp179 = aDD01*tmp24 + aDD11*tmp18 + aDD12*tmp32;
   const double tmp180 = aDD12*tmp33;
   const double tmp181 = aDD11*tmp30;
   const double tmp182 = tmp180 + tmp181 + tmp19;
   const double tmp183 = aDD01*tmp32 + aDD11*tmp33 + aDD12*tmp35;
   const double tmp184 = (1.0/3.0)*tmp178;
   const double tmp185 = aDD02*tmp24 + aDD12*tmp18 + aDD22*tmp32;
   const double tmp186 = aDD02*tmp18 + aDD12*tmp30 + aDD22*tmp33;
   const double tmp187 = aDD22*tmp35;
   const double tmp188 = tmp180 + tmp187 + tmp22;
   const double tmp189 = 2*vetU_dD11;
   const double tmp190 = 2*aDD12;
   const double tmp191 = aDD11*tmp26;
   const double tmp192 = aDD12*tmp26;
   const double tmp193 = 2*vetU_dD22;
   const double tmp194 = aDD22*tmp26;
   const double tmp195 = lambdaU0*vetU_dD00;
   const double tmp196 = lambdaU1*vetU_dD01;
   const double tmp197 = lambdaU2*vetU_dD02;
   const double tmp198 = (3.0/2.0)*tmp18;
   const double tmp199 = (3.0/2.0)*tmp32;
   const double tmp200 = (3.0/2.0)*tmp33;
   const double tmp201 = alpha*trK_dD1;
   const double tmp202 = alpha*trK_dD2;
   const double tmp203 = tmp24*vetU_dDD000;
   const double tmp204 = tmp30*vetU_dDD011;
   const double tmp205 = tmp35*vetU_dDD022;
   const double tmp206 = vetU_dDD002 + vetU_dDD112 + vetU_dDD222;
   const double tmp207 = (1.0/4.0)*tmp206;
   const double tmp208 = vetU_dDD001 + vetU_dDD111 + vetU_dDD212;
   const double tmp209 = (1.0/4.0)*tmp208;
   const double tmp210 = alpha*trK_dD0;
   const double tmp211 = tmp210*tmp24;
   const double tmp212 = vetU_dDD000 + vetU_dDD101 + vetU_dDD202;
   const double tmp213 = (1.0/4.0)*tmp212;
   const double tmp214 = 3*alpha;
   const double tmp215 = alpha_dD0 + tmp214*tmp93;
   const double tmp216 = (1.0/((tmp15)*(tmp15)));
   const double tmp217 = ((tmp17)*(tmp17))*tmp216;
   const double tmp218 = aDD11*tmp217;
   const double tmp219 = ((tmp20)*(tmp20))*tmp216;
   const double tmp220 = aDD22*tmp219;
   const double tmp221 = aDD00*tmp216;
   const double tmp222 = tmp221*((tmp23)*(tmp23));
   const double tmp223 = tmp20*tmp216;
   const double tmp224 = tmp17*tmp223;
   const double tmp225 = 4*aDD12;
   const double tmp226 = tmp216*tmp23;
   const double tmp227 = aDD01*tmp226;
   const double tmp228 = aDD02*tmp226;
   const double tmp229 = tmp215*(-4*tmp17*tmp227 - 4*tmp20*tmp228 - 2*tmp218 - 2*tmp220 - 2*tmp222 - tmp224*tmp225);
   const double tmp230 = tmp160 + tmp162 + tmp164;
   const double tmp231 = tmp1*tmp226;
   const double tmp232 = tmp2*tmp226;
   const double tmp233 = tmp17*tmp231 + tmp190*tmp224 + tmp20*tmp232 + tmp218 + tmp220 + tmp222;
   const double tmp234 = alpha*tmp233;
   const double tmp235 = (3.0/2.0)*tmp234;
   const double tmp236 = tmp139 + tmp141 + tmp143;
   const double tmp237 = aDD00*tmp217;
   const double tmp238 = tmp216*((tmp28)*(tmp28));
   const double tmp239 = aDD22*tmp238;
   const double tmp240 = aDD11*tmp216;
   const double tmp241 = tmp240*((tmp29)*(tmp29));
   const double tmp242 = tmp17*tmp216;
   const double tmp243 = tmp242*tmp28;
   const double tmp244 = tmp242*tmp29;
   const double tmp245 = tmp28*tmp29;
   const double tmp246 = tmp216*tmp245;
   const double tmp247 = tmp1*tmp244 + tmp190*tmp246 + tmp2*tmp243 + tmp237 + tmp239 + tmp241;
   const double tmp248 = alpha*tmp247;
   const double tmp249 = (3.0/2.0)*tmp248;
   const double tmp250 = tmp118 + tmp120 + tmp122;
   const double tmp251 = aDD00*tmp219;
   const double tmp252 = aDD11*tmp238;
   const double tmp253 = aDD22*tmp216;
   const double tmp254 = tmp253*((tmp34)*(tmp34));
   const double tmp255 = tmp223*tmp28;
   const double tmp256 = tmp223*tmp34;
   const double tmp257 = tmp216*tmp34;
   const double tmp258 = tmp257*tmp28;
   const double tmp259 = tmp1*tmp255 + tmp190*tmp258 + tmp2*tmp256 + tmp251 + tmp252 + tmp254;
   const double tmp260 = alpha*tmp259;
   const double tmp261 = (3.0/2.0)*tmp260;
   const double tmp262 = alpha_dD1 + tmp214*tmp91;
   const double tmp263 = tmp20*tmp253;
   const double tmp264 = tmp263*tmp28;
   const double tmp265 = tmp221*tmp23;
   const double tmp266 = tmp17*tmp265;
   const double tmp267 = tmp17*tmp240;
   const double tmp268 = tmp267*tmp29;
   const double tmp269 = tmp223*tmp29;
   const double tmp270 = -tmp1*tmp217 - tmp190*tmp243 - tmp190*tmp269 - tmp2*tmp224 - tmp231*tmp29 - tmp232*tmp28 - 2*tmp264 - 2*tmp266 - 2*tmp268;
   const double tmp271 = tmp262*tmp270;
   const double tmp272 = alpha_dD2 + tmp214*tmp39;
   const double tmp273 = tmp267*tmp28;
   const double tmp274 = tmp20*tmp265;
   const double tmp275 = tmp242*tmp34;
   const double tmp276 = tmp263*tmp34;
   const double tmp277 = -tmp1*tmp224 - tmp190*tmp255 - tmp190*tmp275 - tmp2*tmp219 - tmp231*tmp28 - tmp232*tmp34 - 2*tmp273 - 2*tmp274 - 2*tmp276;
   const double tmp278 = tmp272*tmp277;
   const double tmp279 = tmp100 + tmp96 + tmp98;
   const double tmp280 = aDD12*tmp242;
   const double tmp281 = aDD12*tmp223;
   const double tmp282 = aDD01*tmp217 + aDD02*tmp224 + tmp227*tmp29 + tmp228*tmp28 + tmp264 + tmp266 + tmp268 + tmp28*tmp280 + tmp281*tmp29;
   const double tmp283 = tmp214*tmp282;
   const double tmp284 = tmp72 + tmp74 + tmp76;
   const double tmp285 = aDD01*tmp224 + aDD02*tmp219 + tmp227*tmp28 + tmp228*tmp34 + tmp273 + tmp274 + tmp276 + tmp28*tmp281 + tmp280*tmp34;
   const double tmp286 = tmp214*tmp285;
   const double tmp287 = tmp46 + tmp48 + tmp50;
   const double tmp288 = tmp17*tmp20*tmp221;
   const double tmp289 = tmp240*tmp245;
   const double tmp290 = tmp253*tmp28*tmp34;
   const double tmp291 = tmp257*tmp29;
   const double tmp292 = aDD01*tmp243 + aDD01*tmp269 + aDD02*tmp255 + aDD02*tmp275 + aDD12*tmp238 + aDD12*tmp291 + tmp288 + tmp289 + tmp290;
   const double tmp293 = tmp214*tmp292;
   const double tmp294 = (4.0/3.0)*tmp33;
   const double tmp295 = (4.0/3.0)*tmp32;
   const double tmp296 = (4.0/3.0)*tmp18;
   const double tmp297 = (2.0/3.0)*tmp35;
   const double tmp298 = (2.0/3.0)*tmp30;
   const double tmp299 = (2.0/3.0)*tmp24;
   const double tmp300 = tmp4*(tmp230*tmp299 + tmp236*tmp298 + tmp250*tmp297 + tmp279*tmp296 + tmp284*tmp295 + tmp287*tmp294);
   const double tmp301 = lambdaU0*vetU_dD10;
   const double tmp302 = lambdaU1*vetU_dD11;
   const double tmp303 = lambdaU2*vetU_dD12;
   const double tmp304 = tmp24*vetU_dDD100;
   const double tmp305 = tmp30*vetU_dDD111;
   const double tmp306 = tmp35*vetU_dDD122;
   const double tmp307 = tmp201*tmp30;
   const double tmp308 = 4*aDD02;
   const double tmp309 = 4*aDD01;
   const double tmp310 = tmp262*(-tmp225*tmp246 - 2*tmp237 - 2*tmp239 - 2*tmp241 - tmp243*tmp308 - tmp244*tmp309);
   const double tmp311 = tmp167 + tmp168 + tmp169;
   const double tmp312 = tmp146 + tmp147 + tmp148;
   const double tmp313 = tmp125 + tmp126 + tmp127;
   const double tmp314 = tmp215*tmp270;
   const double tmp315 = -tmp1*tmp243 - tmp1*tmp269 - tmp190*tmp238 - tmp190*tmp291 - tmp2*tmp255 - tmp2*tmp275 - 2*tmp288 - 2*tmp289 - 2*tmp290;
   const double tmp316 = tmp272*tmp315;
   const double tmp317 = tmp103 + tmp104 + tmp105;
   const double tmp318 = tmp79 + tmp80 + tmp81;
   const double tmp319 = tmp53 + tmp54 + tmp55;
   const double tmp320 = tmp4*(tmp294*tmp319 + tmp295*tmp318 + tmp296*tmp317 + tmp297*tmp313 + tmp298*tmp312 + tmp299*tmp311);
   const double tmp321 = lambdaU0*vetU_dD20;
   const double tmp322 = lambdaU1*vetU_dD21;
   const double tmp323 = lambdaU2*vetU_dD22;
   const double tmp324 = tmp24*vetU_dDD200;
   const double tmp325 = tmp30*vetU_dDD211;
   const double tmp326 = tmp35*vetU_dDD222;
   const double tmp327 = tmp202*tmp35;
   const double tmp328 = tmp272*(-tmp225*tmp258 - 2*tmp251 - 2*tmp252 - 2*tmp254 - tmp255*tmp309 - tmp256*tmp308);
   const double tmp329 = tmp172 + tmp173 + tmp174;
   const double tmp330 = tmp151 + tmp152 + tmp153;
   const double tmp331 = tmp130 + tmp131 + tmp132;
   const double tmp332 = tmp215*tmp277;
   const double tmp333 = tmp262*tmp315;
   const double tmp334 = tmp108 + tmp109 + tmp110;
   const double tmp335 = tmp84 + tmp85 + tmp86;
   const double tmp336 = tmp58 + tmp59 + tmp60;
   const double tmp337 = tmp4*(tmp294*tmp336 + tmp295*tmp335 + tmp296*tmp334 + tmp297*tmp331 + tmp298*tmp330 + tmp299*tmp329);
   const double tmp338 = 2*hDD02;
   const double tmp339 = alpha*(tmp1*tmp18 + 2*tmp180 + tmp181 + tmp187 + tmp2*tmp32 + tmp25) - vetU_dD00 - vetU_dD11 - vetU_dD22;
   const double tmp340 = (2.0/3.0)*tmp339;
   const double tmp341 = 2*hDD12;
   const double tmp342 = (1.0/3.0)*tmp206;
   const double tmp343 = (1.0/3.0)*tmp208;
   const double tmp344 = (1.0/3.0)*tmp212;
   const double tmp345 = tmp233*tmp26;
   const double tmp346 = tmp247*tmp26;
   const double tmp347 = tmp259*tmp26;
   const double tmp348 = 4*alpha;
   const double tmp349 = tmp282*tmp348;
   const double tmp350 = tmp285*tmp348;
   const double tmp351 = tmp292*tmp348;
   const double tmp352 = alpha_dDD12 + tmp52 + tmp57 + tmp62;
   const double tmp353 = tmp33*tmp37;
   const double tmp354 = alpha_dDD02 + tmp78 + tmp83 + tmp88;
   const double tmp355 = tmp32*tmp37;
   const double tmp356 = alpha_dDD01 + tmp102 + tmp107 + tmp112;
   const double tmp357 = tmp18*tmp37;
   aDD00_rhsGF_.ptr[aDD00_rhsGF_.offset(i0, i1, i2)] = aDD00*tmp0 + aDD00*tmp3 - aDD00*tmp5 + aDD_dKOD000*diss_strength + aDD_dKOD001*diss_strength + aDD_dKOD002*diss_strength + aDD_dupD000*vetU0 + aDD_dupD001*vetU1 + aDD_dupD002*vetU2 + tmp1*vetU_dD10 + tmp2*vetU_dD20 - tmp27*(tmp19 + tmp22 + tmp25) - tmp31*(aDD00*tmp18 + aDD01*tmp30 + tmp21*tmp28) - tmp36*(aDD00*tmp32 + aDD01*tmp33 + aDD02*tmp35) + tmp37*(tmp177 - tmp178*((1.0/3.0)*hDD00 + 1.0/3.0));
   aDD01_rhsGF_.ptr[aDD01_rhsGF_.offset(i0, i1, i2)] = aDD00*vetU_dD01 + aDD01*tmp3 - aDD01*tmp5 + aDD01*vetU_dD00 + aDD01*vetU_dD11 + aDD02*vetU_dD21 + aDD11*vetU_dD10 + aDD12*vetU_dD20 + aDD_dKOD010*diss_strength + aDD_dKOD011*diss_strength + aDD_dKOD012*diss_strength + aDD_dupD010*vetU0 + aDD_dupD011*vetU1 + aDD_dupD012*vetU2 - tmp179*tmp27 - tmp182*tmp31 - tmp183*tmp36 + tmp37*(-hDD01*tmp184 + tmp113);
   aDD02_rhsGF_.ptr[aDD02_rhsGF_.offset(i0, i1, i2)] = aDD00*vetU_dD02 + aDD01*vetU_dD12 + aDD02*tmp3 - aDD02*tmp5 + aDD02*vetU_dD00 + aDD02*vetU_dD22 + aDD12*vetU_dD10 + aDD22*vetU_dD20 + aDD_dKOD020*diss_strength + aDD_dKOD021*diss_strength + aDD_dKOD022*diss_strength + aDD_dupD020*vetU0 + aDD_dupD021*vetU1 + aDD_dupD022*vetU2 - tmp185*tmp27 - tmp186*tmp31 - tmp188*tmp36 + tmp37*(-hDD02*tmp184 + tmp89);
   aDD11_rhsGF_.ptr[aDD11_rhsGF_.offset(i0, i1, i2)] = aDD11*tmp189 + aDD11*tmp3 - aDD11*tmp5 + aDD_dKOD110*diss_strength + aDD_dKOD111*diss_strength + aDD_dKOD112*diss_strength + aDD_dupD110*vetU0 + aDD_dupD111*vetU1 + aDD_dupD112*vetU2 + tmp1*vetU_dD01 - tmp179*tmp31 - tmp182*tmp191 - tmp183*tmp192 + tmp190*vetU_dD21 + tmp37*(tmp156 - tmp178*((1.0/3.0)*hDD11 + 1.0/3.0));
   aDD12_rhsGF_.ptr[aDD12_rhsGF_.offset(i0, i1, i2)] = aDD01*vetU_dD02 + aDD02*vetU_dD01 + aDD11*vetU_dD12 + aDD12*tmp3 - aDD12*tmp5 + aDD12*vetU_dD11 + aDD12*vetU_dD22 + aDD22*vetU_dD21 + aDD_dKOD120*diss_strength + aDD_dKOD121*diss_strength + aDD_dKOD122*diss_strength + aDD_dupD120*vetU0 + aDD_dupD121*vetU1 + aDD_dupD122*vetU2 - tmp185*tmp31 - tmp186*tmp191 - tmp188*tmp192 + tmp37*(-hDD12*tmp184 + tmp67);
   aDD22_rhsGF_.ptr[aDD22_rhsGF_.offset(i0, i1, i2)] = aDD22*tmp193 + aDD22*tmp3 - aDD22*tmp5 + aDD_dKOD220*diss_strength + aDD_dKOD221*diss_strength + aDD_dKOD222*diss_strength + aDD_dupD220*vetU0 + aDD_dupD221*vetU1 + aDD_dupD222*vetU2 - tmp185*tmp36 - tmp186*tmp192 - tmp188*tmp194 + tmp190*vetU_dD12 + tmp2*vetU_dD02 + tmp37*(tmp135 - tmp178*((1.0/3.0)*hDD22 + 1.0/3.0));
   alpha_rhsGF_.ptr[alpha_rhsGF_.offset(i0, i1, i2)] = alpha_dKOD0*diss_strength + alpha_dKOD1*diss_strength + alpha_dKOD2*diss_strength + alpha_dupD0*vetU0 + alpha_dupD1*vetU1 + alpha_dupD2*vetU2 - tmp26*trK;
   betU0_rhsGF_.ptr[betU0_rhsGF_.offset(i0, i1, i2)] = -betU0*eta + betU_dKOD00*diss_strength + betU_dKOD01*diss_strength + betU_dKOD02*diss_strength + betU_dupD00*vetU0 + betU_dupD01*vetU1 + betU_dupD02*vetU2 - tmp18*tmp201 + tmp18*tmp209 - 3.0/4.0*tmp195 - 3.0/4.0*tmp196 - 3.0/4.0*tmp197 + tmp198*vetU_dDD001 + tmp199*vetU_dDD002 + tmp200*vetU_dDD012 - tmp202*tmp32 + (3.0/4.0)*tmp203 + (3.0/4.0)*tmp204 + (3.0/4.0)*tmp205 + tmp207*tmp32 - tmp211 + tmp213*tmp24 + (3.0/4.0)*tmp229 + tmp230*tmp235 + tmp236*tmp249 + tmp250*tmp261 + (3.0/4.0)*tmp271 + (3.0/4.0)*tmp278 + tmp279*tmp283 + tmp284*tmp286 + tmp287*tmp293 + (3.0/4.0)*tmp300;
   betU1_rhsGF_.ptr[betU1_rhsGF_.offset(i0, i1, i2)] = -betU1*eta + betU_dKOD10*diss_strength + betU_dKOD11*diss_strength + betU_dKOD12*diss_strength + betU_dupD10*vetU0 + betU_dupD11*vetU1 + betU_dupD12*vetU2 - tmp18*tmp210 + tmp18*tmp213 + tmp198*vetU_dDD101 + tmp199*vetU_dDD102 + tmp200*vetU_dDD112 - tmp202*tmp33 + tmp207*tmp33 + tmp209*tmp30 + tmp235*tmp311 + tmp249*tmp312 + tmp261*tmp313 + tmp283*tmp317 + tmp286*tmp318 + tmp293*tmp319 - 3.0/4.0*tmp301 - 3.0/4.0*tmp302 - 3.0/4.0*tmp303 + (3.0/4.0)*tmp304 + (3.0/4.0)*tmp305 + (3.0/4.0)*tmp306 - tmp307 + (3.0/4.0)*tmp310 + (3.0/4.0)*tmp314 + (3.0/4.0)*tmp316 + (3.0/4.0)*tmp320;
   betU2_rhsGF_.ptr[betU2_rhsGF_.offset(i0, i1, i2)] = -betU2*eta + betU_dKOD20*diss_strength + betU_dKOD21*diss_strength + betU_dKOD22*diss_strength + betU_dupD20*vetU0 + betU_dupD21*vetU1 + betU_dupD22*vetU2 + tmp198*vetU_dDD201 + tmp199*vetU_dDD202 + tmp200*vetU_dDD212 - tmp201*tmp33 + tmp207*tmp35 + tmp209*tmp33 - tmp210*tmp32 + tmp213*tmp32 + tmp235*tmp329 + tmp249*tmp330 + tmp261*tmp331 + tmp283*tmp334 + tmp286*tmp335 + tmp293*tmp336 - 3.0/4.0*tmp321 - 3.0/4.0*tmp322 - 3.0/4.0*tmp323 + (3.0/4.0)*tmp324 + (3.0/4.0)*tmp325 + (3.0/4.0)*tmp326 - tmp327 + (3.0/4.0)*tmp328 + (3.0/4.0)*tmp332 + (3.0/4.0)*tmp333 + (3.0/4.0)*tmp337;
   cf_rhsGF_.ptr[cf_rhsGF_.offset(i0, i1, i2)] = -2*cf*(-cf_dupD0*tmp63*vetU0 - cf_dupD1*tmp63*vetU1 - cf_dupD2*tmp63*vetU2 - 1.0/6.0*tmp3 + (1.0/6.0)*vetU_dD00 + (1.0/6.0)*vetU_dD11 + (1.0/6.0)*vetU_dD22) + cf_dKOD0*diss_strength + cf_dKOD1*diss_strength + cf_dKOD2*diss_strength;
   hDD00_rhsGF_.ptr[hDD00_rhsGF_.offset(i0, i1, i2)] = diss_strength*hDD_dKOD000 + diss_strength*hDD_dKOD001 + diss_strength*hDD_dKOD002 + hDD_dupD000*vetU0 + hDD_dupD001*vetU1 + hDD_dupD002*vetU2 + tmp0*tmp13 - tmp27 + tmp338*vetU_dD20 + tmp339*((2.0/3.0)*hDD00 + 2.0/3.0) + tmp7*vetU_dD10;
   hDD01_rhsGF_.ptr[hDD01_rhsGF_.offset(i0, i1, i2)] = diss_strength*hDD_dKOD010 + diss_strength*hDD_dKOD011 + diss_strength*hDD_dKOD012 + hDD01*tmp340 + hDD01*vetU_dD00 + hDD01*vetU_dD11 + hDD02*vetU_dD21 + hDD12*vetU_dD20 + hDD_dupD010*vetU0 + hDD_dupD011*vetU1 + hDD_dupD012*vetU2 + tmp11*vetU_dD10 + tmp13*vetU_dD01 - tmp31;
   hDD02_rhsGF_.ptr[hDD02_rhsGF_.offset(i0, i1, i2)] = diss_strength*hDD_dKOD020 + diss_strength*hDD_dKOD021 + diss_strength*hDD_dKOD022 + hDD01*vetU_dD12 + hDD02*tmp340 + hDD02*vetU_dD00 + hDD02*vetU_dD22 + hDD12*vetU_dD10 + hDD_dupD020*vetU0 + hDD_dupD021*vetU1 + hDD_dupD022*vetU2 + tmp13*vetU_dD02 - tmp36 + tmp9*vetU_dD20;
   hDD11_rhsGF_.ptr[hDD11_rhsGF_.offset(i0, i1, i2)] = diss_strength*hDD_dKOD110 + diss_strength*hDD_dKOD111 + diss_strength*hDD_dKOD112 + hDD_dupD110*vetU0 + hDD_dupD111*vetU1 + hDD_dupD112*vetU2 + tmp11*tmp189 - tmp191 + tmp339*((2.0/3.0)*hDD11 + 2.0/3.0) + tmp341*vetU_dD21 + tmp7*vetU_dD01;
   hDD12_rhsGF_.ptr[hDD12_rhsGF_.offset(i0, i1, i2)] = diss_strength*hDD_dKOD120 + diss_strength*hDD_dKOD121 + diss_strength*hDD_dKOD122 + hDD01*vetU_dD02 + hDD02*vetU_dD01 + hDD12*tmp340 + hDD12*vetU_dD11 + hDD12*vetU_dD22 + hDD_dupD120*vetU0 + hDD_dupD121*vetU1 + hDD_dupD122*vetU2 + tmp11*vetU_dD12 - tmp192 + tmp9*vetU_dD21;
   hDD22_rhsGF_.ptr[hDD22_rhsGF_.offset(i0, i1, i2)] = diss_strength*hDD_dKOD220 + diss_strength*hDD_dKOD221 + diss_strength*hDD_dKOD222 + hDD_dupD220*vetU0 + hDD_dupD221*vetU1 + hDD_dupD222*vetU2 + tmp193*tmp9 - tmp194 + tmp338*vetU_dD02 + tmp339*((2.0/3.0)*hDD22 + 2.0/3.0) + tmp341*vetU_dD12;
   lambdaU0_rhsGF_.ptr[lambdaU0_rhsGF_.offset(i0, i1, i2)] = diss_strength*lambdaU_dKOD00 + diss_strength*lambdaU_dKOD01 + diss_strength*lambdaU_dKOD02 + lambdaU_dupD00*vetU0 + lambdaU_dupD01*vetU1 + lambdaU_dupD02*vetU2 + tmp114*vetU_dDD001 + tmp18*tmp343 - tmp195 - tmp196 - tmp197 - tmp201*tmp296 - tmp202*tmp295 + tmp203 + tmp204 + tmp205 - 4.0/3.0*tmp211 + tmp229 + tmp230*tmp345 + tmp236*tmp346 + tmp24*tmp344 + tmp250*tmp347 + tmp271 + tmp278 + tmp279*tmp349 + tmp284*tmp350 + tmp287*tmp351 + tmp300 + tmp32*tmp342 + tmp68*vetU_dDD012 + tmp90*vetU_dDD002;
   lambdaU1_rhsGF_.ptr[lambdaU1_rhsGF_.offset(i0, i1, i2)] = diss_strength*lambdaU_dKOD10 + diss_strength*lambdaU_dKOD11 + diss_strength*lambdaU_dKOD12 + lambdaU_dupD10*vetU0 + lambdaU_dupD11*vetU1 + lambdaU_dupD12*vetU2 + tmp114*vetU_dDD101 + tmp18*tmp344 - tmp202*tmp294 - tmp210*tmp296 + tmp30*tmp343 - tmp301 - tmp302 - tmp303 + tmp304 + tmp305 + tmp306 - 4.0/3.0*tmp307 + tmp310 + tmp311*tmp345 + tmp312*tmp346 + tmp313*tmp347 + tmp314 + tmp316 + tmp317*tmp349 + tmp318*tmp350 + tmp319*tmp351 + tmp320 + tmp33*tmp342 + tmp68*vetU_dDD112 + tmp90*vetU_dDD102;
   lambdaU2_rhsGF_.ptr[lambdaU2_rhsGF_.offset(i0, i1, i2)] = diss_strength*lambdaU_dKOD20 + diss_strength*lambdaU_dKOD21 + diss_strength*lambdaU_dKOD22 + lambdaU_dupD20*vetU0 + lambdaU_dupD21*vetU1 + lambdaU_dupD22*vetU2 + tmp114*vetU_dDD201 - tmp201*tmp294 - tmp210*tmp295 + tmp32*tmp344 - tmp321 - tmp322 - tmp323 + tmp324 + tmp325 + tmp326 - 4.0/3.0*tmp327 + tmp328 + tmp329*tmp345 + tmp33*tmp343 + tmp330*tmp346 + tmp331*tmp347 + tmp332 + tmp333 + tmp334*tmp349 + tmp335*tmp350 + tmp336*tmp351 + tmp337 + tmp342*tmp35 + tmp68*vetU_dDD212 + tmp90*vetU_dDD202;
   trK_rhsGF_.ptr[trK_rhsGF_.offset(i0, i1, i2)] = aDD00*tmp234 + aDD11*tmp248 + aDD22*tmp260 + (1.0/3.0)*alpha*((trK)*(trK)) + diss_strength*trK_dKOD0 + diss_strength*trK_dKOD1 + diss_strength*trK_dKOD2 + tmp192*tmp292 - tmp24*tmp37*(alpha_dDD00 - tmp157 + tmp166 + tmp171 + tmp176) + tmp282*tmp31 + tmp285*tmp36 - tmp30*tmp37*(alpha_dDD11 - tmp136 + tmp145 + tmp150 + tmp155) - tmp35*tmp37*(alpha_dDD22 - tmp115 + tmp124 + tmp129 + tmp134) - tmp353*(tmp352 + tmp40) - tmp353*(tmp352 + tmp42) - tmp355*(tmp354 + tmp69) - tmp355*(tmp354 + tmp70) - tmp357*(tmp356 + tmp92) - tmp357*(tmp356 + tmp94) + trK_dupD0*vetU0 + trK_dupD1*vetU1 + trK_dupD2*vetU2;
   vetU0_rhsGF_.ptr[vetU0_rhsGF_.offset(i0, i1, i2)] = betU0 + diss_strength*vetU_dKOD00 + diss_strength*vetU_dKOD01 + diss_strength*vetU_dKOD02 + vetU0*vetU_dupD00 + vetU1*vetU_dupD01 + vetU2*vetU_dupD02;
   vetU1_rhsGF_.ptr[vetU1_rhsGF_.offset(i0, i1, i2)] = betU1 + diss_strength*vetU_dKOD10 + diss_strength*vetU_dKOD11 + diss_strength*vetU_dKOD12 + vetU0*vetU_dupD10 + vetU1*vetU_dupD11 + vetU2*vetU_dupD12;
   vetU2_rhsGF_.ptr[vetU2_rhsGF_.offset(i0, i1, i2)] = betU2 + diss_strength*vetU_dKOD20 + diss_strength*vetU_dKOD21 + diss_strength*vetU_dKOD22 + vetU0*vetU_dupD20 + vetU1*vetU_dupD21 + vetU2*vetU_dupD22;
}


});
