# Schedule definitions for thorn Hydro

STORAGE: conserved[2]
STORAGE: conserved_rhs
STORAGE: primitive
STORAGE: flux_x flux_y flux_z



# Initial conditions

SCHEDULE Hydro_Initialize AT initial
{
  LANG: C
  WRITES: conserved(interior)
  INVALIDATES: primitive(everywhere)
  INVALIDATES: flux_x(everywhere) flux_y(everywhere) flux_z(everywhere)
  SYNC: conserved
} "Set up hydro initial conditions"

SCHEDULE Hydro_EstimateError AT postinitial
{
  LANG: C
  READS: conserved(everywhere)
  WRITES: CarpetX::regrid_error(interior)
} "Estimate local error for regridding initial conditions"



# Regridding

SCHEDULE Hydro_Boundaries AT postregrid
{
  LANG: C
  SYNC: conserved
} "Apply boundary conditions after regridding"



# Dependent quantities

# TODO: Use a more accurate condition
if (output_every > 0) {
  SCHEDULE GROUP Hydro_OutputGroup AT poststep
  {
  } "Output HydroToy quantities"

    SCHEDULE Hydro_Con2prim IN Hydro_OutputGroup
    {
      LANG: C
      READS: conserved(everywhere)
      WRITES: primitive(everywhere)
      INVALIDATES: flux_x(everywhere) flux_y(everywhere) flux_z(everywhere)
    } "Calculate pressure"

    SCHEDULE Hydro_Fluxes IN Hydro_OutputGroup AFTER Hydro_Con2prim
    {
      LANG: C
      READS: conserved(everywhere)
      READS: primitive(everywhere)
      WRITES: flux_x(interior) flux_y(interior) flux_z(interior)
    } "Calculate the hydro fluxes"
}

SCHEDULE Hydro_EstimateError AT poststep
{
  LANG: C
  READS: conserved(everywhere)
  WRITES: CarpetX::regrid_error(interior)
} "Estimate local error for regridding during evolution"



# Time stepping

SCHEDULE Hydro_Con2prim AT evol
{
  LANG: C
  READS: conserved(everywhere)
  WRITES: primitive(everywhere)
  INVALIDATES: flux_x(everywhere) flux_y(everywhere) flux_z(everywhere)
} "Calculate pressure"

SCHEDULE Hydro_Fluxes AT evol AFTER Hydro_Con2prim
{
  LANG: C
  READS: conserved(everywhere)
  READS: primitive(everywhere)
  WRITES: flux_x(interior) flux_y(interior) flux_z(interior)
  SYNC: flux_x flux_y flux_z    # restrict
} "Calculate the hydro fluxes"

SCHEDULE Hydro_RHS AT evol AFTER Hydro_Fluxes
{
  LANG: C
  READS: flux_x(interior) flux_y(interior) flux_z(interior)
  WRITES: conserved_rhs(interior)
  SYNC: conserved_rhs           # sync and restrict
} "Calculate RHS of the hydro equations"
