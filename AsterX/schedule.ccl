# Schedule definitions for thorn AsterX

STORAGE: dens mom tau
STORAGE: flux_x flux_y flux_z
STORAGE: densrhs momrhs taurhs
STORAGE: ADMBase::metric ADMBase::lapse ADMBase::shift ADMBase::curv
STORAGE: Aux_in_RHSof_A_Psi



# Initial conditions

SCHEDULE AsterX_Prim2Con_Initial AT initial AFTER HydroBase_PostInitial
{
  LANG: C
  READS: ADMBase::metric(interior) ADMBase::lapse(interior) ADMBase::shift(interior)
  READS: HydroBase::rho(interior) HydroBase::vel(interior) HydroBase::eps(interior) HydroBase::press(interior) HydroBase::Bvec(interior)
  WRITES: dens(interior) tau(interior) mom(interior) dB(interior)
  WRITES: Ex(interior) Ey(interior) Ez(interior)
  WRITES: Avec_x(interior) Avec_y(interior) Avec_z(interior) Psi(interior)
  WRITES: saved_prims
  SYNC: dens tau mom dB
  SYNC: Ex Ey Ez Avec_x Avec_y Avec_z Psi
  SYNC: saved_prims
} "Compute conserved variables from primitive variables at initial"

SCHEDULE AsterX_EstimateError AT postinitial
{
  LANG: C
  READS: HydroBase::rho(everywhere) HydroBase::vel(everywhere) HydroBase::eps(everywhere) HydroBase::press(everywhere)
  WRITES: CarpetX::regrid_error(interior)
} "Estimate local error for regridding initial conditions"



# Regridding

SCHEDULE AsterX_Sync AT postregrid
{
  LANG: C
  OPTIONS: global
  SYNC: dens tau mom
  SYNC: saved_prims
} "Synchronize"

SCHEDULE AsterX_EstimateError AT poststep
{
  LANG: C
  READS: HydroBase::rho(everywhere) HydroBase::vel(everywhere) HydroBase::eps(everywhere) HydroBase::press(everywhere)
  WRITES: CarpetX::regrid_error(interior)
} "Estimate local error for regridding during evolution"



# Time stepping

SCHEDULE AsterX_ComputeBstagFromA IN ODESolvers_RHS BEFORE AsterX_Con2Prim
{
  LANG: C
  READS: Avec_x(everywhere) Avec_y(everywhere) Avec_z(everywhere)
  WRITES: dBx_stag(interior) dBy_stag(interior) dBz_stag(interior)
  SYNC: dBx_stag dBy_stag dBz_stag
} "Calculate Bstag from curl of A"

SCHEDULE AsterX_ComputeBFromBstag IN ODESolvers_RHS BEFORE AsterX_Con2Prim
{
  LANG: C
  READS: dBx_stag(everywhere) dBy_stag(everywhere) dBz_stag(everywhere)
  WRITES: dB(interior)
  SYNC: dB
} "Calculate centered B from Bstag"



SCHEDULE AsterX_Con2Prim IN ODESolvers_RHS
{
  LANG: C
  READS: ADMBase::metric(interior) ADMBase::lapse(interior) ADMBase::shift(interior)
  READS: dens(interior) tau(interior) mom(interior)
  READS: HydroBase::Bvec(interior)
  READS: saved_prims(interior)
  # WRITES: dens(interior) tau(interior) mom(interior)
  WRITES: HydroBase::rho(interior) HydroBase::vel(interior) HydroBase::eps(interior) HydroBase::press(interior)
  WRITES: saved_prims(interior)
  WRITES: HydroBase::Bvec(interior)
  # SYNC: dens tau mom
  SYNC: HydroBase::rho HydroBase::vel HydroBase::eps HydroBase::press
  SYNC: saved_prims
} "Calculate primitive variables from conservative variables"
  
SCHEDULE AsterX_Fluxes IN ODESolvers_RHS AFTER Con2Prim_2DNRNoble
{
  LANG: C
  READS: ADMBase::metric(everywhere)
  READS: ADMBase::lapse(everywhere)
  READS: ADMBase::shift(everywhere)
  READS: dens(everywhere) tau(everywhere) mom(everywhere)
  READS: HydroBase::rho(everywhere) HydroBase::vel(everywhere) HydroBase::press(everywhere) HydroBase::eps(everywhere)
  READS: Avec_x(everywhere) Avec_y(everywhere) Avec_z(everywhere) Psi(everywhere)
  WRITES: flux_x(interior) flux_y(interior) flux_z(interior)
  WRITES: Aux_in_RHSof_A_Psi(interior)
  SYNC: Aux_in_RHSof_A_Psi
  SYNC: flux_x flux_y flux_z
} "Calculate the hydro fluxes"

SCHEDULE AsterX_SourceTerms IN ODESolvers_RHS AFTER AsterX_Fluxes 
{
  LANG: C
  READS: ADMBase::metric(everywhere)
  READS: ADMBase::lapse(everywhere)
  READS: ADMBase::shift(everywhere)
  READS: ADMBase::curv(everywhere)
  READS: HydroBase::rho(everywhere) HydroBase::vel(everywhere) HydroBase::press(everywhere) HydroBase::eps(everywhere)
  READS: HydroBase::Bvec(everywhere)
  WRITES: densrhs(everywhere) taurhs(everywhere) momrhs(everywhere)
} "Calculate the source terms and compute the RHS of the hydro equations"

SCHEDULE AsterX_RHS IN ODESolvers_RHS AFTER AsterX_SourceTerms
{
  LANG: C
  READS: ADMBase::metric(everywhere) ADMBase::lapse(everywhere) ADMBase::shift(everywhere)
  READS: flux_x(everywhere) flux_y(everywhere) flux_z(everywhere)
  READS: densrhs(everywhere) taurhs(everywhere) momrhs(everywhere)
  READS: Ex(everywhere) Ey(everywhere) Ez(everywhere) Psi(everywhere)
  READS: Aux_in_RHSof_A_Psi(everywhere)
  WRITES: densrhs(everywhere) taurhs(everywhere) momrhs(everywhere)
  WRITES: Avec_x_rhs(interior) Avec_y_rhs(interior) Avec_z_rhs(interior) Psi_rhs(interior)
  SYNC: Avec_x_rhs Avec_y_rhs Avec_z_rhs Psi_rhs
} "Update the RHS of the hydro equations with the flux contributions"

SCHEDULE AsterX_Sync IN ODESolvers_PostStep
{
  LANG: C
  OPTIONS: global
  SYNC: dens tau mom
} "Synchronize"
