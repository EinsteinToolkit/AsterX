# Schedule definitions for thorn AsterX

STORAGE: dens mom tau
STORAGE: flux_x flux_y flux_z
STORAGE: densrhs momrhs taurhs
STORAGE: ADMBase::metric ADMBase::lapse ADMBase::shift ADMBase::curv



# Initial conditions

SCHEDULE AsterX_Prim2Con_Initial AT initial AFTER HydroBase_PostInitial
{
  LANG: C
  READS: ADMBase::metric(interior)
  READS: HydroBase::rho(interior) HydroBase::vel(interior) HydroBase::eps(interior) HydroBase::press(interior)
  WRITES: dens(interior) tau(interior) mom(interior)
  SYNC: dens tau mom
} "Compute conserved variables from primitive variables at initial"

SCHEDULE AsterX_EstimateError AT postinitial
{
  LANG: C
  READS: HydroBase::rho(everywhere) HydroBase::vel(everywhere) HydroBase::eps(everywhere) HydroBase::press(everywhere)
  WRITES: CarpetX::regrid_error(interior)
} "Estimate local error for regridding initial conditions"



# Regridding

SCHEDULE AsterX_Sync AT postregrid
{
  LANG: C
  OPTIONS: global
  SYNC: dens tau mom
} "Synchronize"

SCHEDULE AsterX_EstimateError AT poststep
{
  LANG: C
  READS: HydroBase::rho(everywhere) HydroBase::vel(everywhere) HydroBase::eps(everywhere) HydroBase::press(everywhere)
  WRITES: CarpetX::regrid_error(interior)
} "Estimate local error for regridding during evolution"



# Time stepping

SCHEDULE AsterX_Con2Prim_2DNRNoble IN ODESolvers_RHS
{
  LANG: C
  READS: ADMBase::metric(everywhere)
  READS: ADMBase::lapse(everywhere)
  READS: ADMBase::shift(everywhere)
  READS: dens(everywhere) tau(everywhere) mom(everywhere)
  READS: HydroBase::rho(everywhere)
  READS: HydroBase::vel(everywhere)
  READS: HydroBase::eps(everywhere)
  READS: HydroBase::press(everywhere)
  WRITES: HydroBase::rho(everywhere)
  WRITES: HydroBase::vel(everywhere)
  WRITES: HydroBase::eps(everywhere)
  WRITES: HydroBase::press(everywhere)
  WRITES: dens(everywhere) tau(everywhere) mom(everywhere)
} "Calculate primitive variables from conservative variables"
  
SCHEDULE AsterX_Fluxes IN ODESolvers_RHS AFTER AsterX_Con2Prim_2DNRNoble
{
  LANG: C
  READS: ADMBase::metric(everywhere)
  READS: ADMBase::lapse(everywhere)
  READS: ADMBase::shift(everywhere)
  READS: dens(everywhere) tau(everywhere) mom(everywhere)
  READS: HydroBase::rho(everywhere) HydroBase::vel(everywhere) HydroBase::press(everywhere) HydroBase::eps(everywhere)
  WRITES: flux_x(interior) flux_y(interior) flux_z(interior)
  SYNC: flux_x flux_y flux_z
} "Calculate the hydro fluxes"

SCHEDULE AsterX_RHS IN ODESolvers_RHS AFTER AsterX_Fluxes
{
  LANG: C
  READS: flux_x(everywhere) flux_y(everywhere) flux_z(everywhere)
  WRITES: densrhs(everywhere) taurhs(everywhere) momrhs(everywhere)
} "Calculate the RHS of the hydro equations"

SCHEDULE AsterX_Sync IN ODESolvers_PostStep
{
  LANG: C
  OPTIONS: global
  SYNC: dens tau mom
} "Synchronize"
