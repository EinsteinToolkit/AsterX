/*
Evaluate the momentum constraint
 */
void momentum_constraint(const paramstruct *restrict params, REAL *restrict xx[3],
                  REAL *restrict in_gfs, REAL *restrict aux_gfs) {
#include "set_Cparameters.h"

#pragma omp parallel for
    for(int i2=NGHOSTS; i2<NGHOSTS+Nxx2; i2++) {
        const REAL xx2 = xx[2][i2];
        for(int i1=NGHOSTS; i1<NGHOSTS+Nxx1; i1++) {
            const REAL xx1 = xx[1][i1];
            for(int i0=NGHOSTS; i0<NGHOSTS+Nxx0; i0++) {
                const REAL xx0 = xx[0][i0];
                {
                   /* 
                    * NRPy+ Finite Difference Code Generation, Step 1 of 2: Read from main memory and compute finite difference stencils:
                    */
                   const double hDD00_i0_i1m2_i2 = in_gfs[IDX4S(HDD00GF, i0,i1-2,i2)];
                   const double hDD00_i0_i1m1_i2 = in_gfs[IDX4S(HDD00GF, i0,i1-1,i2)];
                   const double hDD00_i0m2_i1_i2 = in_gfs[IDX4S(HDD00GF, i0-2,i1,i2)];
                   const double hDD00_i0m1_i1_i2 = in_gfs[IDX4S(HDD00GF, i0-1,i1,i2)];
                   const double hDD00 = in_gfs[IDX4S(HDD00GF, i0,i1,i2)];
                   const double hDD00_i0p1_i1_i2 = in_gfs[IDX4S(HDD00GF, i0+1,i1,i2)];
                   const double hDD00_i0p2_i1_i2 = in_gfs[IDX4S(HDD00GF, i0+2,i1,i2)];
                   const double hDD00_i0_i1p1_i2 = in_gfs[IDX4S(HDD00GF, i0,i1+1,i2)];
                   const double hDD00_i0_i1p2_i2 = in_gfs[IDX4S(HDD00GF, i0,i1+2,i2)];
                   const double hDD01_i0_i1m2_i2 = in_gfs[IDX4S(HDD01GF, i0,i1-2,i2)];
                   const double hDD01_i0_i1m1_i2 = in_gfs[IDX4S(HDD01GF, i0,i1-1,i2)];
                   const double hDD01_i0m2_i1_i2 = in_gfs[IDX4S(HDD01GF, i0-2,i1,i2)];
                   const double hDD01_i0m1_i1_i2 = in_gfs[IDX4S(HDD01GF, i0-1,i1,i2)];
                   const double hDD01 = in_gfs[IDX4S(HDD01GF, i0,i1,i2)];
                   const double hDD01_i0p1_i1_i2 = in_gfs[IDX4S(HDD01GF, i0+1,i1,i2)];
                   const double hDD01_i0p2_i1_i2 = in_gfs[IDX4S(HDD01GF, i0+2,i1,i2)];
                   const double hDD01_i0_i1p1_i2 = in_gfs[IDX4S(HDD01GF, i0,i1+1,i2)];
                   const double hDD01_i0_i1p2_i2 = in_gfs[IDX4S(HDD01GF, i0,i1+2,i2)];
                   const double hDD02_i0_i1m2_i2 = in_gfs[IDX4S(HDD02GF, i0,i1-2,i2)];
                   const double hDD02_i0_i1m1_i2 = in_gfs[IDX4S(HDD02GF, i0,i1-1,i2)];
                   const double hDD02_i0m2_i1_i2 = in_gfs[IDX4S(HDD02GF, i0-2,i1,i2)];
                   const double hDD02_i0m1_i1_i2 = in_gfs[IDX4S(HDD02GF, i0-1,i1,i2)];
                   const double hDD02 = in_gfs[IDX4S(HDD02GF, i0,i1,i2)];
                   const double hDD02_i0p1_i1_i2 = in_gfs[IDX4S(HDD02GF, i0+1,i1,i2)];
                   const double hDD02_i0p2_i1_i2 = in_gfs[IDX4S(HDD02GF, i0+2,i1,i2)];
                   const double hDD02_i0_i1p1_i2 = in_gfs[IDX4S(HDD02GF, i0,i1+1,i2)];
                   const double hDD02_i0_i1p2_i2 = in_gfs[IDX4S(HDD02GF, i0,i1+2,i2)];
                   const double hDD11_i0_i1m2_i2 = in_gfs[IDX4S(HDD11GF, i0,i1-2,i2)];
                   const double hDD11_i0_i1m1_i2 = in_gfs[IDX4S(HDD11GF, i0,i1-1,i2)];
                   const double hDD11_i0m2_i1_i2 = in_gfs[IDX4S(HDD11GF, i0-2,i1,i2)];
                   const double hDD11_i0m1_i1_i2 = in_gfs[IDX4S(HDD11GF, i0-1,i1,i2)];
                   const double hDD11 = in_gfs[IDX4S(HDD11GF, i0,i1,i2)];
                   const double hDD11_i0p1_i1_i2 = in_gfs[IDX4S(HDD11GF, i0+1,i1,i2)];
                   const double hDD11_i0p2_i1_i2 = in_gfs[IDX4S(HDD11GF, i0+2,i1,i2)];
                   const double hDD11_i0_i1p1_i2 = in_gfs[IDX4S(HDD11GF, i0,i1+1,i2)];
                   const double hDD11_i0_i1p2_i2 = in_gfs[IDX4S(HDD11GF, i0,i1+2,i2)];
                   const double hDD12_i0_i1m2_i2 = in_gfs[IDX4S(HDD12GF, i0,i1-2,i2)];
                   const double hDD12_i0_i1m1_i2 = in_gfs[IDX4S(HDD12GF, i0,i1-1,i2)];
                   const double hDD12_i0m2_i1_i2 = in_gfs[IDX4S(HDD12GF, i0-2,i1,i2)];
                   const double hDD12_i0m1_i1_i2 = in_gfs[IDX4S(HDD12GF, i0-1,i1,i2)];
                   const double hDD12 = in_gfs[IDX4S(HDD12GF, i0,i1,i2)];
                   const double hDD12_i0p1_i1_i2 = in_gfs[IDX4S(HDD12GF, i0+1,i1,i2)];
                   const double hDD12_i0p2_i1_i2 = in_gfs[IDX4S(HDD12GF, i0+2,i1,i2)];
                   const double hDD12_i0_i1p1_i2 = in_gfs[IDX4S(HDD12GF, i0,i1+1,i2)];
                   const double hDD12_i0_i1p2_i2 = in_gfs[IDX4S(HDD12GF, i0,i1+2,i2)];
                   const double hDD22_i0_i1m2_i2 = in_gfs[IDX4S(HDD22GF, i0,i1-2,i2)];
                   const double hDD22_i0_i1m1_i2 = in_gfs[IDX4S(HDD22GF, i0,i1-1,i2)];
                   const double hDD22_i0m2_i1_i2 = in_gfs[IDX4S(HDD22GF, i0-2,i1,i2)];
                   const double hDD22_i0m1_i1_i2 = in_gfs[IDX4S(HDD22GF, i0-1,i1,i2)];
                   const double hDD22 = in_gfs[IDX4S(HDD22GF, i0,i1,i2)];
                   const double hDD22_i0p1_i1_i2 = in_gfs[IDX4S(HDD22GF, i0+1,i1,i2)];
                   const double hDD22_i0p2_i1_i2 = in_gfs[IDX4S(HDD22GF, i0+2,i1,i2)];
                   const double hDD22_i0_i1p1_i2 = in_gfs[IDX4S(HDD22GF, i0,i1+1,i2)];
                   const double hDD22_i0_i1p2_i2 = in_gfs[IDX4S(HDD22GF, i0,i1+2,i2)];
                   const double aDD00_i0_i1m2_i2 = in_gfs[IDX4S(ADD00GF, i0,i1-2,i2)];
                   const double aDD00_i0_i1m1_i2 = in_gfs[IDX4S(ADD00GF, i0,i1-1,i2)];
                   const double aDD00_i0m2_i1_i2 = in_gfs[IDX4S(ADD00GF, i0-2,i1,i2)];
                   const double aDD00_i0m1_i1_i2 = in_gfs[IDX4S(ADD00GF, i0-1,i1,i2)];
                   const double aDD00 = in_gfs[IDX4S(ADD00GF, i0,i1,i2)];
                   const double aDD00_i0p1_i1_i2 = in_gfs[IDX4S(ADD00GF, i0+1,i1,i2)];
                   const double aDD00_i0p2_i1_i2 = in_gfs[IDX4S(ADD00GF, i0+2,i1,i2)];
                   const double aDD00_i0_i1p1_i2 = in_gfs[IDX4S(ADD00GF, i0,i1+1,i2)];
                   const double aDD00_i0_i1p2_i2 = in_gfs[IDX4S(ADD00GF, i0,i1+2,i2)];
                   const double aDD01_i0_i1m2_i2 = in_gfs[IDX4S(ADD01GF, i0,i1-2,i2)];
                   const double aDD01_i0_i1m1_i2 = in_gfs[IDX4S(ADD01GF, i0,i1-1,i2)];
                   const double aDD01_i0m2_i1_i2 = in_gfs[IDX4S(ADD01GF, i0-2,i1,i2)];
                   const double aDD01_i0m1_i1_i2 = in_gfs[IDX4S(ADD01GF, i0-1,i1,i2)];
                   const double aDD01 = in_gfs[IDX4S(ADD01GF, i0,i1,i2)];
                   const double aDD01_i0p1_i1_i2 = in_gfs[IDX4S(ADD01GF, i0+1,i1,i2)];
                   const double aDD01_i0p2_i1_i2 = in_gfs[IDX4S(ADD01GF, i0+2,i1,i2)];
                   const double aDD01_i0_i1p1_i2 = in_gfs[IDX4S(ADD01GF, i0,i1+1,i2)];
                   const double aDD01_i0_i1p2_i2 = in_gfs[IDX4S(ADD01GF, i0,i1+2,i2)];
                   const double aDD02_i0_i1m2_i2 = in_gfs[IDX4S(ADD02GF, i0,i1-2,i2)];
                   const double aDD02_i0_i1m1_i2 = in_gfs[IDX4S(ADD02GF, i0,i1-1,i2)];
                   const double aDD02_i0m2_i1_i2 = in_gfs[IDX4S(ADD02GF, i0-2,i1,i2)];
                   const double aDD02_i0m1_i1_i2 = in_gfs[IDX4S(ADD02GF, i0-1,i1,i2)];
                   const double aDD02 = in_gfs[IDX4S(ADD02GF, i0,i1,i2)];
                   const double aDD02_i0p1_i1_i2 = in_gfs[IDX4S(ADD02GF, i0+1,i1,i2)];
                   const double aDD02_i0p2_i1_i2 = in_gfs[IDX4S(ADD02GF, i0+2,i1,i2)];
                   const double aDD02_i0_i1p1_i2 = in_gfs[IDX4S(ADD02GF, i0,i1+1,i2)];
                   const double aDD02_i0_i1p2_i2 = in_gfs[IDX4S(ADD02GF, i0,i1+2,i2)];
                   const double aDD11_i0_i1m2_i2 = in_gfs[IDX4S(ADD11GF, i0,i1-2,i2)];
                   const double aDD11_i0_i1m1_i2 = in_gfs[IDX4S(ADD11GF, i0,i1-1,i2)];
                   const double aDD11_i0m2_i1_i2 = in_gfs[IDX4S(ADD11GF, i0-2,i1,i2)];
                   const double aDD11_i0m1_i1_i2 = in_gfs[IDX4S(ADD11GF, i0-1,i1,i2)];
                   const double aDD11 = in_gfs[IDX4S(ADD11GF, i0,i1,i2)];
                   const double aDD11_i0p1_i1_i2 = in_gfs[IDX4S(ADD11GF, i0+1,i1,i2)];
                   const double aDD11_i0p2_i1_i2 = in_gfs[IDX4S(ADD11GF, i0+2,i1,i2)];
                   const double aDD11_i0_i1p1_i2 = in_gfs[IDX4S(ADD11GF, i0,i1+1,i2)];
                   const double aDD11_i0_i1p2_i2 = in_gfs[IDX4S(ADD11GF, i0,i1+2,i2)];
                   const double aDD12_i0_i1m2_i2 = in_gfs[IDX4S(ADD12GF, i0,i1-2,i2)];
                   const double aDD12_i0_i1m1_i2 = in_gfs[IDX4S(ADD12GF, i0,i1-1,i2)];
                   const double aDD12_i0m2_i1_i2 = in_gfs[IDX4S(ADD12GF, i0-2,i1,i2)];
                   const double aDD12_i0m1_i1_i2 = in_gfs[IDX4S(ADD12GF, i0-1,i1,i2)];
                   const double aDD12 = in_gfs[IDX4S(ADD12GF, i0,i1,i2)];
                   const double aDD12_i0p1_i1_i2 = in_gfs[IDX4S(ADD12GF, i0+1,i1,i2)];
                   const double aDD12_i0p2_i1_i2 = in_gfs[IDX4S(ADD12GF, i0+2,i1,i2)];
                   const double aDD12_i0_i1p1_i2 = in_gfs[IDX4S(ADD12GF, i0,i1+1,i2)];
                   const double aDD12_i0_i1p2_i2 = in_gfs[IDX4S(ADD12GF, i0,i1+2,i2)];
                   const double aDD22_i0_i1m2_i2 = in_gfs[IDX4S(ADD22GF, i0,i1-2,i2)];
                   const double aDD22_i0_i1m1_i2 = in_gfs[IDX4S(ADD22GF, i0,i1-1,i2)];
                   const double aDD22_i0m2_i1_i2 = in_gfs[IDX4S(ADD22GF, i0-2,i1,i2)];
                   const double aDD22_i0m1_i1_i2 = in_gfs[IDX4S(ADD22GF, i0-1,i1,i2)];
                   const double aDD22 = in_gfs[IDX4S(ADD22GF, i0,i1,i2)];
                   const double aDD22_i0p1_i1_i2 = in_gfs[IDX4S(ADD22GF, i0+1,i1,i2)];
                   const double aDD22_i0p2_i1_i2 = in_gfs[IDX4S(ADD22GF, i0+2,i1,i2)];
                   const double aDD22_i0_i1p1_i2 = in_gfs[IDX4S(ADD22GF, i0,i1+1,i2)];
                   const double aDD22_i0_i1p2_i2 = in_gfs[IDX4S(ADD22GF, i0,i1+2,i2)];
                   const double trK_i0_i1m2_i2 = in_gfs[IDX4S(TRKGF, i0,i1-2,i2)];
                   const double trK_i0_i1m1_i2 = in_gfs[IDX4S(TRKGF, i0,i1-1,i2)];
                   const double trK_i0m2_i1_i2 = in_gfs[IDX4S(TRKGF, i0-2,i1,i2)];
                   const double trK_i0m1_i1_i2 = in_gfs[IDX4S(TRKGF, i0-1,i1,i2)];
                   const double trK_i0p1_i1_i2 = in_gfs[IDX4S(TRKGF, i0+1,i1,i2)];
                   const double trK_i0p2_i1_i2 = in_gfs[IDX4S(TRKGF, i0+2,i1,i2)];
                   const double trK_i0_i1p1_i2 = in_gfs[IDX4S(TRKGF, i0,i1+1,i2)];
                   const double trK_i0_i1p2_i2 = in_gfs[IDX4S(TRKGF, i0,i1+2,i2)];
                   const double cf_i0_i1m2_i2 = in_gfs[IDX4S(CFGF, i0,i1-2,i2)];
                   const double cf_i0_i1m1_i2 = in_gfs[IDX4S(CFGF, i0,i1-1,i2)];
                   const double cf_i0m2_i1_i2 = in_gfs[IDX4S(CFGF, i0-2,i1,i2)];
                   const double cf_i0m1_i1_i2 = in_gfs[IDX4S(CFGF, i0-1,i1,i2)];
                   const double cf = in_gfs[IDX4S(CFGF, i0,i1,i2)];
                   const double cf_i0p1_i1_i2 = in_gfs[IDX4S(CFGF, i0+1,i1,i2)];
                   const double cf_i0p2_i1_i2 = in_gfs[IDX4S(CFGF, i0+2,i1,i2)];
                   const double cf_i0_i1p1_i2 = in_gfs[IDX4S(CFGF, i0,i1+1,i2)];
                   const double cf_i0_i1p2_i2 = in_gfs[IDX4S(CFGF, i0,i1+2,i2)];
                   const double aDD_dD000 = invdx0*(-2.0/3.0*aDD00_i0m1_i1_i2 + (1.0/12.0)*aDD00_i0m2_i1_i2 + (2.0/3.0)*aDD00_i0p1_i1_i2 - 1.0/12.0*aDD00_i0p2_i1_i2);
                   const double aDD_dD001 = invdx1*(-2.0/3.0*aDD00_i0_i1m1_i2 + (1.0/12.0)*aDD00_i0_i1m2_i2 + (2.0/3.0)*aDD00_i0_i1p1_i2 - 1.0/12.0*aDD00_i0_i1p2_i2);
                   const double aDD_dD010 = invdx0*(-2.0/3.0*aDD01_i0m1_i1_i2 + (1.0/12.0)*aDD01_i0m2_i1_i2 + (2.0/3.0)*aDD01_i0p1_i1_i2 - 1.0/12.0*aDD01_i0p2_i1_i2);
                   const double aDD_dD011 = invdx1*(-2.0/3.0*aDD01_i0_i1m1_i2 + (1.0/12.0)*aDD01_i0_i1m2_i2 + (2.0/3.0)*aDD01_i0_i1p1_i2 - 1.0/12.0*aDD01_i0_i1p2_i2);
                   const double aDD_dD020 = invdx0*(-2.0/3.0*aDD02_i0m1_i1_i2 + (1.0/12.0)*aDD02_i0m2_i1_i2 + (2.0/3.0)*aDD02_i0p1_i1_i2 - 1.0/12.0*aDD02_i0p2_i1_i2);
                   const double aDD_dD021 = invdx1*(-2.0/3.0*aDD02_i0_i1m1_i2 + (1.0/12.0)*aDD02_i0_i1m2_i2 + (2.0/3.0)*aDD02_i0_i1p1_i2 - 1.0/12.0*aDD02_i0_i1p2_i2);
                   const double aDD_dD110 = invdx0*(-2.0/3.0*aDD11_i0m1_i1_i2 + (1.0/12.0)*aDD11_i0m2_i1_i2 + (2.0/3.0)*aDD11_i0p1_i1_i2 - 1.0/12.0*aDD11_i0p2_i1_i2);
                   const double aDD_dD111 = invdx1*(-2.0/3.0*aDD11_i0_i1m1_i2 + (1.0/12.0)*aDD11_i0_i1m2_i2 + (2.0/3.0)*aDD11_i0_i1p1_i2 - 1.0/12.0*aDD11_i0_i1p2_i2);
                   const double aDD_dD120 = invdx0*(-2.0/3.0*aDD12_i0m1_i1_i2 + (1.0/12.0)*aDD12_i0m2_i1_i2 + (2.0/3.0)*aDD12_i0p1_i1_i2 - 1.0/12.0*aDD12_i0p2_i1_i2);
                   const double aDD_dD121 = invdx1*(-2.0/3.0*aDD12_i0_i1m1_i2 + (1.0/12.0)*aDD12_i0_i1m2_i2 + (2.0/3.0)*aDD12_i0_i1p1_i2 - 1.0/12.0*aDD12_i0_i1p2_i2);
                   const double aDD_dD220 = invdx0*(-2.0/3.0*aDD22_i0m1_i1_i2 + (1.0/12.0)*aDD22_i0m2_i1_i2 + (2.0/3.0)*aDD22_i0p1_i1_i2 - 1.0/12.0*aDD22_i0p2_i1_i2);
                   const double aDD_dD221 = invdx1*(-2.0/3.0*aDD22_i0_i1m1_i2 + (1.0/12.0)*aDD22_i0_i1m2_i2 + (2.0/3.0)*aDD22_i0_i1p1_i2 - 1.0/12.0*aDD22_i0_i1p2_i2);
                   const double cf_dD0 = invdx0*(-2.0/3.0*cf_i0m1_i1_i2 + (1.0/12.0)*cf_i0m2_i1_i2 + (2.0/3.0)*cf_i0p1_i1_i2 - 1.0/12.0*cf_i0p2_i1_i2);
                   const double cf_dD1 = invdx1*(-2.0/3.0*cf_i0_i1m1_i2 + (1.0/12.0)*cf_i0_i1m2_i2 + (2.0/3.0)*cf_i0_i1p1_i2 - 1.0/12.0*cf_i0_i1p2_i2);
                   const double hDD_dD000 = invdx0*(-2.0/3.0*hDD00_i0m1_i1_i2 + (1.0/12.0)*hDD00_i0m2_i1_i2 + (2.0/3.0)*hDD00_i0p1_i1_i2 - 1.0/12.0*hDD00_i0p2_i1_i2);
                   const double hDD_dD001 = invdx1*(-2.0/3.0*hDD00_i0_i1m1_i2 + (1.0/12.0)*hDD00_i0_i1m2_i2 + (2.0/3.0)*hDD00_i0_i1p1_i2 - 1.0/12.0*hDD00_i0_i1p2_i2);
                   const double hDD_dD010 = invdx0*(-2.0/3.0*hDD01_i0m1_i1_i2 + (1.0/12.0)*hDD01_i0m2_i1_i2 + (2.0/3.0)*hDD01_i0p1_i1_i2 - 1.0/12.0*hDD01_i0p2_i1_i2);
                   const double hDD_dD011 = invdx1*(-2.0/3.0*hDD01_i0_i1m1_i2 + (1.0/12.0)*hDD01_i0_i1m2_i2 + (2.0/3.0)*hDD01_i0_i1p1_i2 - 1.0/12.0*hDD01_i0_i1p2_i2);
                   const double hDD_dD020 = invdx0*(-2.0/3.0*hDD02_i0m1_i1_i2 + (1.0/12.0)*hDD02_i0m2_i1_i2 + (2.0/3.0)*hDD02_i0p1_i1_i2 - 1.0/12.0*hDD02_i0p2_i1_i2);
                   const double hDD_dD021 = invdx1*(-2.0/3.0*hDD02_i0_i1m1_i2 + (1.0/12.0)*hDD02_i0_i1m2_i2 + (2.0/3.0)*hDD02_i0_i1p1_i2 - 1.0/12.0*hDD02_i0_i1p2_i2);
                   const double hDD_dD110 = invdx0*(-2.0/3.0*hDD11_i0m1_i1_i2 + (1.0/12.0)*hDD11_i0m2_i1_i2 + (2.0/3.0)*hDD11_i0p1_i1_i2 - 1.0/12.0*hDD11_i0p2_i1_i2);
                   const double hDD_dD111 = invdx1*(-2.0/3.0*hDD11_i0_i1m1_i2 + (1.0/12.0)*hDD11_i0_i1m2_i2 + (2.0/3.0)*hDD11_i0_i1p1_i2 - 1.0/12.0*hDD11_i0_i1p2_i2);
                   const double hDD_dD120 = invdx0*(-2.0/3.0*hDD12_i0m1_i1_i2 + (1.0/12.0)*hDD12_i0m2_i1_i2 + (2.0/3.0)*hDD12_i0p1_i1_i2 - 1.0/12.0*hDD12_i0p2_i1_i2);
                   const double hDD_dD121 = invdx1*(-2.0/3.0*hDD12_i0_i1m1_i2 + (1.0/12.0)*hDD12_i0_i1m2_i2 + (2.0/3.0)*hDD12_i0_i1p1_i2 - 1.0/12.0*hDD12_i0_i1p2_i2);
                   const double hDD_dD220 = invdx0*(-2.0/3.0*hDD22_i0m1_i1_i2 + (1.0/12.0)*hDD22_i0m2_i1_i2 + (2.0/3.0)*hDD22_i0p1_i1_i2 - 1.0/12.0*hDD22_i0p2_i1_i2);
                   const double hDD_dD221 = invdx1*(-2.0/3.0*hDD22_i0_i1m1_i2 + (1.0/12.0)*hDD22_i0_i1m2_i2 + (2.0/3.0)*hDD22_i0_i1p1_i2 - 1.0/12.0*hDD22_i0_i1p2_i2);
                   const double trK_dD0 = invdx0*(-2.0/3.0*trK_i0m1_i1_i2 + (1.0/12.0)*trK_i0m2_i1_i2 + (2.0/3.0)*trK_i0p1_i1_i2 - 1.0/12.0*trK_i0p2_i1_i2);
                   const double trK_dD1 = invdx1*(-2.0/3.0*trK_i0_i1m1_i2 + (1.0/12.0)*trK_i0_i1m2_i2 + (2.0/3.0)*trK_i0_i1p1_i2 - 1.0/12.0*trK_i0_i1p2_i2);
                   /* 
                    * NRPy+ Finite Difference Code Generation, Step 2 of 2: Evaluate SymPy expressions and write to main memory:
                    */
                   const double tmp0 = ((cf)*(cf));
                   const double tmp1 = sin(xx1);
                   const double tmp2 = ((tmp1)*(tmp1));
                   const double tmp3 = hDD12*((xx0)*(xx0)*(xx0));
                   const double tmp4 = ((xx0)*(xx0));
                   const double tmp5 = tmp2*tmp4;
                   const double tmp6 = hDD22*tmp5 + tmp5;
                   const double tmp7 = -hDD01*tmp6*xx0 + hDD02*tmp2*tmp3;
                   const double tmp8 = 2*hDD01;
                   const double tmp9 = tmp2*((xx0)*(xx0)*(xx0)*(xx0));
                   const double tmp10 = hDD00 + 1;
                   const double tmp11 = ((hDD12)*(hDD12))*tmp9;
                   const double tmp12 = hDD11*tmp4 + tmp4;
                   const double tmp13 = ((hDD02)*(hDD02))*tmp5;
                   const double tmp14 = ((hDD01)*(hDD01))*tmp4;
                   const double tmp15 = tmp12*tmp6;
                   const double tmp16 = hDD02*hDD12*tmp8*tmp9 - tmp10*tmp11 + tmp10*tmp15 - tmp12*tmp13 - tmp14*tmp6;
                   const double tmp17 = (1.0/(tmp16));
                   const double tmp18 = (2.0/3.0)*tmp17;
                   const double tmp19 = tmp18*trK_dD1;
                   const double tmp20 = -tmp11 + tmp15;
                   const double tmp21 = tmp18*trK_dD0;
                   const double tmp22 = (1.0/((tmp16)*(tmp16)));
                   const double tmp23 = hDD02*tmp1;
                   const double tmp24 = hDD01*tmp1*tmp3 - tmp12*tmp23*xx0;
                   const double tmp25 = tmp22*((tmp24)*(tmp24));
                   const double tmp26 = aDD22*tmp5;
                   const double tmp27 = 6*tmp26;
                   const double tmp28 = aDD11*tmp4;
                   const double tmp29 = tmp22*((tmp7)*(tmp7));
                   const double tmp30 = 6*tmp29;
                   const double tmp31 = ((tmp20)*(tmp20))*tmp22;
                   const double tmp32 = 6*aDD00;
                   const double tmp33 = tmp22*tmp7;
                   const double tmp34 = tmp24*tmp33;
                   const double tmp35 = tmp1*tmp4;
                   const double tmp36 = aDD12*tmp35;
                   const double tmp37 = 12*tmp36;
                   const double tmp38 = tmp20*tmp22;
                   const double tmp39 = tmp24*tmp38;
                   const double tmp40 = aDD02*tmp1;
                   const double tmp41 = tmp40*xx0;
                   const double tmp42 = 12*tmp41;
                   const double tmp43 = tmp38*tmp7;
                   const double tmp44 = aDD01*xx0;
                   const double tmp45 = 12*tmp44;
                   const double tmp46 = (1.0/2.0)/cf;
                   const double tmp47 = cf_dD0*tmp46;
                   const double tmp48 = 2*xx0;
                   const double tmp49 = tmp2*tmp48;
                   const double tmp50 = hDD01*tmp23*tmp4 - hDD12*tmp10*tmp35;
                   const double tmp51 = cos(xx1);
                   const double tmp52 = tmp51*xx0;
                   const double tmp53 = hDD02*tmp52;
                   const double tmp54 = tmp1*xx0;
                   const double tmp55 = hDD_dD021*tmp54;
                   const double tmp56 = hDD_dD120*tmp35;
                   const double tmp57 = tmp1*tmp48;
                   const double tmp58 = hDD12*tmp57;
                   const double tmp59 = tmp56 + tmp58;
                   const double tmp60 = (1.0/2.0)*tmp17;
                   const double tmp61 = tmp60*(-tmp53 - tmp55 + tmp59);
                   const double tmp62 = tmp10*tmp12 - tmp14;
                   const double tmp63 = hDD22*tmp49;
                   const double tmp64 = hDD_dD220*tmp5;
                   const double tmp65 = tmp60*(tmp49 + tmp63 + tmp64);
                   const double tmp66 = -tmp50*tmp61 - tmp62*tmp65;
                   const double tmp67 = tmp26*tmp66;
                   const double tmp68 = -tmp24*tmp65 - tmp61*tmp7;
                   const double tmp69 = tmp40*tmp48;
                   const double tmp70 = tmp10*tmp6 - tmp13;
                   const double tmp71 = -tmp50*tmp65 - tmp61*tmp70;
                   const double tmp72 = 2*tmp35;
                   const double tmp73 = aDD12*tmp72;
                   const double tmp74 = aDD22*tmp49 + aDD_dD220*tmp5 + 2*tmp67 + tmp68*tmp69 + tmp71*tmp73;
                   const double tmp75 = aDD01*tmp48;
                   const double tmp76 = aDD00*tmp68;
                   const double tmp77 = tmp66*tmp69 + tmp71*tmp75 + 2*tmp76;
                   const double tmp78 = tmp24*tmp77;
                   const double tmp79 = tmp53 + tmp55;
                   const double tmp80 = tmp60*(-tmp56 - tmp58 + tmp79);
                   const double tmp81 = tmp4*sin(2*xx1);
                   const double tmp82 = hDD_dD221*tmp5;
                   const double tmp83 = tmp51*tmp72;
                   const double tmp84 = hDD22*tmp83;
                   const double tmp85 = tmp60*(tmp81 + tmp82 + tmp84);
                   const double tmp86 = -tmp24*tmp80 - tmp62*tmp85;
                   const double tmp87 = -tmp50*tmp85 - tmp7*tmp80;
                   const double tmp88 = tmp28*tmp87;
                   const double tmp89 = -tmp20*tmp80 - tmp24*tmp85;
                   const double tmp90 = tmp73*tmp86 + tmp75*tmp89 + 2*tmp88;
                   const double tmp91 = tmp50*tmp90;
                   const double tmp92 = tmp26*tmp86;
                   const double tmp93 = aDD22*tmp83 + aDD_dD221*tmp5 + tmp69*tmp89 + tmp73*tmp87 + 2*tmp92;
                   const double tmp94 = tmp50*tmp93;
                   const double tmp95 = tmp22*tmp24;
                   const double tmp96 = tmp60*(-tmp81 - tmp82 - tmp84);
                   const double tmp97 = tmp60*(-tmp49 - tmp63 - tmp64);
                   const double tmp98 = -tmp24*tmp97 - tmp50*tmp96;
                   const double tmp99 = -tmp7*tmp97 - tmp70*tmp96;
                   const double tmp100 = -tmp20*tmp97 - tmp7*tmp96;
                   const double tmp101 = tmp22*(tmp100*tmp69 + 2*tmp26*tmp98 + tmp73*tmp99);
                   const double tmp102 = tmp101*tmp62;
                   const double tmp103 = hDD_dD000*tmp60;
                   const double tmp104 = tmp60*(-hDD_dD001 + hDD_dD010*tmp48 + tmp8);
                   const double tmp105 = tmp60*(hDD_dD020*tmp57 + 2*tmp23);
                   const double tmp106 = -tmp103*tmp24 - tmp104*tmp50 - tmp105*tmp62;
                   const double tmp107 = -tmp103*tmp7 - tmp104*tmp70 - tmp105*tmp50;
                   const double tmp108 = -tmp103*tmp20 - tmp104*tmp7 - tmp105*tmp24;
                   const double tmp109 = 2*aDD00*tmp108 + aDD_dD000 + tmp106*tmp69 + tmp107*tmp75;
                   const double tmp110 = hDD_dD001*tmp60;
                   const double tmp111 = hDD11*tmp48;
                   const double tmp112 = hDD_dD110*tmp4;
                   const double tmp113 = tmp60*(tmp111 + tmp112 + tmp48);
                   const double tmp114 = tmp60*(tmp59 + tmp79);
                   const double tmp115 = -tmp110*tmp24 - tmp113*tmp50 - tmp114*tmp62;
                   const double tmp116 = -tmp110*tmp7 - tmp113*tmp70 - tmp114*tmp50;
                   const double tmp117 = tmp116*tmp28;
                   const double tmp118 = -tmp110*tmp20 - tmp113*tmp7 - tmp114*tmp24;
                   const double tmp119 = aDD11*tmp48 + aDD_dD110*tmp4 + tmp115*tmp73 + 2*tmp117 + tmp118*tmp75;
                   const double tmp120 = aDD00*tmp118;
                   const double tmp121 = aDD_dD001 + tmp115*tmp69 + tmp116*tmp75 + 2*tmp120;
                   const double tmp122 = tmp50*tmp95;
                   const double tmp123 = tmp33*tmp50;
                   const double tmp124 = 6*tmp36;
                   const double tmp125 = 6*tmp41;
                   const double tmp126 = tmp38*tmp50;
                   const double tmp127 = tmp22*tmp70;
                   const double tmp128 = tmp127*tmp24;
                   const double tmp129 = tmp127*tmp7;
                   const double tmp130 = 6*tmp28;
                   const double tmp131 = tmp127*tmp20;
                   const double tmp132 = 6*tmp44;
                   const double tmp133 = tmp122*tmp27 + tmp123*tmp124 + tmp124*tmp128 + tmp125*tmp126 + tmp125*tmp34 + tmp129*tmp130 + tmp131*tmp132 + tmp30*tmp44 + tmp32*tmp43;
                   const double tmp134 = cf_dD1*tmp46;
                   const double tmp135 = hDD_dD111*tmp4*tmp60;
                   const double tmp136 = tmp4*tmp51;
                   const double tmp137 = tmp60*(2*hDD12*tmp136 + hDD_dD121*tmp72);
                   const double tmp138 = tmp60*(hDD_dD011*tmp48 - tmp111 - tmp112 - tmp48);
                   const double tmp139 = -tmp135*tmp50 - tmp137*tmp62 - tmp138*tmp24;
                   const double tmp140 = -tmp135*tmp70 - tmp137*tmp50 - tmp138*tmp7;
                   const double tmp141 = -tmp135*tmp7 - tmp137*tmp24 - tmp138*tmp20;
                   const double tmp142 = tmp22*(aDD_dD111*tmp4 + tmp139*tmp73 + 2*tmp140*tmp28 + tmp141*tmp75);
                   const double tmp143 = tmp142*tmp70;
                   const double tmp144 = aDD00*tmp89 + tmp41*tmp86 + tmp44*tmp87;
                   const double tmp145 = tmp28*tmp71 + tmp36*tmp66 + tmp44*tmp68;
                   const double tmp146 = tmp144 + tmp145;
                   const double tmp147 = aDD00*tmp100 + tmp36*tmp71 + tmp41*tmp68 + tmp41*tmp98 + tmp44*tmp99 + tmp67;
                   const double tmp148 = tmp22*tmp62;
                   const double tmp149 = tmp147*tmp148;
                   const double tmp150 = tmp100*tmp44 + tmp28*tmp99 + tmp36*tmp87 + tmp36*tmp98 + tmp41*tmp89 + tmp92;
                   const double tmp151 = tmp148*tmp150;
                   const double tmp152 = aDD_dD020*tmp54 + tmp106*tmp26 + tmp107*tmp36 + tmp108*tmp41 + tmp40 + tmp41*tmp66 + tmp44*tmp71 + tmp76;
                   const double tmp153 = tmp115*tmp26 + tmp116*tmp36 + tmp118*tmp41;
                   const double tmp154 = aDD12*tmp57 + aDD_dD120*tmp35 + tmp145 + tmp153;
                   const double tmp155 = aDD02*tmp52 + aDD_dD021*tmp54 + tmp144 + tmp153;
                   const double tmp156 = aDD12*tmp136 + aDD_dD121*tmp35 + tmp139*tmp26 + tmp140*tmp36 + tmp141*tmp41 + tmp36*tmp86 + tmp44*tmp89 + tmp88;
                   const double tmp157 = aDD01 + aDD_dD010*xx0 + tmp106*tmp36 + tmp107*tmp28 + tmp108*tmp44 + tmp115*tmp41 + tmp116*tmp44 + tmp120;
                   const double tmp158 = aDD00*tmp141 + aDD_dD011*xx0 + tmp115*tmp36 + tmp117 + tmp118*tmp44 + tmp139*tmp41 + tmp140*tmp44;
                   const double tmp159 = tmp22*((tmp50)*(tmp50));
                   const double tmp160 = ((tmp70)*(tmp70));
                   const double tmp161 = tmp127*tmp50;
                   const double tmp162 = 2*tmp50;
                   const double tmp163 = tmp148*tmp24;
                   const double tmp164 = tmp148*tmp7;
                   const double tmp165 = tmp148*tmp70;
                   const double tmp166 = tmp148*tmp20;
                   aux_gfs[IDX4S(MU0GF, i0, i1, i2)] = tmp0*(tmp102*tmp24 + tmp109*tmp31 + tmp119*tmp29 + tmp121*tmp43 + tmp122*tmp150 + tmp123*tmp156 + tmp126*tmp146 + tmp126*tmp155 + tmp128*tmp156 + tmp131*tmp158 - tmp133*tmp134 + tmp143*tmp7 + tmp146*tmp34 + tmp147*tmp25 + tmp149*tmp20 + tmp151*tmp7 + 2*tmp152*tmp39 + 2*tmp154*tmp34 + tmp155*tmp34 + 2*tmp157*tmp43 + tmp158*tmp29 - tmp19*tmp7 - tmp20*tmp21 + tmp25*tmp74 + tmp33*tmp91 + tmp38*tmp78 - tmp47*(tmp25*tmp27 + tmp28*tmp30 + tmp31*tmp32 + tmp34*tmp37 + tmp39*tmp42 + tmp43*tmp45) + tmp94*tmp95);
                   aux_gfs[IDX4S(MU1GF, i0, i1, i2)] = tmp0*xx0*(tmp102*tmp50 + tmp109*tmp43 + tmp119*tmp129 + tmp121*tmp29 + tmp122*tmp147 + tmp122*tmp74 + tmp123*tmp146 + tmp123*tmp154 + 2*tmp123*tmp155 + tmp126*tmp152 + tmp127*tmp156*tmp162 + tmp127*tmp91 + tmp128*tmp146 + tmp128*tmp154 + 2*tmp129*tmp158 + tmp131*tmp157 - tmp133*tmp47 - tmp134*(tmp123*tmp42 + tmp129*tmp45 + tmp130*tmp160*tmp22 + tmp159*tmp27 + tmp161*tmp37 + tmp29*tmp32) + tmp142*tmp160 + tmp149*tmp7 + tmp150*tmp159 + tmp151*tmp70 + tmp152*tmp34 + tmp157*tmp29 + tmp159*tmp93 - tmp19*tmp70 - tmp21*tmp7 + tmp33*tmp78);
                   aux_gfs[IDX4S(MU2GF, i0, i1, i2)] = tmp0*tmp54*(tmp101*((tmp62)*(tmp62)) + tmp109*tmp39 + tmp119*tmp123 + tmp121*tmp34 + 2*tmp122*tmp146 + tmp122*tmp154 + tmp122*tmp155 + tmp123*tmp158 + tmp126*tmp157 + tmp128*tmp158 - tmp134*(tmp122*tmp125 + tmp123*tmp132 + tmp124*tmp159 + tmp124*tmp165 + tmp125*tmp164 + tmp128*tmp132 + tmp130*tmp161 + tmp148*tmp27*tmp50 + tmp32*tmp34) + tmp143*tmp50 + tmp148*tmp94 + 2*tmp149*tmp24 + tmp151*tmp162 + tmp152*tmp166 + tmp152*tmp25 + tmp154*tmp164 + tmp155*tmp164 + tmp156*tmp159 + tmp156*tmp165 + tmp157*tmp34 + tmp159*tmp90 + tmp163*tmp74 - tmp19*tmp50 - tmp21*tmp24 + tmp25*tmp77 - tmp47*(tmp122*tmp124 + tmp123*tmp130 + tmp124*tmp164 + tmp125*tmp166 + tmp125*tmp25 + tmp126*tmp132 + tmp132*tmp34 + tmp163*tmp27 + tmp32*tmp39));
                }
                
                
            } // END LOOP: for(int i0=NGHOSTS; i0<NGHOSTS+Nxx0; i0++)
        } // END LOOP: for(int i1=NGHOSTS; i1<NGHOSTS+Nxx1; i1++)
    } // END LOOP: for(int i2=NGHOSTS; i2<NGHOSTS+Nxx2; i2++)
}
